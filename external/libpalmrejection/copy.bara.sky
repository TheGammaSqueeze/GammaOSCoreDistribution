core.workflow(
    name = "default",
    origin = git.origin(
        url = "https://chromium.googlesource.com/chromium/src.git",
        ref = "main",
    ),
    origin_files = glob(
        [
            ".clang-format",
            "ui/events/event_constants.h",
            "ui/events/ozone/features.cc",
            "ui/events/ozone/features.h",
            "ui/events/ozone/evdev/touch_evdev_types.cc",
            "ui/events/ozone/evdev/touch_evdev_types.h",
            "ui/events/ozone/evdev/touch_filter/neural_stylus_palm_detection_filter.cc",
            "ui/events/ozone/evdev/touch_filter/neural_stylus_palm_detection_filter_model.h",
            "ui/events/ozone/evdev/touch_filter/neural_stylus_palm_detection_filter_model.cc",
            "ui/events/ozone/evdev/touch_filter/palm_detection_filter.h",
            "ui/events/ozone/evdev/touch_filter/palm_detection_filter.cc",
            "ui/events/ozone/evdev/touch_filter/palm_model/**",
            "ui/events/ozone/evdev/touch_filter/shared_palm_detection_filter_state.h",
            "ui/events/ozone/evdev/touch_filter/shared_palm_detection_filter_state.cc",
            "ui/events/ozone/evdev/touch_filter/neural_stylus_palm_detection_filter.h",
            "ui/events/ozone/evdev/touch_filter/neural_stylus_palm_detection_filter_model.cc",
            "ui/events/ozone/evdev/touch_filter/neural_stylus_palm_detection_filter_model.h",
            "ui/events/ozone/evdev/touch_filter/neural_stylus_palm_detection_filter_unittest.cc",
            "ui/events/ozone/evdev/touch_filter/neural_stylus_palm_detection_filter_util.cc",
            "ui/events/ozone/evdev/touch_filter/neural_stylus_palm_detection_filter_util.h",
            "ui/events/ozone/evdev/touch_filter/neural_stylus_palm_detection_filter_util_unittest.cc",
            "ui/events/ozone/evdev/touch_filter/palm_detection_filter.cc",
            "ui/events/ozone/evdev/touch_filter/palm_detection_filter.h",
            "ui/events/ozone/evdev/touch_filter/palm_model/onedevice_train_palm_detection_filter_inference.cc",
            "ui/events/ozone/evdev/touch_filter/palm_model/onedevice_train_palm_detection_filter_inference.h",
            "ui/events/ozone/evdev/touch_filter/palm_model/onedevice_train_palm_detection_filter_inference_beta.cc",
            "ui/events/ozone/evdev/touch_filter/palm_model/onedevice_train_palm_detection_filter_inference_beta.h",
            "ui/events/ozone/evdev/touch_filter/palm_model/onedevice_train_palm_detection_filter_inference_v2.cc",
            "ui/events/ozone/evdev/touch_filter/palm_model/onedevice_train_palm_detection_filter_inference_v2.h",
            "ui/events/ozone/evdev/touch_filter/palm_model/onedevice_train_palm_detection_filter_model.cc",
            "ui/events/ozone/evdev/touch_filter/palm_model/onedevice_train_palm_detection_filter_model.h",
            "ui/events/ozone/evdev/touch_filter/shared_palm_detection_filter_state.h",
        ],
        exclude = [
            "**/BUILD.gn",
        ],
    ),
    destination = git.gerrit_destination(
        url = "https://android.googlesource.com/platform/external/libpalmrejection",
        fetch = "master",
    ),
    destination_files = glob(
        [
            ".clang-format",
            "ui/events/event_constants.h",
            "ui/events/ozone/features.cc",
            "ui/events/ozone/features.h",
            "ui/events/ozone/evdev/touch_evdev_types.cc",
            "ui/events/ozone/evdev/touch_evdev_types.h",
            "ui/events/ozone/evdev/touch_filter/neural_stylus_palm_detection_filter.cc",
            "ui/events/ozone/evdev/touch_filter/neural_stylus_palm_detection_filter_model.h",
            "ui/events/ozone/evdev/touch_filter/neural_stylus_palm_detection_filter_model.cc",
            "ui/events/ozone/evdev/touch_filter/palm_detection_filter.h",
            "ui/events/ozone/evdev/touch_filter/palm_detection_filter.cc",
            "ui/events/ozone/evdev/touch_filter/palm_model/**",
            "ui/events/ozone/evdev/touch_filter/shared_palm_detection_filter_state.h",
            "ui/events/ozone/evdev/touch_filter/shared_palm_detection_filter_state.cc",
            "ui/events/ozone/evdev/touch_filter/neural_stylus_palm_detection_filter.h",
            "ui/events/ozone/evdev/touch_filter/neural_stylus_palm_detection_filter_model.cc",
            "ui/events/ozone/evdev/touch_filter/neural_stylus_palm_detection_filter_model.h",
            "ui/events/ozone/evdev/touch_filter/neural_stylus_palm_detection_filter_unittest.cc",
            "ui/events/ozone/evdev/touch_filter/neural_stylus_palm_detection_filter_util.cc",
            "ui/events/ozone/evdev/touch_filter/neural_stylus_palm_detection_filter_util.h",
            "ui/events/ozone/evdev/touch_filter/neural_stylus_palm_detection_filter_util_unittest.cc",
            "ui/events/ozone/evdev/touch_filter/palm_detection_filter.cc",
            "ui/events/ozone/evdev/touch_filter/palm_detection_filter.h",
            "ui/events/ozone/evdev/touch_filter/palm_model/onedevice_train_palm_detection_filter_inference.cc",
            "ui/events/ozone/evdev/touch_filter/palm_model/onedevice_train_palm_detection_filter_inference.h",
            "ui/events/ozone/evdev/touch_filter/palm_model/onedevice_train_palm_detection_filter_inference_beta.cc",
            "ui/events/ozone/evdev/touch_filter/palm_model/onedevice_train_palm_detection_filter_inference_beta.h",
            "ui/events/ozone/evdev/touch_filter/palm_model/onedevice_train_palm_detection_filter_inference_v2.cc",
            "ui/events/ozone/evdev/touch_filter/palm_model/onedevice_train_palm_detection_filter_inference_v2.h",
            "ui/events/ozone/evdev/touch_filter/palm_model/onedevice_train_palm_detection_filter_model.cc",
            "ui/events/ozone/evdev/touch_filter/palm_model/onedevice_train_palm_detection_filter_model.h",
            "ui/events/ozone/evdev/touch_filter/shared_palm_detection_filter_state.h",
        ],
        exclude = [
            "**/Android.bp",
            "LICENSE",
            "METADATA",
            "MODULE_LICENSE_BSD",
            "OWNERS",
            "PREUPLOAD.cfg",
            "TEST_MAPPING",
            "chrome_to_android_compatibility.cc",
            "chrome_to_android_compatibility.h",
            "chrome_to_android_compatibility_test_support.cc",
            "copy.bara.sky",
        ],
    ),
    authoring = authoring.pass_thru(
        "Android Framework Input <android-framework-input@google.com>"
    ),
    mode = 'SQUASH',
    transformations = [
    ],
)