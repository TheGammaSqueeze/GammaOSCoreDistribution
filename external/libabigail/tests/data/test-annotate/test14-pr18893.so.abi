<abi-corpus version='2.1' architecture='elf-amd-x86_64' soname='libGLU.so.1'>
  <elf-needed>
    <dependency name='libGL.so.1'/>
    <dependency name='libstdc++.so.6'/>
    <dependency name='libm.so.6'/>
    <dependency name='libgcc_s.so.1'/>
    <dependency name='libc.so.6'/>
  </elf-needed>
  <elf-function-symbols>
    <!-- gluBeginCurve -->
    <elf-symbol name='gluBeginCurve' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluBeginPolygon -->
    <elf-symbol name='gluBeginPolygon' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluBeginSurface -->
    <elf-symbol name='gluBeginSurface' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluBeginTrim -->
    <elf-symbol name='gluBeginTrim' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluBuild1DMipmapLevels -->
    <elf-symbol name='gluBuild1DMipmapLevels' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluBuild1DMipmaps -->
    <elf-symbol name='gluBuild1DMipmaps' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluBuild2DMipmapLevels -->
    <elf-symbol name='gluBuild2DMipmapLevels' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluBuild2DMipmaps -->
    <elf-symbol name='gluBuild2DMipmaps' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluBuild3DMipmapLevels -->
    <elf-symbol name='gluBuild3DMipmapLevels' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluBuild3DMipmaps -->
    <elf-symbol name='gluBuild3DMipmaps' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluCheckExtension -->
    <elf-symbol name='gluCheckExtension' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluCylinder -->
    <elf-symbol name='gluCylinder' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluDeleteNurbsRenderer -->
    <elf-symbol name='gluDeleteNurbsRenderer' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluDeleteQuadric -->
    <elf-symbol name='gluDeleteQuadric' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluDeleteTess -->
    <elf-symbol name='gluDeleteTess' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluDisk -->
    <elf-symbol name='gluDisk' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluEndCurve -->
    <elf-symbol name='gluEndCurve' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluEndPolygon -->
    <elf-symbol name='gluEndPolygon' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluEndSurface -->
    <elf-symbol name='gluEndSurface' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluEndTrim -->
    <elf-symbol name='gluEndTrim' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluErrorString -->
    <elf-symbol name='gluErrorString' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluGetNurbsProperty -->
    <elf-symbol name='gluGetNurbsProperty' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluGetString -->
    <elf-symbol name='gluGetString' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluGetTessProperty -->
    <elf-symbol name='gluGetTessProperty' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluLoadSamplingMatrices -->
    <elf-symbol name='gluLoadSamplingMatrices' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluLookAt -->
    <elf-symbol name='gluLookAt' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluNewNurbsRenderer -->
    <elf-symbol name='gluNewNurbsRenderer' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluNewQuadric -->
    <elf-symbol name='gluNewQuadric' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluNewTess -->
    <elf-symbol name='gluNewTess' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluNextContour -->
    <elf-symbol name='gluNextContour' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluNurbsCallback -->
    <elf-symbol name='gluNurbsCallback' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluNurbsCallbackData -->
    <elf-symbol name='gluNurbsCallbackData' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluNurbsCallbackDataEXT -->
    <elf-symbol name='gluNurbsCallbackDataEXT' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluNurbsCurve -->
    <elf-symbol name='gluNurbsCurve' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluNurbsProperty -->
    <elf-symbol name='gluNurbsProperty' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluNurbsSurface -->
    <elf-symbol name='gluNurbsSurface' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluOrtho2D -->
    <elf-symbol name='gluOrtho2D' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluPartialDisk -->
    <elf-symbol name='gluPartialDisk' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluPerspective -->
    <elf-symbol name='gluPerspective' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluPickMatrix -->
    <elf-symbol name='gluPickMatrix' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluProject -->
    <elf-symbol name='gluProject' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluPwlCurve -->
    <elf-symbol name='gluPwlCurve' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluQuadricCallback -->
    <elf-symbol name='gluQuadricCallback' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluQuadricDrawStyle -->
    <elf-symbol name='gluQuadricDrawStyle' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluQuadricNormals -->
    <elf-symbol name='gluQuadricNormals' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluQuadricOrientation -->
    <elf-symbol name='gluQuadricOrientation' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluQuadricTexture -->
    <elf-symbol name='gluQuadricTexture' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluScaleImage -->
    <elf-symbol name='gluScaleImage' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluSphere -->
    <elf-symbol name='gluSphere' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluTessBeginContour -->
    <elf-symbol name='gluTessBeginContour' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluTessBeginPolygon -->
    <elf-symbol name='gluTessBeginPolygon' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluTessCallback -->
    <elf-symbol name='gluTessCallback' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluTessEndContour -->
    <elf-symbol name='gluTessEndContour' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluTessEndPolygon -->
    <elf-symbol name='gluTessEndPolygon' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluTessNormal -->
    <elf-symbol name='gluTessNormal' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluTessProperty -->
    <elf-symbol name='gluTessProperty' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluTessVertex -->
    <elf-symbol name='gluTessVertex' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluUnProject -->
    <elf-symbol name='gluUnProject' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gluUnProject4 -->
    <elf-symbol name='gluUnProject4' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
  </elf-function-symbols>
  <abi-instr address-size='64' path='libnurbs/interface/glcurveval.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- REAL[160] -->
    <array-type-def dimensions='1' type-id='type-id-1' size-in-bits='5120' id='type-id-2'>
      <!-- <anonymous range>[160] -->
      <subrange length='160' type-id='type-id-3' id='type-id-4'/>
    </array-type-def>
    <!-- REAL[40] -->
    <array-type-def dimensions='1' type-id='type-id-1' size-in-bits='1280' id='type-id-5'>
      <!-- <anonymous range>[40] -->
      <subrange length='40' type-id='type-id-3' id='type-id-6'/>
    </array-type-def>
    <!-- struct curveEvalMachine -->
    <class-decl name='curveEvalMachine' size-in-bits='6592' is-struct='yes' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='55' column='1' id='type-id-7'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- REAL curveEvalMachine::uprime -->
        <var-decl name='uprime' type-id='type-id-1' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='56' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- int curveEvalMachine::k -->
        <var-decl name='k' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='57' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- REAL curveEvalMachine::u1 -->
        <var-decl name='u1' type-id='type-id-1' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='58' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- REAL curveEvalMachine::u2 -->
        <var-decl name='u2' type-id='type-id-1' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='59' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- int curveEvalMachine::ustride -->
        <var-decl name='ustride' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='60' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='160'>
        <!-- int curveEvalMachine::uorder -->
        <var-decl name='uorder' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='61' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- REAL curveEvalMachine::ctlpoints[160] -->
        <var-decl name='ctlpoints' type-id='type-id-2' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='62' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5312'>
        <!-- REAL curveEvalMachine::ucoeff[40] -->
        <var-decl name='ucoeff' type-id='type-id-5' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='63' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef curveEvalMachine curveEvalMachine -->
    <typedef-decl name='curveEvalMachine' type-id='type-id-7' filepath='libnurbs/interface/glcurveval.h' line='64' column='1' id='type-id-9'/>
    <!-- class CachingEvaluator -->
    <class-decl name='CachingEvaluator' size-in-bits='64' visibility='default' filepath='libnurbs/internals/cachingeval.h' line='39' column='1' id='type-id-10'>
      <member-type access='private'>
        <!-- enum CachingEvaluator::ServiceMode -->
        <enum-decl name='ServiceMode' filepath='libnurbs/internals/cachingeval.h' line='42' column='1' id='type-id-11'>
          <underlying-type type-id='type-id-12'/>
          <enumerator name='play' value='0'/>
          <enumerator name='record' value='1'/>
          <enumerator name='playAndRecord' value='2'/>
        </enum-decl>
      </member-type>
      <member-function access='private' destructor='yes' vtable-offset='-1'>
        <!-- CachingEvaluator::~CachingEvaluator(int) -->
        <function-decl name='~CachingEvaluator' filepath='libnurbs/internals/cachingeval.h' line='41' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CachingEvaluator*' -->
          <parameter type-id='type-id-13' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='2'>
        <!-- int CachingEvaluator::canRecord() -->
        <function-decl name='canRecord' mangled-name='_ZN16CachingEvaluator9canRecordEv' filepath='libnurbs/internals/cachingeval.cc' line='43' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CachingEvaluator*' -->
          <parameter type-id='type-id-13' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='3'>
        <!-- int CachingEvaluator::canPlayAndRecord() -->
        <function-decl name='canPlayAndRecord' mangled-name='_ZN16CachingEvaluator16canPlayAndRecordEv' filepath='libnurbs/internals/cachingeval.cc' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CachingEvaluator*' -->
          <parameter type-id='type-id-13' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='4'>
        <!-- int CachingEvaluator::createHandle(int) -->
        <function-decl name='createHandle' mangled-name='_ZN16CachingEvaluator12createHandleEi' filepath='libnurbs/internals/cachingeval.cc' line='55' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CachingEvaluator*' -->
          <parameter type-id='type-id-13' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='5'>
        <!-- void CachingEvaluator::beginOutput(CachingEvaluator::ServiceMode, int) -->
        <function-decl name='beginOutput' mangled-name='_ZN16CachingEvaluator11beginOutputENS_11ServiceModeEi' filepath='libnurbs/internals/cachingeval.cc' line='61' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CachingEvaluator*' -->
          <parameter type-id='type-id-13' is-artificial='yes'/>
          <!-- parameter of type 'enum CachingEvaluator::ServiceMode' -->
          <parameter type-id='type-id-11'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='6'>
        <!-- void CachingEvaluator::endOutput() -->
        <function-decl name='endOutput' mangled-name='_ZN16CachingEvaluator9endOutputEv' filepath='libnurbs/internals/cachingeval.cc' line='66' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CachingEvaluator*' -->
          <parameter type-id='type-id-13' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='7'>
        <!-- void CachingEvaluator::discardRecording(int) -->
        <function-decl name='discardRecording' mangled-name='_ZN16CachingEvaluator16discardRecordingEi' filepath='libnurbs/internals/cachingeval.cc' line='71' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CachingEvaluator*' -->
          <parameter type-id='type-id-13' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='8'>
        <!-- void CachingEvaluator::playRecording(int) -->
        <function-decl name='playRecording' mangled-name='_ZN16CachingEvaluator13playRecordingEi' filepath='libnurbs/internals/cachingeval.cc' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CachingEvaluator*' -->
          <parameter type-id='type-id-13' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- typedef float REAL -->
    <typedef-decl name='REAL' type-id='type-id-15' filepath='libnurbs/internals/types.h' line='41' column='1' id='type-id-1'/>
    <!-- BasicCurveEvaluator* -->
    <pointer-type-def type-id='type-id-16' size-in-bits='64' id='type-id-17'/>
    <!-- CachingEvaluator* -->
    <pointer-type-def type-id='type-id-10' size-in-bits='64' id='type-id-13'/>
    <!-- CurveMap* -->
    <pointer-type-def type-id='type-id-18' size-in-bits='64' id='type-id-19'/>
    <!-- OpenGLCurveEvaluator* -->
    <pointer-type-def type-id='type-id-20' size-in-bits='64' id='type-id-21'/>
    <!-- REAL* -->
    <pointer-type-def type-id='type-id-1' size-in-bits='64' id='type-id-22'/>
    <!-- const GLfloat -->
    <qualified-type-def type-id='type-id-23' const='yes' id='type-id-24'/>
    <!-- const GLfloat* -->
    <pointer-type-def type-id='type-id-24' size-in-bits='64' id='type-id-25'/>
    <!-- curveEvalMachine* -->
    <pointer-type-def type-id='type-id-9' size-in-bits='64' id='type-id-26'/>
    <!-- void (const GLfloat*)* -->
    <pointer-type-def type-id='type-id-27' size-in-bits='64' id='type-id-28'/>
    <!-- void (const GLfloat*, void*)* -->
    <pointer-type-def type-id='type-id-29' size-in-bits='64' id='type-id-30'/>
    <!-- struct CurveMap -->
    <class-decl name='CurveMap' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-18'/>
    <!-- class OpenGLCurveEvaluator -->
    <class-decl name='OpenGLCurveEvaluator' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='66' column='1' is-declaration-only='yes' id='type-id-20'>
      <!-- struct BasicCurveEvaluator -->
      <base-class access='public' layout-offset-in-bits='0' type-id='type-id-16'/>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- curveEvalMachine OpenGLCurveEvaluator::em_vertex -->
        <var-decl name='em_vertex' type-id='type-id-9' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='102' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='6656'>
        <!-- curveEvalMachine OpenGLCurveEvaluator::em_normal -->
        <var-decl name='em_normal' type-id='type-id-9' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='103' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='13248'>
        <!-- curveEvalMachine OpenGLCurveEvaluator::em_color -->
        <var-decl name='em_color' type-id='type-id-9' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='104' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='19840'>
        <!-- curveEvalMachine OpenGLCurveEvaluator::em_texcoord -->
        <var-decl name='em_texcoord' type-id='type-id-9' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='105' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='26432'>
        <!-- int OpenGLCurveEvaluator::vertex_flag -->
        <var-decl name='vertex_flag' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='106' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='26464'>
        <!-- int OpenGLCurveEvaluator::normal_flag -->
        <var-decl name='normal_flag' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='107' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='26496'>
        <!-- int OpenGLCurveEvaluator::color_flag -->
        <var-decl name='color_flag' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='108' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='26528'>
        <!-- int OpenGLCurveEvaluator::texcoord_flag -->
        <var-decl name='texcoord_flag' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='109' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='26560'>
        <!-- REAL OpenGLCurveEvaluator::global_grid_u0 -->
        <var-decl name='global_grid_u0' type-id='type-id-1' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='111' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='26592'>
        <!-- REAL OpenGLCurveEvaluator::global_grid_u1 -->
        <var-decl name='global_grid_u1' type-id='type-id-1' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='112' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='26624'>
        <!-- int OpenGLCurveEvaluator::global_grid_nu -->
        <var-decl name='global_grid_nu' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='113' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='26688'>
        <!-- void (typedef GLenum)* OpenGLCurveEvaluator::beginCallBackN -->
        <var-decl name='beginCallBackN' type-id='type-id-31' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='128' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='26752'>
        <!-- void ()* OpenGLCurveEvaluator::endCallBackN -->
        <var-decl name='endCallBackN' type-id='type-id-32' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='129' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='26816'>
        <!-- void (const GLfloat*)* OpenGLCurveEvaluator::vertexCallBackN -->
        <var-decl name='vertexCallBackN' type-id='type-id-28' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='130' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='26880'>
        <!-- void (const GLfloat*)* OpenGLCurveEvaluator::normalCallBackN -->
        <var-decl name='normalCallBackN' type-id='type-id-28' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='131' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='26944'>
        <!-- void (const GLfloat*)* OpenGLCurveEvaluator::colorCallBackN -->
        <var-decl name='colorCallBackN' type-id='type-id-28' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='132' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='27008'>
        <!-- void (const GLfloat*)* OpenGLCurveEvaluator::texcoordCallBackN -->
        <var-decl name='texcoordCallBackN' type-id='type-id-28' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='133' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='27072'>
        <!-- void (typedef GLenum, void*)* OpenGLCurveEvaluator::beginCallBackData -->
        <var-decl name='beginCallBackData' type-id='type-id-33' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='135' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='27136'>
        <!-- void (void*)* OpenGLCurveEvaluator::endCallBackData -->
        <var-decl name='endCallBackData' type-id='type-id-34' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='136' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='27200'>
        <!-- void (const GLfloat*, void*)* OpenGLCurveEvaluator::vertexCallBackData -->
        <var-decl name='vertexCallBackData' type-id='type-id-30' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='137' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='27264'>
        <!-- void (const GLfloat*, void*)* OpenGLCurveEvaluator::normalCallBackData -->
        <var-decl name='normalCallBackData' type-id='type-id-30' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='138' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='27328'>
        <!-- void (const GLfloat*, void*)* OpenGLCurveEvaluator::colorCallBackData -->
        <var-decl name='colorCallBackData' type-id='type-id-30' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='139' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='27392'>
        <!-- void (const GLfloat*, void*)* OpenGLCurveEvaluator::texcoordCallBackData -->
        <var-decl name='texcoordCallBackData' type-id='type-id-30' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='140' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='27456'>
        <!-- void* OpenGLCurveEvaluator::userData -->
        <var-decl name='userData' type-id='type-id-35' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='142' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='27520'>
        <!-- int OpenGLCurveEvaluator::output_triangles -->
        <var-decl name='output_triangles' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glcurveval.h' line='154' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- OpenGLCurveEvaluator::OpenGLCurveEvaluator() -->
        <function-decl name='OpenGLCurveEvaluator' filepath='libnurbs/interface/glcurveval.cc' line='48' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLCurveEvaluator::addMap(CurveMap*) -->
        <function-decl name='addMap' mangled-name='_ZN20OpenGLCurveEvaluator6addMapEP8CurveMap' filepath='libnurbs/interface/glcurveval.cc' line='84' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- parameter of type 'CurveMap*' -->
          <parameter type-id='type-id-19'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLCurveEvaluator::putCallBack(GLenum, _GLUfuncptr) -->
        <function-decl name='putCallBack' mangled-name='_ZN20OpenGLCurveEvaluator11putCallBackEjPFvvE' filepath='libnurbs/interface/glcurveval.cc' line='305' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- parameter of type 'typedef GLenum' -->
          <parameter type-id='type-id-36'/>
          <!-- parameter of type 'typedef _GLUfuncptr' -->
          <parameter type-id='type-id-37'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLCurveEvaluator::beginCallBack(GLenum, void*) -->
        <function-decl name='beginCallBack' mangled-name='_ZN20OpenGLCurveEvaluator13beginCallBackEjPv' filepath='libnurbs/interface/glcurveval.cc' line='350' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- parameter of type 'typedef GLenum' -->
          <parameter type-id='type-id-36'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-35'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLCurveEvaluator::endCallBack(void*) -->
        <function-decl name='endCallBack' mangled-name='_ZN20OpenGLCurveEvaluator11endCallBackEPv' filepath='libnurbs/interface/glcurveval.cc' line='359' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-35'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLCurveEvaluator::vertexCallBack(const GLfloat*, void*) -->
        <function-decl name='vertexCallBack' mangled-name='_ZN20OpenGLCurveEvaluator14vertexCallBackEPKfPv' filepath='libnurbs/interface/glcurveval.cc' line='368' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- parameter of type 'const GLfloat*' -->
          <parameter type-id='type-id-25'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-35'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLCurveEvaluator::normalCallBack(const GLfloat*, void*) -->
        <function-decl name='normalCallBack' mangled-name='_ZN20OpenGLCurveEvaluator14normalCallBackEPKfPv' filepath='libnurbs/interface/glcurveval.cc' line='378' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- parameter of type 'const GLfloat*' -->
          <parameter type-id='type-id-25'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-35'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLCurveEvaluator::colorCallBack(const GLfloat*, void*) -->
        <function-decl name='colorCallBack' mangled-name='_ZN20OpenGLCurveEvaluator13colorCallBackEPKfPv' filepath='libnurbs/interface/glcurveval.cc' line='387' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- parameter of type 'const GLfloat*' -->
          <parameter type-id='type-id-25'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-35'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLCurveEvaluator::texcoordCallBack(const GLfloat*, void*) -->
        <function-decl name='texcoordCallBack' mangled-name='_ZN20OpenGLCurveEvaluator16texcoordCallBackEPKfPv' filepath='libnurbs/interface/glcurveval.cc' line='396' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- parameter of type 'const GLfloat*' -->
          <parameter type-id='type-id-25'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-35'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLCurveEvaluator::evalpoint1i(long int) -->
        <function-decl name='evalpoint1i' mangled-name='_ZN20OpenGLCurveEvaluator11evalpoint1iEl' filepath='libnurbs/interface/glcurveval.cc' line='287' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLCurveEvaluator::set_callback_userData(void*) -->
        <function-decl name='set_callback_userData' mangled-name='_ZN20OpenGLCurveEvaluator21set_callback_userDataEPv' filepath='libnurbs/interface/glcurveval.h' line='96' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-35'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLCurveEvaluator::put_vertices_call_back(int) -->
        <function-decl name='put_vertices_call_back' mangled-name='_ZN20OpenGLCurveEvaluator22put_vertices_call_backEi' filepath='libnurbs/interface/glcurveval.h' line='87' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLCurveEvaluator::inPreEvaluate(int, REAL, REAL*) -->
        <function-decl name='inPreEvaluate' mangled-name='_ZN20OpenGLCurveEvaluator13inPreEvaluateEifPf' filepath='libnurbs/interface/incurveeval.cc' line='57' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLCurveEvaluator::inMap1f(int, int, REAL, REAL, int, int, REAL*) -->
        <function-decl name='inMap1f' mangled-name='_ZN20OpenGLCurveEvaluator7inMap1fEiiffiiPf' filepath='libnurbs/interface/incurveeval.cc' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLCurveEvaluator::inDoDomain1(curveEvalMachine*, REAL, REAL*) -->
        <function-decl name='inDoDomain1' mangled-name='_ZN20OpenGLCurveEvaluator11inDoDomain1EP16curveEvalMachinefPf' filepath='libnurbs/interface/incurveeval.cc' line='136' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- parameter of type 'curveEvalMachine*' -->
          <parameter type-id='type-id-26'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLCurveEvaluator::inDoEvalCoord1(REAL) -->
        <function-decl name='inDoEvalCoord1' mangled-name='_ZN20OpenGLCurveEvaluator14inDoEvalCoord1Ef' filepath='libnurbs/interface/incurveeval.cc' line='162' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLCurveEvaluator::inMapMesh1f(int, int) -->
        <function-decl name='inMapMesh1f' mangled-name='_ZN20OpenGLCurveEvaluator11inMapMesh1fEii' filepath='libnurbs/interface/incurveeval.cc' line='193' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes' vtable-offset='-1'>
        <!-- OpenGLCurveEvaluator::~OpenGLCurveEvaluator(int) -->
        <function-decl name='~OpenGLCurveEvaluator' filepath='libnurbs/interface/glcurveval.cc' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='9'>
        <!-- void OpenGLCurveEvaluator::domain1f(REAL, REAL) -->
        <function-decl name='domain1f' mangled-name='_ZN20OpenGLCurveEvaluator8domain1fEff' filepath='libnurbs/interface/glcurveval.cc' line='98' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='10'>
        <!-- void OpenGLCurveEvaluator::range1f(long int, REAL*, REAL*) -->
        <function-decl name='range1f' mangled-name='_ZN20OpenGLCurveEvaluator7range1fElPfS0_' filepath='libnurbs/interface/glcurveval.cc' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='11'>
        <!-- void OpenGLCurveEvaluator::enable(long int) -->
        <function-decl name='enable' mangled-name='_ZN20OpenGLCurveEvaluator6enableEl' filepath='libnurbs/interface/glcurveval.cc' line='137' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='12'>
        <!-- void OpenGLCurveEvaluator::disable(long int) -->
        <function-decl name='disable' mangled-name='_ZN20OpenGLCurveEvaluator7disableEl' filepath='libnurbs/interface/glcurveval.cc' line='127' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='13'>
        <!-- void OpenGLCurveEvaluator::bgnmap1f(long int) -->
        <function-decl name='bgnmap1f' mangled-name='_ZN20OpenGLCurveEvaluator8bgnmap1fEl' filepath='libnurbs/interface/glcurveval.cc' line='164' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='14'>
        <!-- void OpenGLCurveEvaluator::map1f(long int, REAL, REAL, long int, long int, REAL*) -->
        <function-decl name='map1f' mangled-name='_ZN20OpenGLCurveEvaluator5map1fElffllPf' filepath='libnurbs/interface/glcurveval.cc' line='199' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='15'>
        <!-- void OpenGLCurveEvaluator::mapgrid1f(long int, REAL, REAL) -->
        <function-decl name='mapgrid1f' mangled-name='_ZN20OpenGLCurveEvaluator9mapgrid1fElff' filepath='libnurbs/interface/glcurveval.cc' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='16'>
        <!-- void OpenGLCurveEvaluator::mapmesh1f(long int, long int, long int) -->
        <function-decl name='mapmesh1f' mangled-name='_ZN20OpenGLCurveEvaluator9mapmesh1fElll' filepath='libnurbs/interface/glcurveval.cc' line='262' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='17'>
        <!-- void OpenGLCurveEvaluator::evalcoord1f(long int, REAL) -->
        <function-decl name='evalcoord1f' mangled-name='_ZN20OpenGLCurveEvaluator11evalcoord1fElf' filepath='libnurbs/interface/glcurveval.cc' line='296' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='18'>
        <!-- void OpenGLCurveEvaluator::endmap1f() -->
        <function-decl name='endmap1f' mangled-name='_ZN20OpenGLCurveEvaluator8endmap1fEv' filepath='libnurbs/interface/glcurveval.cc' line='184' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='19'>
        <!-- void OpenGLCurveEvaluator::bgnline() -->
        <function-decl name='bgnline' mangled-name='_ZN20OpenGLCurveEvaluator7bgnlineEv' filepath='libnurbs/interface/glcurveval.cc' line='105' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='20'>
        <!-- void OpenGLCurveEvaluator::endline() -->
        <function-decl name='endline' mangled-name='_ZN20OpenGLCurveEvaluator7endlineEv' filepath='libnurbs/interface/glcurveval.cc' line='114' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLCurveEvaluator*' -->
          <parameter type-id='type-id-21' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct BasicCurveEvaluator -->
    <class-decl name='BasicCurveEvaluator' is-struct='yes' visibility='default' filepath='libnurbs/internals/basiccrveval.h' line='43' column='1' is-declaration-only='yes' id='type-id-16'>
      <!-- class CachingEvaluator -->
      <base-class access='public' layout-offset-in-bits='0' type-id='type-id-10'/>
      <member-function access='public' destructor='yes' vtable-offset='-1'>
        <!-- BasicCurveEvaluator::~BasicCurveEvaluator(int) -->
        <function-decl name='~BasicCurveEvaluator' filepath='libnurbs/internals/basiccrveval.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicCurveEvaluator*' -->
          <parameter type-id='type-id-17' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='9'>
        <!-- void BasicCurveEvaluator::domain1f(REAL, REAL) -->
        <function-decl name='domain1f' mangled-name='_ZN19BasicCurveEvaluator8domain1fEff' filepath='libnurbs/internals/basiccrveval.cc' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicCurveEvaluator*' -->
          <parameter type-id='type-id-17' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='10'>
        <!-- void BasicCurveEvaluator::range1f(long int, REAL*, REAL*) -->
        <function-decl name='range1f' mangled-name='_ZN19BasicCurveEvaluator7range1fElPfS0_' filepath='libnurbs/internals/basiccrveval.cc' line='53' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicCurveEvaluator*' -->
          <parameter type-id='type-id-17' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='11'>
        <!-- void BasicCurveEvaluator::enable(long int) -->
        <function-decl name='enable' mangled-name='_ZN19BasicCurveEvaluator6enableEl' filepath='libnurbs/internals/basiccrveval.cc' line='61' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicCurveEvaluator*' -->
          <parameter type-id='type-id-17' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='12'>
        <!-- void BasicCurveEvaluator::disable(long int) -->
        <function-decl name='disable' mangled-name='_ZN19BasicCurveEvaluator7disableEl' filepath='libnurbs/internals/basiccrveval.cc' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicCurveEvaluator*' -->
          <parameter type-id='type-id-17' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='13'>
        <!-- void BasicCurveEvaluator::bgnmap1f(long int) -->
        <function-decl name='bgnmap1f' mangled-name='_ZN19BasicCurveEvaluator8bgnmap1fEl' filepath='libnurbs/internals/basiccrveval.cc' line='77' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicCurveEvaluator*' -->
          <parameter type-id='type-id-17' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='14'>
        <!-- void BasicCurveEvaluator::map1f(long int, REAL, REAL, long int, long int, REAL*) -->
        <function-decl name='map1f' mangled-name='_ZN19BasicCurveEvaluator5map1fElffllPf' filepath='libnurbs/internals/basiccrveval.cc' line='85' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicCurveEvaluator*' -->
          <parameter type-id='type-id-17' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='15'>
        <!-- void BasicCurveEvaluator::mapgrid1f(long int, REAL, REAL) -->
        <function-decl name='mapgrid1f' mangled-name='_ZN19BasicCurveEvaluator9mapgrid1fElff' filepath='libnurbs/internals/basiccrveval.cc' line='93' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicCurveEvaluator*' -->
          <parameter type-id='type-id-17' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='16'>
        <!-- void BasicCurveEvaluator::mapmesh1f(long int, long int, long int) -->
        <function-decl name='mapmesh1f' mangled-name='_ZN19BasicCurveEvaluator9mapmesh1fElll' filepath='libnurbs/internals/basiccrveval.cc' line='101' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicCurveEvaluator*' -->
          <parameter type-id='type-id-17' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='17'>
        <!-- void BasicCurveEvaluator::evalcoord1f(long int, REAL) -->
        <function-decl name='evalcoord1f' mangled-name='_ZN19BasicCurveEvaluator11evalcoord1fElf' filepath='libnurbs/internals/basiccrveval.cc' line='109' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicCurveEvaluator*' -->
          <parameter type-id='type-id-17' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='18'>
        <!-- void BasicCurveEvaluator::endmap1f() -->
        <function-decl name='endmap1f' mangled-name='_ZN19BasicCurveEvaluator8endmap1fEv' filepath='libnurbs/internals/basiccrveval.cc' line='117' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicCurveEvaluator*' -->
          <parameter type-id='type-id-17' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='19'>
        <!-- void BasicCurveEvaluator::bgnline() -->
        <function-decl name='bgnline' mangled-name='_ZN19BasicCurveEvaluator7bgnlineEv' filepath='libnurbs/internals/basiccrveval.cc' line='125' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicCurveEvaluator*' -->
          <parameter type-id='type-id-17' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='20'>
        <!-- void BasicCurveEvaluator::endline() -->
        <function-decl name='endline' mangled-name='_ZN19BasicCurveEvaluator7endlineEv' filepath='libnurbs/internals/basiccrveval.cc' line='133' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicCurveEvaluator*' -->
          <parameter type-id='type-id-17' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- void (const GLfloat*) -->
    <function-type size-in-bits='64' id='type-id-27'>
      <!-- parameter of type 'const GLfloat*' -->
      <parameter type-id='type-id-25'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-type>
    <!-- void (const GLfloat*, void*) -->
    <function-type size-in-bits='64' id='type-id-29'>
      <!-- parameter of type 'const GLfloat*' -->
      <parameter type-id='type-id-25'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-35'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/interface/glinterface.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- struct GLUnurbs -->
    <class-decl name='GLUnurbs' size-in-bits='1149440' is-struct='yes' visibility='default' filepath='libnurbs/interface/glrenderer.h' line='49' column='1' id='type-id-39'>
      <!-- class NurbsTessellator -->
      <base-class access='public' layout-offset-in-bits='0' type-id='type-id-40'/>
      <data-member access='public' layout-offset-in-bits='47616'>
        <!-- errorCallbackType GLUnurbs::errorCallback -->
        <var-decl name='errorCallback' type-id='type-id-41' visibility='default' filepath='libnurbs/interface/glrenderer.h' line='71' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='47680'>
        <!-- GLboolean GLUnurbs::autoloadmode -->
        <var-decl name='autoloadmode' type-id='type-id-42' visibility='default' filepath='libnurbs/interface/glrenderer.h' line='130' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='47744'>
        <!-- OpenGLSurfaceEvaluator GLUnurbs::surfaceEvaluator -->
        <var-decl name='surfaceEvaluator' type-id='type-id-43' visibility='default' filepath='libnurbs/interface/glrenderer.h' line='131' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1121792'>
        <!-- OpenGLCurveEvaluator GLUnurbs::curveEvaluator -->
        <var-decl name='curveEvaluator' type-id='type-id-20' visibility='default' filepath='libnurbs/interface/glrenderer.h' line='132' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1149376'>
        <!-- int GLUnurbs::callbackFlag -->
        <var-decl name='callbackFlag' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glrenderer.h' line='143' column='1'/>
      </data-member>
      <member-function access='public'>
        <!-- void GLUnurbs::setNurbsCallbackData(void*) -->
        <function-decl name='setNurbsCallbackData' mangled-name='_ZN8GLUnurbs20setNurbsCallbackDataEPv' filepath='libnurbs/interface/glrenderer.h' line='104' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GLUnurbs*' -->
          <parameter type-id='type-id-44' is-artificial='yes'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-35'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void GLUnurbs::putSurfCallBack(GLenum, _GLUfuncptr) -->
        <function-decl name='putSurfCallBack' mangled-name='_ZN8GLUnurbs15putSurfCallBackEjPFvvE' filepath='libnurbs/interface/glrenderer.h' line='77' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GLUnurbs*' -->
          <parameter type-id='type-id-44' is-artificial='yes'/>
          <!-- parameter of type 'typedef GLenum' -->
          <parameter type-id='type-id-36'/>
          <!-- parameter of type 'typedef _GLUfuncptr' -->
          <parameter type-id='type-id-37'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void GLUnurbs::postError(int) -->
        <function-decl name='postError' mangled-name='_ZN8GLUnurbs9postErrorEi' filepath='libnurbs/interface/glrenderer.h' line='72' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GLUnurbs*' -->
          <parameter type-id='type-id-44' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- GLboolean GLUnurbs::getautoloadmode() -->
        <function-decl name='getautoloadmode' mangled-name='_ZN8GLUnurbs15getautoloadmodeEv' filepath='libnurbs/interface/glrenderer.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GLUnurbs*' -->
          <parameter type-id='type-id-44' is-artificial='yes'/>
          <!-- typedef GLboolean -->
          <return type-id='type-id-42'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int GLUnurbs::is_callback() -->
        <function-decl name='is_callback' mangled-name='_ZN8GLUnurbs11is_callbackEv' filepath='libnurbs/interface/glrenderer.h' line='118' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GLUnurbs*' -->
          <parameter type-id='type-id-44' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void GLUnurbs::setautoloadmode(float) -->
        <function-decl name='setautoloadmode' mangled-name='_ZN8GLUnurbs15setautoloadmodeEf' filepath='libnurbs/interface/glrenderer.h' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GLUnurbs*' -->
          <parameter type-id='type-id-44' is-artificial='yes'/>
          <!-- parameter of type 'float' -->
          <parameter type-id='type-id-15'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void GLUnurbs::put_callbackFlag(int) -->
        <function-decl name='put_callbackFlag' mangled-name='_ZN8GLUnurbs16put_callbackFlagEi' filepath='libnurbs/interface/glrenderer.h' line='122' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GLUnurbs*' -->
          <parameter type-id='type-id-44' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void GLUnurbs::LOD_eval_list(int) -->
        <function-decl name='LOD_eval_list' mangled-name='_ZN8GLUnurbs13LOD_eval_listEi' filepath='libnurbs/interface/glrenderer.h' line='112' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GLUnurbs*' -->
          <parameter type-id='type-id-44' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- GLUnurbs::GLUnurbs() -->
        <function-decl name='GLUnurbs' filepath='libnurbs/interface/glrenderer.cc' line='42' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GLUnurbs*' -->
          <parameter type-id='type-id-44' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' static='yes'>
        <!-- void GLUnurbs::transform4d(GLfloat*, GLfloat[4]*) -->
        <function-decl name='transform4d' mangled-name='_ZN8GLUnurbs11transform4dEPfS0_PA4_f' filepath='libnurbs/interface/glrenderer.cc' line='280' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- parameter of type 'GLfloat*' -->
          <parameter type-id='type-id-45'/>
          <!-- parameter of type 'GLfloat*' -->
          <parameter type-id='type-id-45'/>
          <!-- parameter of type 'GLfloat[4]*' -->
          <parameter type-id='type-id-46'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' static='yes'>
        <!-- void GLUnurbs::multmatrix4d(GLfloat[4]*, GLfloat[4]*) -->
        <function-decl name='multmatrix4d' mangled-name='_ZN8GLUnurbs12multmatrix4dEPA4_fPA4_KfS4_' filepath='libnurbs/interface/glrenderer.cc' line='294' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- parameter of type 'GLfloat[4]*' -->
          <parameter type-id='type-id-46'/>
          <!-- parameter of type 'GLfloat[4]*' -->
          <parameter type-id='type-id-46'/>
          <!-- parameter of type 'GLfloat[4]*' -->
          <parameter type-id='type-id-46'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void GLUnurbs::loadCullingMatrix(GLfloat[4]*) -->
        <function-decl name='loadCullingMatrix' mangled-name='_ZN8GLUnurbs17loadCullingMatrixEPA4_f' filepath='libnurbs/interface/glrenderer.cc' line='237' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GLUnurbs*' -->
          <parameter type-id='type-id-44' is-artificial='yes'/>
          <!-- parameter of type 'GLfloat[4]*' -->
          <parameter type-id='type-id-46'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void GLUnurbs::loadSamplingMatrix(GLfloat[4]*, const GLint*) -->
        <function-decl name='loadSamplingMatrix' mangled-name='_ZN8GLUnurbs18loadSamplingMatrixEPA4_KfPKi' filepath='libnurbs/interface/glrenderer.cc' line='194' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GLUnurbs*' -->
          <parameter type-id='type-id-44' is-artificial='yes'/>
          <!-- parameter of type 'GLfloat[4]*' -->
          <parameter type-id='type-id-46'/>
          <!-- parameter of type 'const GLint*' -->
          <parameter type-id='type-id-47'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void GLUnurbs::useGLMatrices(const GLfloat*, const GLfloat*, const GLint*) -->
        <function-decl name='useGLMatrices' mangled-name='_ZN8GLUnurbs13useGLMatricesEPKfS1_PKi' filepath='libnurbs/interface/glrenderer.cc' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GLUnurbs*' -->
          <parameter type-id='type-id-44' is-artificial='yes'/>
          <!-- parameter of type 'const GLfloat*' -->
          <parameter type-id='type-id-25'/>
          <!-- parameter of type 'const GLfloat*' -->
          <parameter type-id='type-id-25'/>
          <!-- parameter of type 'const GLint*' -->
          <parameter type-id='type-id-47'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void GLUnurbs::setSamplingMatrixIdentity() -->
        <function-decl name='setSamplingMatrixIdentity' mangled-name='_ZN8GLUnurbs25setSamplingMatrixIdentityEv' filepath='libnurbs/interface/glrenderer.cc' line='171' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GLUnurbs*' -->
          <parameter type-id='type-id-44' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' static='yes'>
        <!-- void GLUnurbs::grabGLMatrix() -->
        <function-decl name='grabGLMatrix' mangled-name='_ZN8GLUnurbs12grabGLMatrixEPA4_f' filepath='libnurbs/interface/glrenderer.cc' line='159' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- parameter of type 'GLfloat[4]*' -->
          <parameter type-id='type-id-46'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void GLUnurbs::loadGLMatrices() -->
        <function-decl name='loadGLMatrices' mangled-name='_ZN8GLUnurbs14loadGLMatricesEv' filepath='libnurbs/interface/glrenderer.cc' line='129' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GLUnurbs*' -->
          <parameter type-id='type-id-44' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='2'>
        <!-- void GLUnurbs::bgnrender() -->
        <function-decl name='bgnrender' mangled-name='_ZN8GLUnurbs9bgnrenderEv' filepath='libnurbs/interface/glrenderer.cc' line='107' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GLUnurbs*' -->
          <parameter type-id='type-id-44' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='3'>
        <!-- void GLUnurbs::endrender() -->
        <function-decl name='endrender' mangled-name='_ZN8GLUnurbs9endrenderEv' filepath='libnurbs/interface/glrenderer.cc' line='115' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GLUnurbs*' -->
          <parameter type-id='type-id-44' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='6'>
        <!-- void GLUnurbs::errorHandler(int) -->
        <function-decl name='errorHandler' mangled-name='_ZN8GLUnurbs12errorHandlerEi' filepath='libnurbs/interface/glrenderer.cc' line='120' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GLUnurbs*' -->
          <parameter type-id='type-id-44' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- GLUnurbs* -->
    <pointer-type-def type-id='type-id-39' size-in-bits='64' id='type-id-44'/>
    <!-- OpenGLSurfaceEvaluator* -->
    <pointer-type-def type-id='type-id-43' size-in-bits='64' id='type-id-48'/>
    <!-- float* -->
    <pointer-type-def type-id='type-id-15' size-in-bits='64' id='type-id-49'/>
    <!-- GLUnurbs* gluNewNurbsRenderer() -->
    <function-decl name='gluNewNurbsRenderer' mangled-name='gluNewNurbsRenderer' filepath='libnurbs/interface/glinterface.cc' line='66' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluNewNurbsRenderer'>
      <!-- GLUnurbs* -->
      <return type-id='type-id-44'/>
    </function-decl>
    <!-- void gluDeleteNurbsRenderer(GLUnurbs*) -->
    <function-decl name='gluDeleteNurbsRenderer' mangled-name='gluDeleteNurbsRenderer' filepath='libnurbs/interface/glinterface.cc' line='75' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluDeleteNurbsRenderer'>
      <!-- parameter of type 'GLUnurbs*' -->
      <parameter type-id='type-id-44' name='r' filepath='libnurbs/interface/glinterface.cc' line='75' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluBeginSurface(GLUnurbs*) -->
    <function-decl name='gluBeginSurface' mangled-name='gluBeginSurface' filepath='libnurbs/interface/glinterface.cc' line='89' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluBeginSurface'>
      <!-- parameter of type 'GLUnurbs*' -->
      <parameter type-id='type-id-44' name='r' filepath='libnurbs/interface/glinterface.cc' line='75' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluBeginCurve(GLUnurbs*) -->
    <function-decl name='gluBeginCurve' mangled-name='gluBeginCurve' filepath='libnurbs/interface/glinterface.cc' line='99' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluBeginCurve'>
      <!-- parameter of type 'GLUnurbs*' -->
      <parameter type-id='type-id-44' name='r' filepath='libnurbs/interface/glinterface.cc' line='75' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluEndCurve(GLUnurbs*) -->
    <function-decl name='gluEndCurve' mangled-name='gluEndCurve' filepath='libnurbs/interface/glinterface.cc' line='105' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluEndCurve'>
      <!-- parameter of type 'GLUnurbs*' -->
      <parameter type-id='type-id-44' name='r' filepath='libnurbs/interface/glinterface.cc' line='75' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluEndSurface(GLUnurbs*) -->
    <function-decl name='gluEndSurface' mangled-name='gluEndSurface' filepath='libnurbs/interface/glinterface.cc' line='111' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluEndSurface'>
      <!-- parameter of type 'GLUnurbs*' -->
      <parameter type-id='type-id-44' name='r' filepath='libnurbs/interface/glinterface.cc' line='75' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluBeginTrim(GLUnurbs*) -->
    <function-decl name='gluBeginTrim' mangled-name='gluBeginTrim' filepath='libnurbs/interface/glinterface.cc' line='131' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluBeginTrim'>
      <!-- parameter of type 'GLUnurbs*' -->
      <parameter type-id='type-id-44' name='r' filepath='libnurbs/interface/glinterface.cc' line='75' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluEndTrim(GLUnurbs*) -->
    <function-decl name='gluEndTrim' mangled-name='gluEndTrim' filepath='libnurbs/interface/glinterface.cc' line='141' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluEndTrim'>
      <!-- parameter of type 'GLUnurbs*' -->
      <parameter type-id='type-id-44' name='r' filepath='libnurbs/interface/glinterface.cc' line='75' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluPwlCurve(GLUnurbs*, GLint, float*, GLint, GLenum) -->
    <function-decl name='gluPwlCurve' mangled-name='gluPwlCurve' filepath='libnurbs/interface/glinterface.cc' line='150' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluPwlCurve'>
      <!-- parameter of type 'GLUnurbs*' -->
      <parameter type-id='type-id-44' name='r' filepath='libnurbs/interface/glinterface.cc' line='150' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='count' filepath='libnurbs/interface/glinterface.cc' line='150' column='1'/>
      <!-- parameter of type 'float*' -->
      <parameter type-id='type-id-49' name='array' filepath='libnurbs/interface/glinterface.cc' line='150' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='stride' filepath='libnurbs/interface/glinterface.cc' line='151' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='type' filepath='libnurbs/interface/glinterface.cc' line='151' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluNurbsCurve(GLUnurbs*, GLint, float*, GLint, float*, GLint, GLenum) -->
    <function-decl name='gluNurbsCurve' mangled-name='gluNurbsCurve' filepath='libnurbs/interface/glinterface.cc' line='173' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluNurbsCurve'>
      <!-- parameter of type 'GLUnurbs*' -->
      <parameter type-id='type-id-44' name='r' filepath='libnurbs/interface/glinterface.cc' line='173' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='nknots' filepath='libnurbs/interface/glinterface.cc' line='173' column='1'/>
      <!-- parameter of type 'float*' -->
      <parameter type-id='type-id-49' name='knot' filepath='libnurbs/interface/glinterface.cc' line='173' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='stride' filepath='libnurbs/interface/glinterface.cc' line='173' column='1'/>
      <!-- parameter of type 'float*' -->
      <parameter type-id='type-id-49' name='ctlarray' filepath='libnurbs/interface/glinterface.cc' line='174' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='order' filepath='libnurbs/interface/glinterface.cc' line='174' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='type' filepath='libnurbs/interface/glinterface.cc' line='174' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluNurbsSurface(GLUnurbs*, GLint, GLfloat*, GLint, GLfloat*, GLint, GLint, GLfloat*, GLint, GLint, GLenum) -->
    <function-decl name='gluNurbsSurface' mangled-name='gluNurbsSurface' filepath='libnurbs/interface/glinterface.cc' line='199' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluNurbsSurface'>
      <!-- parameter of type 'GLUnurbs*' -->
      <parameter type-id='type-id-44' name='r' filepath='libnurbs/interface/glinterface.cc' line='199' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='sknot_count' filepath='libnurbs/interface/glinterface.cc' line='199' column='1'/>
      <!-- parameter of type 'GLfloat*' -->
      <parameter type-id='type-id-45' name='sknot' filepath='libnurbs/interface/glinterface.cc' line='199' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='tknot_count' filepath='libnurbs/interface/glinterface.cc' line='200' column='1'/>
      <!-- parameter of type 'GLfloat*' -->
      <parameter type-id='type-id-45' name='tknot' filepath='libnurbs/interface/glinterface.cc' line='200' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='s_stride' filepath='libnurbs/interface/glinterface.cc' line='201' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='t_stride' filepath='libnurbs/interface/glinterface.cc' line='201' column='1'/>
      <!-- parameter of type 'GLfloat*' -->
      <parameter type-id='type-id-45' name='ctlarray' filepath='libnurbs/interface/glinterface.cc' line='202' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='sorder' filepath='libnurbs/interface/glinterface.cc' line='202' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='torder' filepath='libnurbs/interface/glinterface.cc' line='202' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='type' filepath='libnurbs/interface/glinterface.cc' line='203' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluLoadSamplingMatrices(GLUnurbs*, const GLfloat*, const GLfloat*, const GLint*) -->
    <function-decl name='gluLoadSamplingMatrices' mangled-name='gluLoadSamplingMatrices' filepath='libnurbs/interface/glinterface.cc' line='235' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluLoadSamplingMatrices'>
      <!-- parameter of type 'GLUnurbs*' -->
      <parameter type-id='type-id-44' name='r' filepath='libnurbs/interface/glinterface.cc' line='235' column='1'/>
      <!-- parameter of type 'const GLfloat*' -->
      <parameter type-id='type-id-25' name='modelMatrix' filepath='libnurbs/interface/glinterface.cc' line='235' column='1'/>
      <!-- parameter of type 'const GLfloat*' -->
      <parameter type-id='type-id-25' name='projMatrix' filepath='libnurbs/interface/glinterface.cc' line='236' column='1'/>
      <!-- parameter of type 'const GLint*' -->
      <parameter type-id='type-id-47' name='viewport' filepath='libnurbs/interface/glinterface.cc' line='237' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluNurbsProperty(GLUnurbs*, GLenum, GLfloat) -->
    <function-decl name='gluNurbsProperty' mangled-name='gluNurbsProperty' filepath='libnurbs/interface/glinterface.cc' line='243' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluNurbsProperty'>
      <!-- parameter of type 'GLUnurbs*' -->
      <parameter type-id='type-id-44' name='r' filepath='libnurbs/interface/glinterface.cc' line='243' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='property' filepath='libnurbs/interface/glinterface.cc' line='243' column='1'/>
      <!-- parameter of type 'typedef GLfloat' -->
      <parameter type-id='type-id-23' name='value' filepath='libnurbs/interface/glinterface.cc' line='243' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluGetNurbsProperty(GLUnurbs*, GLenum, GLfloat*) -->
    <function-decl name='gluGetNurbsProperty' mangled-name='gluGetNurbsProperty' filepath='libnurbs/interface/glinterface.cc' line='359' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluGetNurbsProperty'>
      <!-- parameter of type 'GLUnurbs*' -->
      <parameter type-id='type-id-44' name='r' filepath='libnurbs/interface/glinterface.cc' line='359' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='property' filepath='libnurbs/interface/glinterface.cc' line='359' column='1'/>
      <!-- parameter of type 'GLfloat*' -->
      <parameter type-id='type-id-45' name='value' filepath='libnurbs/interface/glinterface.cc' line='359' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluNurbsCallback(GLUnurbs*, GLenum, _GLUfuncptr) -->
    <function-decl name='gluNurbsCallback' mangled-name='gluNurbsCallback' filepath='libnurbs/interface/glinterface.cc' line='430' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluNurbsCallback'>
      <!-- parameter of type 'GLUnurbs*' -->
      <parameter type-id='type-id-44' name='r' filepath='libnurbs/interface/glinterface.cc' line='430' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='which' filepath='libnurbs/interface/glinterface.cc' line='430' column='1'/>
      <!-- parameter of type 'typedef _GLUfuncptr' -->
      <parameter type-id='type-id-37' name='fn' filepath='libnurbs/interface/glinterface.cc' line='430' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluNurbsCallbackDataEXT(GLUnurbs*, void*) -->
    <function-decl name='gluNurbsCallbackDataEXT' mangled-name='gluNurbsCallbackDataEXT' filepath='libnurbs/interface/glinterface.cc' line='459' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluNurbsCallbackDataEXT'>
      <!-- parameter of type 'GLUnurbs*' -->
      <parameter type-id='type-id-44' name='r' filepath='libnurbs/interface/glinterface.cc' line='459' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-35' name='userData' filepath='libnurbs/interface/glinterface.cc' line='459' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluNurbsCallbackData(GLUnurbs*, void*) -->
    <function-decl name='gluNurbsCallbackData' mangled-name='gluNurbsCallbackData' filepath='libnurbs/interface/glinterface.cc' line='466' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluNurbsCallbackData'>
      <!-- parameter of type 'GLUnurbs*' -->
      <parameter type-id='type-id-44' name='r' filepath='libnurbs/interface/glinterface.cc' line='459' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-35' name='userData' filepath='libnurbs/interface/glinterface.cc' line='459' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- struct OpenGLSurfaceEvaluator -->
    <class-decl name='OpenGLSurfaceEvaluator' is-struct='yes' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='100' column='1' is-declaration-only='yes' id='type-id-43'>
      <!-- struct BasicSurfaceEvaluator -->
      <base-class access='public' layout-offset-in-bits='0' type-id='type-id-51'/>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- StoredVertex* OpenGLSurfaceEvaluator::vertexCache[3] -->
        <var-decl name='vertexCache' type-id='type-id-52' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='180' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='256'>
        <!-- int OpenGLSurfaceEvaluator::tmeshing -->
        <var-decl name='tmeshing' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='181' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='288'>
        <!-- int OpenGLSurfaceEvaluator::which -->
        <var-decl name='which' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='182' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='320'>
        <!-- int OpenGLSurfaceEvaluator::vcount -->
        <var-decl name='vcount' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='183' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='352'>
        <!-- GLint OpenGLSurfaceEvaluator::gl_polygon_mode[2] -->
        <var-decl name='gl_polygon_mode' type-id='type-id-53' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='185' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='448'>
        <!-- bezierPatchMesh* OpenGLSurfaceEvaluator::global_bpm -->
        <var-decl name='global_bpm' type-id='type-id-54' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='188' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='512'>
        <!-- int OpenGLSurfaceEvaluator::output_triangles -->
        <var-decl name='output_triangles' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='189' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='576'>
        <!-- void (typedef GLenum)* OpenGLSurfaceEvaluator::beginCallBackN -->
        <var-decl name='beginCallBackN' type-id='type-id-31' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='193' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='640'>
        <!-- void ()* OpenGLSurfaceEvaluator::endCallBackN -->
        <var-decl name='endCallBackN' type-id='type-id-32' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='194' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='704'>
        <!-- void (const GLfloat*)* OpenGLSurfaceEvaluator::vertexCallBackN -->
        <var-decl name='vertexCallBackN' type-id='type-id-28' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='195' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='768'>
        <!-- void (const GLfloat*)* OpenGLSurfaceEvaluator::normalCallBackN -->
        <var-decl name='normalCallBackN' type-id='type-id-28' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='196' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='832'>
        <!-- void (const GLfloat*)* OpenGLSurfaceEvaluator::colorCallBackN -->
        <var-decl name='colorCallBackN' type-id='type-id-28' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='197' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='896'>
        <!-- void (const GLfloat*)* OpenGLSurfaceEvaluator::texcoordCallBackN -->
        <var-decl name='texcoordCallBackN' type-id='type-id-28' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='198' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='960'>
        <!-- void (typedef GLenum, void*)* OpenGLSurfaceEvaluator::beginCallBackData -->
        <var-decl name='beginCallBackData' type-id='type-id-33' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='200' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1024'>
        <!-- void (void*)* OpenGLSurfaceEvaluator::endCallBackData -->
        <var-decl name='endCallBackData' type-id='type-id-34' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='201' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1088'>
        <!-- void (const GLfloat*, void*)* OpenGLSurfaceEvaluator::vertexCallBackData -->
        <var-decl name='vertexCallBackData' type-id='type-id-30' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='202' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1152'>
        <!-- void (const GLfloat*, void*)* OpenGLSurfaceEvaluator::normalCallBackData -->
        <var-decl name='normalCallBackData' type-id='type-id-30' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='203' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1216'>
        <!-- void (const GLfloat*, void*)* OpenGLSurfaceEvaluator::colorCallBackData -->
        <var-decl name='colorCallBackData' type-id='type-id-30' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='204' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1280'>
        <!-- void (const GLfloat*, void*)* OpenGLSurfaceEvaluator::texcoordCallBackData -->
        <var-decl name='texcoordCallBackData' type-id='type-id-30' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='205' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1344'>
        <!-- void* OpenGLSurfaceEvaluator::userData -->
        <var-decl name='userData' type-id='type-id-35' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='215' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1408'>
        <!-- int OpenGLSurfaceEvaluator::LOD_eval_level -->
        <var-decl name='LOD_eval_level' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='222' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1440'>
        <!-- int OpenGLSurfaceEvaluator::global_uorder -->
        <var-decl name='global_uorder' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='231' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1472'>
        <!-- int OpenGLSurfaceEvaluator::global_vorder -->
        <var-decl name='global_vorder' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='232' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1504'>
        <!-- REAL OpenGLSurfaceEvaluator::global_uprime -->
        <var-decl name='global_uprime' type-id='type-id-1' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='233' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1536'>
        <!-- REAL OpenGLSurfaceEvaluator::global_vprime -->
        <var-decl name='global_vprime' type-id='type-id-1' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='234' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1568'>
        <!-- REAL OpenGLSurfaceEvaluator::global_vprime_BV -->
        <var-decl name='global_vprime_BV' type-id='type-id-1' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='235' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1600'>
        <!-- REAL OpenGLSurfaceEvaluator::global_uprime_BU -->
        <var-decl name='global_uprime_BU' type-id='type-id-1' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='236' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1632'>
        <!-- int OpenGLSurfaceEvaluator::global_uorder_BV -->
        <var-decl name='global_uorder_BV' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='237' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1664'>
        <!-- int OpenGLSurfaceEvaluator::global_vorder_BV -->
        <var-decl name='global_vorder_BV' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='238' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1696'>
        <!-- int OpenGLSurfaceEvaluator::global_uorder_BU -->
        <var-decl name='global_uorder_BU' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='239' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1728'>
        <!-- int OpenGLSurfaceEvaluator::global_vorder_BU -->
        <var-decl name='global_vorder_BU' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='240' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1760'>
        <!-- REAL OpenGLSurfaceEvaluator::global_ucoeff[40] -->
        <var-decl name='global_ucoeff' type-id='type-id-5' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='242' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='3040'>
        <!-- REAL OpenGLSurfaceEvaluator::global_vcoeff[40] -->
        <var-decl name='global_vcoeff' type-id='type-id-5' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='243' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='4320'>
        <!-- REAL OpenGLSurfaceEvaluator::global_ucoeffDeriv[40] -->
        <var-decl name='global_ucoeffDeriv' type-id='type-id-5' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='244' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='5600'>
        <!-- REAL OpenGLSurfaceEvaluator::global_vcoeffDeriv[40] -->
        <var-decl name='global_vcoeffDeriv' type-id='type-id-5' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='245' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='6880'>
        <!-- REAL OpenGLSurfaceEvaluator::global_BV[40][4] -->
        <var-decl name='global_BV' type-id='type-id-55' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='247' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='12000'>
        <!-- REAL OpenGLSurfaceEvaluator::global_PBV[40][4] -->
        <var-decl name='global_PBV' type-id='type-id-55' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='248' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='17120'>
        <!-- REAL OpenGLSurfaceEvaluator::global_BU[40][4] -->
        <var-decl name='global_BU' type-id='type-id-55' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='249' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='22240'>
        <!-- REAL OpenGLSurfaceEvaluator::global_PBU[40][4] -->
        <var-decl name='global_PBU' type-id='type-id-55' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='250' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='27392'>
        <!-- REAL* OpenGLSurfaceEvaluator::global_baseData -->
        <var-decl name='global_baseData' type-id='type-id-22' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='251' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='27456'>
        <!-- int OpenGLSurfaceEvaluator::global_ev_k -->
        <var-decl name='global_ev_k' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='253' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='27488'>
        <!-- REAL OpenGLSurfaceEvaluator::global_ev_u1 -->
        <var-decl name='global_ev_u1' type-id='type-id-1' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='254' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='27520'>
        <!-- REAL OpenGLSurfaceEvaluator::global_ev_u2 -->
        <var-decl name='global_ev_u2' type-id='type-id-1' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='255' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='27552'>
        <!-- int OpenGLSurfaceEvaluator::global_ev_ustride -->
        <var-decl name='global_ev_ustride' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='256' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='27584'>
        <!-- int OpenGLSurfaceEvaluator::global_ev_uorder -->
        <var-decl name='global_ev_uorder' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='257' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='27616'>
        <!-- REAL OpenGLSurfaceEvaluator::global_ev_v1 -->
        <var-decl name='global_ev_v1' type-id='type-id-1' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='258' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='27648'>
        <!-- REAL OpenGLSurfaceEvaluator::global_ev_v2 -->
        <var-decl name='global_ev_v2' type-id='type-id-1' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='259' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='27680'>
        <!-- int OpenGLSurfaceEvaluator::global_ev_vstride -->
        <var-decl name='global_ev_vstride' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='260' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='27712'>
        <!-- int OpenGLSurfaceEvaluator::global_ev_vorder -->
        <var-decl name='global_ev_vorder' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='261' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='27744'>
        <!-- REAL OpenGLSurfaceEvaluator::global_ev_ctlPoints[6400] -->
        <var-decl name='global_ev_ctlPoints' type-id='type-id-56' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='262' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='232544'>
        <!-- REAL OpenGLSurfaceEvaluator::global_grid_u0 -->
        <var-decl name='global_grid_u0' type-id='type-id-1' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='264' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='232576'>
        <!-- REAL OpenGLSurfaceEvaluator::global_grid_u1 -->
        <var-decl name='global_grid_u1' type-id='type-id-1' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='265' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='232608'>
        <!-- int OpenGLSurfaceEvaluator::global_grid_nu -->
        <var-decl name='global_grid_nu' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='266' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='232640'>
        <!-- REAL OpenGLSurfaceEvaluator::global_grid_v0 -->
        <var-decl name='global_grid_v0' type-id='type-id-1' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='267' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='232672'>
        <!-- REAL OpenGLSurfaceEvaluator::global_grid_v1 -->
        <var-decl name='global_grid_v1' type-id='type-id-1' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='268' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='232704'>
        <!-- int OpenGLSurfaceEvaluator::global_grid_nv -->
        <var-decl name='global_grid_nv' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='269' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='232736'>
        <!-- surfEvalMachine OpenGLSurfaceEvaluator::em_vertex -->
        <var-decl name='em_vertex' type-id='type-id-57' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='349' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='443008'>
        <!-- surfEvalMachine OpenGLSurfaceEvaluator::em_normal -->
        <var-decl name='em_normal' type-id='type-id-57' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='350' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='653280'>
        <!-- surfEvalMachine OpenGLSurfaceEvaluator::em_color -->
        <var-decl name='em_color' type-id='type-id-57' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='351' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='863552'>
        <!-- surfEvalMachine OpenGLSurfaceEvaluator::em_texcoord -->
        <var-decl name='em_texcoord' type-id='type-id-57' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='352' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1073824'>
        <!-- int OpenGLSurfaceEvaluator::auto_normal_flag -->
        <var-decl name='auto_normal_flag' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='354' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1073856'>
        <!-- int OpenGLSurfaceEvaluator::callback_auto_normal -->
        <var-decl name='callback_auto_normal' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='356' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1073888'>
        <!-- int OpenGLSurfaceEvaluator::vertex_flag -->
        <var-decl name='vertex_flag' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='357' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1073920'>
        <!-- int OpenGLSurfaceEvaluator::normal_flag -->
        <var-decl name='normal_flag' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='358' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1073952'>
        <!-- int OpenGLSurfaceEvaluator::color_flag -->
        <var-decl name='color_flag' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='359' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1073984'>
        <!-- int OpenGLSurfaceEvaluator::texcoord_flag -->
        <var-decl name='texcoord_flag' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='360' column='1'/>
      </data-member>
      <member-function access='public'>
        <!-- void OpenGLSurfaceEvaluator::set_callback_userData(void*) -->
        <function-decl name='set_callback_userData' mangled-name='_ZN22OpenGLSurfaceEvaluator21set_callback_userDataEPv' filepath='libnurbs/interface/glsurfeval.h' line='168' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-35'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void OpenGLSurfaceEvaluator::put_vertices_call_back(int) -->
        <function-decl name='put_vertices_call_back' mangled-name='_ZN22OpenGLSurfaceEvaluator22put_vertices_call_backEi' filepath='libnurbs/interface/glsurfeval.h' line='153' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- OpenGLSurfaceEvaluator::OpenGLSurfaceEvaluator() -->
        <function-decl name='OpenGLSurfaceEvaluator' filepath='libnurbs/interface/glsurfeval.cc' line='99' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void OpenGLSurfaceEvaluator::putCallBack(GLenum, _GLUfuncptr) -->
        <function-decl name='putCallBack' mangled-name='_ZN22OpenGLSurfaceEvaluator11putCallBackEjPFvvE' filepath='libnurbs/interface/glsurfeval.cc' line='1190' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'typedef GLenum' -->
          <parameter type-id='type-id-36'/>
          <!-- parameter of type 'typedef _GLUfuncptr' -->
          <parameter type-id='type-id-37'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::beginCallBack(GLenum, void*) -->
        <function-decl name='beginCallBack' mangled-name='_ZN22OpenGLSurfaceEvaluator13beginCallBackEjPv' filepath='libnurbs/interface/glsurfeval.cc' line='1237' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'typedef GLenum' -->
          <parameter type-id='type-id-36'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-35'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::endCallBack(void*) -->
        <function-decl name='endCallBack' mangled-name='_ZN22OpenGLSurfaceEvaluator11endCallBackEPv' filepath='libnurbs/interface/glsurfeval.cc' line='1246' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-35'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::vertexCallBack(const GLfloat*, void*) -->
        <function-decl name='vertexCallBack' mangled-name='_ZN22OpenGLSurfaceEvaluator14vertexCallBackEPKfPv' filepath='libnurbs/interface/glsurfeval.cc' line='1255' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'const GLfloat*' -->
          <parameter type-id='type-id-25'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-35'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::normalCallBack(const GLfloat*, void*) -->
        <function-decl name='normalCallBack' mangled-name='_ZN22OpenGLSurfaceEvaluator14normalCallBackEPKfPv' filepath='libnurbs/interface/glsurfeval.cc' line='1265' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'const GLfloat*' -->
          <parameter type-id='type-id-25'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-35'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::colorCallBack(const GLfloat*, void*) -->
        <function-decl name='colorCallBack' mangled-name='_ZN22OpenGLSurfaceEvaluator13colorCallBackEPKfPv' filepath='libnurbs/interface/glsurfeval.cc' line='1274' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'const GLfloat*' -->
          <parameter type-id='type-id-25'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-35'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::texcoordCallBack(const GLfloat*, void*) -->
        <function-decl name='texcoordCallBack' mangled-name='_ZN22OpenGLSurfaceEvaluator16texcoordCallBackEPKfPv' filepath='libnurbs/interface/glsurfeval.cc' line='1283' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'const GLfloat*' -->
          <parameter type-id='type-id-25'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-35'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void OpenGLSurfaceEvaluator::coord2f(REAL, REAL) -->
        <function-decl name='coord2f' mangled-name='_ZN22OpenGLSurfaceEvaluator7coord2fEff' filepath='libnurbs/interface/glsurfeval.cc' line='1106' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void OpenGLSurfaceEvaluator::point2i(long int, long int) -->
        <function-decl name='point2i' mangled-name='_ZN22OpenGLSurfaceEvaluator7point2iEll' filepath='libnurbs/interface/glsurfeval.cc' line='1069' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void OpenGLSurfaceEvaluator::newtmeshvert(REAL, REAL) -->
        <function-decl name='newtmeshvert' mangled-name='_ZN22OpenGLSurfaceEvaluator12newtmeshvertEff' filepath='libnurbs/interface/glsurfeval.cc' line='1160' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void OpenGLSurfaceEvaluator::newtmeshvert(long int, long int) -->
        <function-decl name='newtmeshvert' mangled-name='_ZN22OpenGLSurfaceEvaluator12newtmeshvertEll' filepath='libnurbs/interface/glsurfeval.cc' line='1134' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void OpenGLSurfaceEvaluator::LOD_eval_list(int) -->
        <function-decl name='LOD_eval_list' mangled-name='_ZN22OpenGLSurfaceEvaluator13LOD_eval_listEi' filepath='libnurbs/interface/glsurfeval.cc' line='84' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inMapGrid2f(int, REAL, REAL, int, REAL, REAL) -->
        <function-decl name='inMapGrid2f' mangled-name='_ZN22OpenGLSurfaceEvaluator11inMapGrid2fEiffiff' filepath='libnurbs/interface/insurfeval.cc' line='389' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inComputeFirstPartials(REAL*, REAL*, REAL*) -->
        <function-decl name='inComputeFirstPartials' mangled-name='_ZN22OpenGLSurfaceEvaluator22inComputeFirstPartialsEPfS0_S0_' filepath='libnurbs/interface/insurfeval.cc' line='501' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inPreEvaluate(int, REAL, REAL*) -->
        <function-decl name='inPreEvaluate' mangled-name='_ZN22OpenGLSurfaceEvaluator13inPreEvaluateEifPf' filepath='libnurbs/interface/insurfeval.cc' line='1022' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inPreEvaluateWithDeriv(int, REAL, REAL*, REAL*) -->
        <function-decl name='inPreEvaluateWithDeriv' mangled-name='_ZN22OpenGLSurfaceEvaluator22inPreEvaluateWithDerivEifPfS0_' filepath='libnurbs/interface/insurfeval.cc' line='1066' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inDoDomain2WithDerivs(int, REAL, REAL, REAL, REAL, int, REAL, REAL, int, REAL*, REAL*, REAL*, REAL*) -->
        <function-decl name='inDoDomain2WithDerivs' mangled-name='_ZN22OpenGLSurfaceEvaluator21inDoDomain2WithDerivsEiffffiffiPfS0_S0_S0_' filepath='libnurbs/interface/insurfeval.cc' line='949' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inDoDomain2WithDerivsBV(int, REAL, REAL, REAL, REAL, int, REAL, REAL, int, REAL*, REAL*, REAL*, REAL*) -->
        <function-decl name='inDoDomain2WithDerivsBV' mangled-name='_ZN22OpenGLSurfaceEvaluator23inDoDomain2WithDerivsBVEiffffiffiPfS0_S0_S0_' filepath='libnurbs/interface/insurfeval.cc' line='903' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inDoDomain2WithDerivsBU(int, REAL, REAL, REAL, REAL, int, REAL, REAL, int, REAL*, REAL*, REAL*, REAL*) -->
        <function-decl name='inDoDomain2WithDerivsBU' mangled-name='_ZN22OpenGLSurfaceEvaluator23inDoDomain2WithDerivsBUEiffffiffiPfS0_S0_S0_' filepath='libnurbs/interface/insurfeval.cc' line='868' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inPreEvaluateBU(int, int, int, REAL, REAL*) -->
        <function-decl name='inPreEvaluateBU' mangled-name='_ZN22OpenGLSurfaceEvaluator15inPreEvaluateBUEiiifPf' filepath='libnurbs/interface/insurfeval.cc' line='838' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inPreEvaluateBV(int, int, int, REAL, REAL*) -->
        <function-decl name='inPreEvaluateBV' mangled-name='_ZN22OpenGLSurfaceEvaluator15inPreEvaluateBVEiiifPf' filepath='libnurbs/interface/insurfeval.cc' line='809' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inEvalULine(int, REAL, REAL*, int, REAL[3]*, REAL[3]*) -->
        <function-decl name='inEvalULine' mangled-name='_ZN22OpenGLSurfaceEvaluator11inEvalULineEifPfiPA3_fS2_' filepath='libnurbs/interface/insurfeval.cc' line='1125' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'REAL[3]*' -->
          <parameter type-id='type-id-58'/>
          <!-- parameter of type 'REAL[3]*' -->
          <parameter type-id='type-id-58'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inEvalVLine(int, REAL, REAL*, int, REAL[3]*, REAL[3]*) -->
        <function-decl name='inEvalVLine' mangled-name='_ZN22OpenGLSurfaceEvaluator11inEvalVLineEifPfiPA3_fS2_' filepath='libnurbs/interface/insurfeval.cc' line='1144' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'REAL[3]*' -->
          <parameter type-id='type-id-58'/>
          <!-- parameter of type 'REAL[3]*' -->
          <parameter type-id='type-id-58'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inMap2fEM(int, int, REAL, REAL, int, int, REAL, REAL, int, int, REAL*) -->
        <function-decl name='inMap2fEM' mangled-name='_ZN22OpenGLSurfaceEvaluator9inMap2fEMEiiffiiffiiPf' filepath='libnurbs/interface/insurfeval.cc' line='1540' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inDoDomain2WithDerivsEM(surfEvalMachine*, REAL, REAL, REAL*, REAL*, REAL*) -->
        <function-decl name='inDoDomain2WithDerivsEM' mangled-name='_ZN22OpenGLSurfaceEvaluator23inDoDomain2WithDerivsEMEP15surfEvalMachineffPfS2_S2_' filepath='libnurbs/interface/insurfeval.cc' line='1600' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'surfEvalMachine*' -->
          <parameter type-id='type-id-59'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inDoDomain2EM(surfEvalMachine*, REAL, REAL, REAL*) -->
        <function-decl name='inDoDomain2EM' mangled-name='_ZN22OpenGLSurfaceEvaluator13inDoDomain2EMEP15surfEvalMachineffPf' filepath='libnurbs/interface/insurfeval.cc' line='1653' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'surfEvalMachine*' -->
          <parameter type-id='type-id-59'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inEvalVStrip(int, REAL, REAL*, int, REAL, REAL*) -->
        <function-decl name='inEvalVStrip' mangled-name='_ZN22OpenGLSurfaceEvaluator12inEvalVStripEifPfifS0_' filepath='libnurbs/interface/insurfeval.cc' line='1355' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inEvalUStrip(int, REAL, REAL*, int, REAL, REAL*) -->
        <function-decl name='inEvalUStrip' mangled-name='_ZN22OpenGLSurfaceEvaluator12inEvalUStripEifPfifS0_' filepath='libnurbs/interface/insurfeval.cc' line='1166' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inComputeNormal2(REAL*, REAL*, REAL*) -->
        <function-decl name='inComputeNormal2' mangled-name='_ZN22OpenGLSurfaceEvaluator16inComputeNormal2EPfS0_S0_' filepath='libnurbs/interface/insurfeval.cc' line='518' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inDoEvalCoord2EM(REAL, REAL) -->
        <function-decl name='inDoEvalCoord2EM' mangled-name='_ZN22OpenGLSurfaceEvaluator16inDoEvalCoord2EMEff' filepath='libnurbs/interface/insurfeval.cc' line='1702' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inBPMEvalEM(bezierPatchMesh*) -->
        <function-decl name='inBPMEvalEM' mangled-name='_ZN22OpenGLSurfaceEvaluator11inBPMEvalEMEP15bezierPatchMesh' filepath='libnurbs/interface/insurfeval.cc' line='1826' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'bezierPatchMesh*' -->
          <parameter type-id='type-id-54'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inBPMListEvalEM(bezierPatchMesh*) -->
        <function-decl name='inBPMListEvalEM' mangled-name='_ZN22OpenGLSurfaceEvaluator15inBPMListEvalEMEP15bezierPatchMesh' filepath='libnurbs/interface/insurfeval.cc' line='2056' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'bezierPatchMesh*' -->
          <parameter type-id='type-id-54'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inDoEvalCoord2(REAL, REAL, REAL*, REAL*) -->
        <function-decl name='inDoEvalCoord2' mangled-name='_ZN22OpenGLSurfaceEvaluator14inDoEvalCoord2EffPfS0_' filepath='libnurbs/interface/insurfeval.cc' line='541' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inEvalMesh2(int, int, int, int) -->
        <function-decl name='inEvalMesh2' mangled-name='_ZN22OpenGLSurfaceEvaluator11inEvalMesh2Eiiii' filepath='libnurbs/interface/insurfeval.cc' line='400' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inEvalCoord2f(REAL, REAL) -->
        <function-decl name='inEvalCoord2f' mangled-name='_ZN22OpenGLSurfaceEvaluator13inEvalCoord2fEff' filepath='libnurbs/interface/insurfeval.cc' line='375' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inEvalPoint2(int, int) -->
        <function-decl name='inEvalPoint2' mangled-name='_ZN22OpenGLSurfaceEvaluator12inEvalPoint2Eii' filepath='libnurbs/interface/insurfeval.cc' line='362' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inMap2f(int, REAL, REAL, int, int, REAL, REAL, int, int, REAL*) -->
        <function-decl name='inMap2f' mangled-name='_ZN22OpenGLSurfaceEvaluator7inMap2fEiffiiffiiPf' filepath='libnurbs/interface/insurfeval.cc' line='444' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inBPMEval(bezierPatchMesh*) -->
        <function-decl name='inBPMEval' mangled-name='_ZN22OpenGLSurfaceEvaluator9inBPMEvalEP15bezierPatchMesh' filepath='libnurbs/interface/insurfeval.cc' line='247' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'bezierPatchMesh*' -->
          <parameter type-id='type-id-54'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void OpenGLSurfaceEvaluator::inBPMListEval(bezierPatchMesh*) -->
        <function-decl name='inBPMListEval' mangled-name='_ZN22OpenGLSurfaceEvaluator13inBPMListEvalEP15bezierPatchMesh' filepath='libnurbs/interface/insurfeval.cc' line='238' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'bezierPatchMesh*' -->
          <parameter type-id='type-id-54'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' destructor='yes' vtable-offset='-1'>
        <!-- OpenGLSurfaceEvaluator::~OpenGLSurfaceEvaluator(int) -->
        <function-decl name='~OpenGLSurfaceEvaluator' filepath='libnurbs/interface/glsurfeval.cc' line='162' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='9'>
        <!-- void OpenGLSurfaceEvaluator::range2f(long int, REAL*, REAL*) -->
        <function-decl name='range2f' mangled-name='_ZN22OpenGLSurfaceEvaluator7range2fElPfS0_' filepath='libnurbs/interface/glsurfeval.cc' line='258' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='10'>
        <!-- void OpenGLSurfaceEvaluator::domain2f(REAL, REAL, REAL, REAL) -->
        <function-decl name='domain2f' mangled-name='_ZN22OpenGLSurfaceEvaluator8domain2fEffff' filepath='libnurbs/interface/glsurfeval.cc' line='263' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='11'>
        <!-- void OpenGLSurfaceEvaluator::enable(long int) -->
        <function-decl name='enable' mangled-name='_ZN22OpenGLSurfaceEvaluator6enableEl' filepath='libnurbs/interface/glsurfeval.cc' line='185' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='12'>
        <!-- void OpenGLSurfaceEvaluator::disable(long int) -->
        <function-decl name='disable' mangled-name='_ZN22OpenGLSurfaceEvaluator7disableEl' filepath='libnurbs/interface/glsurfeval.cc' line='175' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='13'>
        <!-- void OpenGLSurfaceEvaluator::bgnmap2f(long int) -->
        <function-decl name='bgnmap2f' mangled-name='_ZN22OpenGLSurfaceEvaluator8bgnmap2fEl' filepath='libnurbs/interface/glsurfeval.cc' line='739' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='14'>
        <!-- void OpenGLSurfaceEvaluator::map2f(long int, REAL, REAL, long int, long int, REAL, REAL, long int, long int, REAL*) -->
        <function-decl name='map2f' mangled-name='_ZN22OpenGLSurfaceEvaluator5map2fElffllffllPf' filepath='libnurbs/interface/glsurfeval.cc' line='872' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='15'>
        <!-- void OpenGLSurfaceEvaluator::mapgrid2f(long int, REAL, REAL, long int, REAL, REAL) -->
        <function-decl name='mapgrid2f' mangled-name='_ZN22OpenGLSurfaceEvaluator9mapgrid2fElfflff' filepath='libnurbs/interface/glsurfeval.cc' line='195' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='16'>
        <!-- void OpenGLSurfaceEvaluator::mapmesh2f(long int, long int, long int, long int, long int) -->
        <function-decl name='mapmesh2f' mangled-name='_ZN22OpenGLSurfaceEvaluator9mapmesh2fElllll' filepath='libnurbs/interface/glsurfeval.cc' line='946' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='17'>
        <!-- void OpenGLSurfaceEvaluator::evalcoord2f(long int, REAL, REAL) -->
        <function-decl name='evalcoord2f' mangled-name='_ZN22OpenGLSurfaceEvaluator11evalcoord2fElff' filepath='libnurbs/interface/glsurfeval.cc' line='1042' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='18'>
        <!-- void OpenGLSurfaceEvaluator::evalpoint2i(long int, long int) -->
        <function-decl name='evalpoint2i' mangled-name='_ZN22OpenGLSurfaceEvaluator11evalpoint2iEll' filepath='libnurbs/interface/glsurfeval.cc' line='1059' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='19'>
        <!-- void OpenGLSurfaceEvaluator::endmap2f() -->
        <function-decl name='endmap2f' mangled-name='_ZN22OpenGLSurfaceEvaluator8endmap2fEv' filepath='libnurbs/interface/glsurfeval.cc' line='801' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='20'>
        <!-- void OpenGLSurfaceEvaluator::polymode(long int) -->
        <function-decl name='polymode' mangled-name='_ZN22OpenGLSurfaceEvaluator8polymodeEl' filepath='libnurbs/interface/glsurfeval.cc' line='219' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='21'>
        <!-- void OpenGLSurfaceEvaluator::bgnline() -->
        <function-decl name='bgnline' mangled-name='_ZN22OpenGLSurfaceEvaluator7bgnlineEv' filepath='libnurbs/interface/glsurfeval.cc' line='240' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='22'>
        <!-- void OpenGLSurfaceEvaluator::endline() -->
        <function-decl name='endline' mangled-name='_ZN22OpenGLSurfaceEvaluator7endlineEv' filepath='libnurbs/interface/glsurfeval.cc' line='249' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='23'>
        <!-- void OpenGLSurfaceEvaluator::bgnclosedline() -->
        <function-decl name='bgnclosedline' mangled-name='_ZN22OpenGLSurfaceEvaluator13bgnclosedlineEv' filepath='libnurbs/interface/glsurfeval.cc' line='268' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='24'>
        <!-- void OpenGLSurfaceEvaluator::endclosedline() -->
        <function-decl name='endclosedline' mangled-name='_ZN22OpenGLSurfaceEvaluator13endclosedlineEv' filepath='libnurbs/interface/glsurfeval.cc' line='277' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='25'>
        <!-- void OpenGLSurfaceEvaluator::bgntmesh() -->
        <function-decl name='bgntmesh' mangled-name='_ZN22OpenGLSurfaceEvaluator8bgntmeshEv' filepath='libnurbs/interface/glsurfeval.cc' line='290' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='26'>
        <!-- void OpenGLSurfaceEvaluator::swaptmesh() -->
        <function-decl name='swaptmesh' mangled-name='_ZN22OpenGLSurfaceEvaluator9swaptmeshEv' filepath='libnurbs/interface/glsurfeval.cc' line='305' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='27'>
        <!-- void OpenGLSurfaceEvaluator::endtmesh() -->
        <function-decl name='endtmesh' mangled-name='_ZN22OpenGLSurfaceEvaluator8endtmeshEv' filepath='libnurbs/interface/glsurfeval.cc' line='312' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='28'>
        <!-- void OpenGLSurfaceEvaluator::bgnqstrip() -->
        <function-decl name='bgnqstrip' mangled-name='_ZN22OpenGLSurfaceEvaluator9bgnqstripEv' filepath='libnurbs/interface/glsurfeval.cc' line='712' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='29'>
        <!-- void OpenGLSurfaceEvaluator::endqstrip() -->
        <function-decl name='endqstrip' mangled-name='_ZN22OpenGLSurfaceEvaluator9endqstripEv' filepath='libnurbs/interface/glsurfeval.cc' line='725' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='30'>
        <!-- void OpenGLSurfaceEvaluator::bgntfan() -->
        <function-decl name='bgntfan' mangled-name='_ZN22OpenGLSurfaceEvaluator7bgntfanEv' filepath='libnurbs/interface/glsurfeval.cc' line='324' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='31'>
        <!-- void OpenGLSurfaceEvaluator::endtfan() -->
        <function-decl name='endtfan' mangled-name='_ZN22OpenGLSurfaceEvaluator7endtfanEv' filepath='libnurbs/interface/glsurfeval.cc' line='334' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='32'>
        <!-- void OpenGLSurfaceEvaluator::evalUStrip(int, REAL, REAL*, int, REAL, REAL*) -->
        <function-decl name='evalUStrip' mangled-name='_ZN22OpenGLSurfaceEvaluator10evalUStripEifPfifS0_' filepath='libnurbs/interface/glsurfeval.cc' line='343' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='33'>
        <!-- void OpenGLSurfaceEvaluator::evalVStrip(int, REAL, REAL*, int, REAL, REAL*) -->
        <function-decl name='evalVStrip' mangled-name='_ZN22OpenGLSurfaceEvaluator10evalVStripEifPfifS0_' filepath='libnurbs/interface/glsurfeval.cc' line='530' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='34'>
        <!-- void OpenGLSurfaceEvaluator::inDoEvalCoord2NOGE(REAL, REAL, REAL*, REAL*) -->
        <function-decl name='inDoEvalCoord2NOGE' mangled-name='_ZN22OpenGLSurfaceEvaluator18inDoEvalCoord2NOGEEffPfS0_' filepath='libnurbs/interface/glsurfeval.h' line='283' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='35'>
        <!-- void OpenGLSurfaceEvaluator::inDoEvalCoord2NOGE_BU(REAL, REAL, REAL*, REAL*) -->
        <function-decl name='inDoEvalCoord2NOGE_BU' mangled-name='_ZN22OpenGLSurfaceEvaluator21inDoEvalCoord2NOGE_BUEffPfS0_' filepath='libnurbs/interface/glsurfeval.h' line='342' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='36'>
        <!-- void OpenGLSurfaceEvaluator::inDoEvalCoord2NOGE_BV(REAL, REAL, REAL*, REAL*) -->
        <function-decl name='inDoEvalCoord2NOGE_BV' mangled-name='_ZN22OpenGLSurfaceEvaluator21inDoEvalCoord2NOGE_BVEffPfS0_' filepath='libnurbs/interface/glsurfeval.h' line='339' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='37'>
        <!-- void OpenGLSurfaceEvaluator::inPreEvaluateBV_intfac(REAL) -->
        <function-decl name='inPreEvaluateBV_intfac' mangled-name='_ZN22OpenGLSurfaceEvaluator22inPreEvaluateBV_intfacEf' filepath='libnurbs/interface/glsurfeval.h' line='316' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='38'>
        <!-- void OpenGLSurfaceEvaluator::inPreEvaluateBU_intfac(REAL) -->
        <function-decl name='inPreEvaluateBU_intfac' mangled-name='_ZN22OpenGLSurfaceEvaluator22inPreEvaluateBU_intfacEf' filepath='libnurbs/interface/glsurfeval.h' line='321' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/interface/glrenderer.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- GLfloat[4] -->
    <array-type-def dimensions='1' type-id='type-id-23' size-in-bits='128' id='type-id-60'>
      <!-- <anonymous range>[4] -->
      <subrange length='4' type-id='type-id-3' id='type-id-61'/>
    </array-type-def>
    <!-- typedef void (typedef GLenum)* errorCallbackType -->
    <typedef-decl name='errorCallbackType' type-id='type-id-31' filepath='libnurbs/interface/glrenderer.h' line='46' column='1' id='type-id-41'/>
    <!-- GLfloat[4]* -->
    <pointer-type-def type-id='type-id-60' size-in-bits='64' id='type-id-46'/>
    <!-- class NurbsTessellator -->
    <class-decl name='NurbsTessellator' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='53' column='1' is-declaration-only='yes' id='type-id-40'>
      <data-member access='protected' layout-offset-in-bits='64'>
        <!-- Renderhints NurbsTessellator::renderhints -->
        <var-decl name='renderhints' type-id='type-id-62' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='104' column='1'/>
      </data-member>
      <data-member access='protected' layout-offset-in-bits='320'>
        <!-- Maplist NurbsTessellator::maplist -->
        <var-decl name='maplist' type-id='type-id-63' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='105' column='1'/>
      </data-member>
      <data-member access='protected' layout-offset-in-bits='3008'>
        <!-- Backend NurbsTessellator::backend -->
        <var-decl name='backend' type-id='type-id-64' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='106' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='3648'>
        <!-- Subdivider NurbsTessellator::subdivider -->
        <var-decl name='subdivider' type-id='type-id-65' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='134' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='24064'>
        <!-- JumpBuffer* NurbsTessellator::jumpbuffer -->
        <var-decl name='jumpbuffer' type-id='type-id-66' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='135' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='24128'>
        <!-- Pool NurbsTessellator::o_pwlcurvePool -->
        <var-decl name='o_pwlcurvePool' type-id='type-id-67' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='136' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='26624'>
        <!-- Pool NurbsTessellator::o_nurbscurvePool -->
        <var-decl name='o_nurbscurvePool' type-id='type-id-67' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='137' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='29120'>
        <!-- Pool NurbsTessellator::o_curvePool -->
        <var-decl name='o_curvePool' type-id='type-id-67' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='138' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='31616'>
        <!-- Pool NurbsTessellator::o_trimPool -->
        <var-decl name='o_trimPool' type-id='type-id-67' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='139' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='34112'>
        <!-- Pool NurbsTessellator::o_surfacePool -->
        <var-decl name='o_surfacePool' type-id='type-id-67' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='140' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='36608'>
        <!-- Pool NurbsTessellator::o_nurbssurfacePool -->
        <var-decl name='o_nurbssurfacePool' type-id='type-id-67' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='141' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='39104'>
        <!-- Pool NurbsTessellator::propertyPool -->
        <var-decl name='propertyPool' type-id='type-id-67' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='142' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='41600'>
        <!-- Pool NurbsTessellator::quiltPool -->
        <var-decl name='quiltPool' type-id='type-id-67' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='144' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='44096'>
        <!-- TrimVertexPool NurbsTessellator::extTrimVertexPool -->
        <var-decl name='extTrimVertexPool' type-id='type-id-68' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='146' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='46720'>
        <!-- int NurbsTessellator::inSurface -->
        <var-decl name='inSurface' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='148' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='46752'>
        <!-- int NurbsTessellator::inCurve -->
        <var-decl name='inCurve' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='149' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='46784'>
        <!-- int NurbsTessellator::inTrim -->
        <var-decl name='inTrim' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='150' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='46816'>
        <!-- int NurbsTessellator::isCurveModified -->
        <var-decl name='isCurveModified' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='151' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='46848'>
        <!-- int NurbsTessellator::isTrimModified -->
        <var-decl name='isTrimModified' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='152' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='46880'>
        <!-- int NurbsTessellator::isSurfaceModified -->
        <var-decl name='isSurfaceModified' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='153' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='46912'>
        <!-- int NurbsTessellator::isDataValid -->
        <var-decl name='isDataValid' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='154' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='46944'>
        <!-- int NurbsTessellator::numTrims -->
        <var-decl name='numTrims' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='155' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='46976'>
        <!-- int NurbsTessellator::playBack -->
        <var-decl name='playBack' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='156' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='47040'>
        <!-- O_trim** NurbsTessellator::nextTrim -->
        <var-decl name='nextTrim' type-id='type-id-69' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='158' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='47104'>
        <!-- O_curve** NurbsTessellator::nextCurve -->
        <var-decl name='nextCurve' type-id='type-id-70' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='159' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='47168'>
        <!-- O_nurbscurve** NurbsTessellator::nextNurbscurve -->
        <var-decl name='nextNurbscurve' type-id='type-id-71' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='160' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='47232'>
        <!-- O_pwlcurve** NurbsTessellator::nextPwlcurve -->
        <var-decl name='nextPwlcurve' type-id='type-id-72' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='161' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='47296'>
        <!-- O_nurbssurface** NurbsTessellator::nextNurbssurface -->
        <var-decl name='nextNurbssurface' type-id='type-id-73' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='162' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='47360'>
        <!-- O_surface* NurbsTessellator::currentSurface -->
        <var-decl name='currentSurface' type-id='type-id-74' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='164' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='47424'>
        <!-- O_trim* NurbsTessellator::currentTrim -->
        <var-decl name='currentTrim' type-id='type-id-75' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='165' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='47488'>
        <!-- O_curve* NurbsTessellator::currentCurve -->
        <var-decl name='currentCurve' type-id='type-id-76' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='166' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='47552'>
        <!-- DisplayList* NurbsTessellator::dl -->
        <var-decl name='dl' type-id='type-id-77' visibility='default' filepath='libnurbs/internals/nurbstess.h' line='168' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- NurbsTessellator::NurbsTessellator(BasicCurveEvaluator&, BasicSurfaceEvaluator&) -->
        <function-decl name='NurbsTessellator' filepath='libnurbs/internals/nurbsinterfac.cc' line='66' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'BasicCurveEvaluator&' -->
          <parameter type-id='type-id-79'/>
          <!-- parameter of type 'BasicSurfaceEvaluator&' -->
          <parameter type-id='type-id-80'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::playRecording(void*) -->
        <function-decl name='playRecording' mangled-name='_ZN16NurbsTessellator13playRecordingEPv' filepath='libnurbs/internals/nurbsinterfac.cc' line='529' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-35'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::endRecording() -->
        <function-decl name='endRecording' mangled-name='_ZN16NurbsTessellator12endRecordingEv' filepath='libnurbs/internals/nurbsinterfac.cc' line='522' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void* NurbsTessellator::beginRecording() -->
        <function-decl name='beginRecording' mangled-name='_ZN16NurbsTessellator14beginRecordingEv' filepath='libnurbs/internals/nurbsinterfac.cc' line='515' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- void* -->
          <return type-id='type-id-35'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::discardRecording(void*) -->
        <function-decl name='discardRecording' mangled-name='_ZN16NurbsTessellator16discardRecordingEPv' filepath='libnurbs/internals/nurbsinterfac.cc' line='509' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-35'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::defineMap(long int, long int, long int) -->
        <function-decl name='defineMap' mangled-name='_ZN16NurbsTessellator9defineMapElll' filepath='libnurbs/internals/nurbsinterfac.cc' line='503' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::redefineMaps() -->
        <function-decl name='redefineMaps' mangled-name='_ZN16NurbsTessellator12redefineMapsEv' filepath='libnurbs/internals/nurbsinterfac.cc' line='497' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::setnurbsproperty(long int, long int, float*, long int, long int) -->
        <function-decl name='setnurbsproperty' mangled-name='_ZN16NurbsTessellator16setnurbspropertyEllPfll' filepath='libnurbs/internals/nurbsinterfac.cc' line='474' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'float*' -->
          <parameter type-id='type-id-49'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::setnurbsproperty(long int, long int, float*) -->
        <function-decl name='setnurbsproperty' mangled-name='_ZN16NurbsTessellator16setnurbspropertyEllPf' filepath='libnurbs/internals/nurbsinterfac.cc' line='451' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'float*' -->
          <parameter type-id='type-id-49'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::getnurbsproperty(long int, long int, float*) -->
        <function-decl name='getnurbsproperty' mangled-name='_ZN16NurbsTessellator16getnurbspropertyEllPf' filepath='libnurbs/internals/nurbsinterfac.cc' line='431' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'float*' -->
          <parameter type-id='type-id-49'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::getnurbsproperty(long int, float*) -->
        <function-decl name='getnurbsproperty' mangled-name='_ZN16NurbsTessellator16getnurbspropertyElPf' filepath='libnurbs/internals/nurbsinterfac.cc' line='415' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'float*' -->
          <parameter type-id='type-id-49'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::endtrim() -->
        <function-decl name='endtrim' mangled-name='_ZN16NurbsTessellator7endtrimEv' filepath='libnurbs/internals/nurbsinterfac.cc' line='179' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::endsurface() -->
        <function-decl name='endsurface' mangled-name='_ZN16NurbsTessellator10endsurfaceEv' filepath='libnurbs/internals/nurbsinterfac.cc' line='153' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::endcurve() -->
        <function-decl name='endcurve' mangled-name='_ZN16NurbsTessellator8endcurveEv' filepath='libnurbs/internals/nurbsinterfac.cc' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::bgnsurface(long int) -->
        <function-decl name='bgnsurface' mangled-name='_ZN16NurbsTessellator10bgnsurfaceEl' filepath='libnurbs/internals/nurbsinterfac.cc' line='113' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::bgntrim() -->
        <function-decl name='bgntrim' mangled-name='_ZN16NurbsTessellator7bgntrimEv' filepath='libnurbs/internals/nurbsinterfac.cc' line='166' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::bgncurve(long int) -->
        <function-decl name='bgncurve' mangled-name='_ZN16NurbsTessellator8bgncurveEl' filepath='libnurbs/internals/nurbsinterfac.cc' line='127' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::setnurbsproperty(long int, float) -->
        <function-decl name='setnurbsproperty' mangled-name='_ZN16NurbsTessellator16setnurbspropertyElf' filepath='libnurbs/internals/nurbsinterfac.cc' line='373' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'float' -->
          <parameter type-id='type-id-15'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::pwlcurve(long int, float*, long int, long int) -->
        <function-decl name='pwlcurve' mangled-name='_ZN16NurbsTessellator8pwlcurveElPfll' filepath='libnurbs/internals/nurbsinterfac.cc' line='197' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'float*' -->
          <parameter type-id='type-id-49'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::setnurbsproperty(long int, long int, float) -->
        <function-decl name='setnurbsproperty' mangled-name='_ZN16NurbsTessellator16setnurbspropertyEllf' filepath='libnurbs/internals/nurbsinterfac.cc' line='389' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'float' -->
          <parameter type-id='type-id-15'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::nurbscurve(long int, float*, long int, float*, long int, long int) -->
        <function-decl name='nurbscurve' mangled-name='_ZN16NurbsTessellator10nurbscurveElPflS0_ll' filepath='libnurbs/internals/nurbsinterfac.cc' line='269' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'float*' -->
          <parameter type-id='type-id-49'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'float*' -->
          <parameter type-id='type-id-49'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::nurbssurface(long int, float*, long int, float*, long int, long int, float*, long int, long int, long int) -->
        <function-decl name='nurbssurface' mangled-name='_ZN16NurbsTessellator12nurbssurfaceElPflS0_llS0_lll' filepath='libnurbs/internals/nurbsinterfac.cc' line='318' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'float*' -->
          <parameter type-id='type-id-49'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'float*' -->
          <parameter type-id='type-id-49'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'float*' -->
          <parameter type-id='type-id-49'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::do_freenurbsproperty(Property*) -->
        <function-decl name='do_freenurbsproperty' mangled-name='_ZN16NurbsTessellator20do_freenurbspropertyEP8Property' filepath='libnurbs/internals/nurbstess.cc' line='636' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'Property*' -->
          <parameter type-id='type-id-81'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::do_freepwlcurve(O_pwlcurve*) -->
        <function-decl name='do_freepwlcurve' mangled-name='_ZN16NurbsTessellator15do_freepwlcurveEP10O_pwlcurve' filepath='libnurbs/internals/nurbstess.cc' line='450' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'O_pwlcurve*' -->
          <parameter type-id='type-id-82'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::do_freebgncurve(O_curve*) -->
        <function-decl name='do_freebgncurve' mangled-name='_ZN16NurbsTessellator15do_freebgncurveEP7O_curve' filepath='libnurbs/internals/nurbstess.cc' line='456' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'O_curve*' -->
          <parameter type-id='type-id-76'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::do_freebgntrim(O_trim*) -->
        <function-decl name='do_freebgntrim' mangled-name='_ZN16NurbsTessellator14do_freebgntrimEP6O_trim' filepath='libnurbs/internals/nurbstess.cc' line='376' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'O_trim*' -->
          <parameter type-id='type-id-75'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::do_freebgnsurface(O_surface*) -->
        <function-decl name='do_freebgnsurface' mangled-name='_ZN16NurbsTessellator17do_freebgnsurfaceEP9O_surface' filepath='libnurbs/internals/nurbstess.cc' line='115' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'O_surface*' -->
          <parameter type-id='type-id-74'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::resetObjects() -->
        <function-decl name='resetObjects' mangled-name='_ZN16NurbsTessellator12resetObjectsEv' filepath='libnurbs/internals/nurbstess.cc' line='71' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::set_domain_distance_u_rate(REAL) -->
        <function-decl name='set_domain_distance_u_rate' mangled-name='_ZN16NurbsTessellator26set_domain_distance_u_rateEf' filepath='libnurbs/internals/nurbstess.cc' line='53' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::set_domain_distance_v_rate(REAL) -->
        <function-decl name='set_domain_distance_v_rate' mangled-name='_ZN16NurbsTessellator26set_domain_distance_v_rateEf' filepath='libnurbs/internals/nurbstess.cc' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::set_is_domain_distance_sampling(int) -->
        <function-decl name='set_is_domain_distance_sampling' mangled-name='_ZN16NurbsTessellator31set_is_domain_distance_samplingEi' filepath='libnurbs/internals/nurbstess.cc' line='65' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::do_nurbserror(int) -->
        <function-decl name='do_nurbserror' mangled-name='_ZN16NurbsTessellator13do_nurbserrorEi' filepath='libnurbs/internals/nurbstess.cc' line='672' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::do_endtrim() -->
        <function-decl name='do_endtrim' mangled-name='_ZN16NurbsTessellator10do_endtrimEv' filepath='libnurbs/internals/nurbstess.cc' line='422' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int NurbsTessellator::do_check_knots(Knotvector*, const char*) -->
        <function-decl name='do_check_knots' mangled-name='_ZN16NurbsTessellator14do_check_knotsEP10KnotvectorPKc' filepath='libnurbs/internals/nurbstess.cc' line='678' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'Knotvector*' -->
          <parameter type-id='type-id-83'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-84'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::do_setnurbsproperty2(Property*) -->
        <function-decl name='do_setnurbsproperty2' mangled-name='_ZN16NurbsTessellator20do_setnurbsproperty2EP8Property' filepath='libnurbs/internals/nurbstess.cc' line='657' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'Property*' -->
          <parameter type-id='type-id-81'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::do_setnurbsproperty(Property*) -->
        <function-decl name='do_setnurbsproperty' mangled-name='_ZN16NurbsTessellator19do_setnurbspropertyEP8Property' filepath='libnurbs/internals/nurbstess.cc' line='649' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'Property*' -->
          <parameter type-id='type-id-81'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::do_nurbssurface(O_nurbssurface*) -->
        <function-decl name='do_nurbssurface' mangled-name='_ZN16NurbsTessellator15do_nurbssurfaceEP14O_nurbssurface' filepath='libnurbs/internals/nurbstess.cc' line='598' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'O_nurbssurface*' -->
          <parameter type-id='type-id-85'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::do_bgnsurface(O_surface*) -->
        <function-decl name='do_bgnsurface' mangled-name='_ZN16NurbsTessellator13do_bgnsurfaceEP9O_surface' filepath='libnurbs/internals/nurbstess.cc' line='128' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'O_surface*' -->
          <parameter type-id='type-id-74'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::do_freenurbssurface(O_nurbssurface*) -->
        <function-decl name='do_freenurbssurface' mangled-name='_ZN16NurbsTessellator19do_freenurbssurfaceEP14O_nurbssurface' filepath='libnurbs/internals/nurbstess.cc' line='585' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'O_nurbssurface*' -->
          <parameter type-id='type-id-85'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::do_freenurbscurve(O_nurbscurve*) -->
        <function-decl name='do_freenurbscurve' mangled-name='_ZN16NurbsTessellator17do_freenurbscurveEP12O_nurbscurve' filepath='libnurbs/internals/nurbstess.cc' line='520' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'O_nurbscurve*' -->
          <parameter type-id='type-id-86'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::do_freecurveall(O_curve*) -->
        <function-decl name='do_freecurveall' mangled-name='_ZN16NurbsTessellator15do_freecurveallEP7O_curve' filepath='libnurbs/internals/nurbstess.cc' line='341' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'O_curve*' -->
          <parameter type-id='type-id-76'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::do_freeall() -->
        <function-decl name='do_freeall' mangled-name='_ZN16NurbsTessellator10do_freeallEv' filepath='libnurbs/internals/nurbstess.cc' line='315' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::do_nurbscurve(O_nurbscurve*) -->
        <function-decl name='do_nurbscurve' mangled-name='_ZN16NurbsTessellator13do_nurbscurveEP12O_nurbscurve' filepath='libnurbs/internals/nurbstess.cc' line='534' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'O_nurbscurve*' -->
          <parameter type-id='type-id-86'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::do_pwlcurve(O_pwlcurve*) -->
        <function-decl name='do_pwlcurve' mangled-name='_ZN16NurbsTessellator11do_pwlcurveEP10O_pwlcurve' filepath='libnurbs/internals/nurbstess.cc' line='468' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'O_pwlcurve*' -->
          <parameter type-id='type-id-82'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::do_bgncurve(O_curve*) -->
        <function-decl name='do_bgncurve' mangled-name='_ZN16NurbsTessellator11do_bgncurveEP7O_curve' filepath='libnurbs/internals/nurbstess.cc' line='154' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'O_curve*' -->
          <parameter type-id='type-id-76'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::do_bgntrim(O_trim*) -->
        <function-decl name='do_bgntrim' mangled-name='_ZN16NurbsTessellator10do_bgntrimEP6O_trim' filepath='libnurbs/internals/nurbstess.cc' line='389' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- parameter of type 'O_trim*' -->
          <parameter type-id='type-id-75'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::do_endsurface() -->
        <function-decl name='do_endsurface' mangled-name='_ZN16NurbsTessellator13do_endsurfaceEv' filepath='libnurbs/internals/nurbstess.cc' line='239' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void NurbsTessellator::do_endcurve() -->
        <function-decl name='do_endcurve' mangled-name='_ZN16NurbsTessellator11do_endcurveEv' filepath='libnurbs/internals/nurbstess.cc' line='187' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes' vtable-offset='-1'>
        <!-- NurbsTessellator::~NurbsTessellator(int) -->
        <function-decl name='~NurbsTessellator' filepath='libnurbs/internals/nurbsinterfac.cc' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='2'>
        <!-- void NurbsTessellator::bgnrender() -->
        <function-decl name='bgnrender' mangled-name='_ZN16NurbsTessellator9bgnrenderEv' filepath='libnurbs/internals/nurbstess.h' line='67' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='3'>
        <!-- void NurbsTessellator::endrender() -->
        <function-decl name='endrender' mangled-name='_ZN16NurbsTessellator9endrenderEv' filepath='libnurbs/internals/nurbstess.h' line='68' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='4'>
        <!-- void NurbsTessellator::makeobj(int) -->
        <function-decl name='makeobj' mangled-name='_ZN16NurbsTessellator7makeobjEi' filepath='libnurbs/internals/nurbstess.h' line='71' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='5'>
        <!-- void NurbsTessellator::closeobj() -->
        <function-decl name='closeobj' mangled-name='_ZN16NurbsTessellator8closeobjEv' filepath='libnurbs/internals/nurbstess.h' line='72' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='6'>
        <!-- void NurbsTessellator::errorHandler(int) -->
        <function-decl name='errorHandler' mangled-name='_ZN16NurbsTessellator12errorHandlerEi' filepath='libnurbs/internals/nurbstess.h' line='75' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/interface/glsurfeval.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- GLint[2] -->
    <array-type-def dimensions='1' type-id='type-id-50' size-in-bits='64' id='type-id-53'>
      <!-- <anonymous range>[2] -->
      <subrange length='2' type-id='type-id-3' id='type-id-87'/>
    </array-type-def>
    <!-- REAL[2] -->
    <array-type-def dimensions='1' type-id='type-id-1' size-in-bits='64' id='type-id-88'>
      <!-- <anonymous range>[2] -->
      <subrange length='2' type-id='type-id-3' id='type-id-87'/>
    </array-type-def>
    <!-- REAL[3] -->
    <array-type-def dimensions='1' type-id='type-id-1' size-in-bits='96' id='type-id-89'>
      <!-- <anonymous range>[3] -->
      <subrange length='3' type-id='type-id-3' id='type-id-90'/>
    </array-type-def>
    <!-- REAL[40][4] -->
    <array-type-def dimensions='2' type-id='type-id-1' size-in-bits='5120' id='type-id-55'>
      <!-- <anonymous range>[40] -->
      <subrange length='40' type-id='type-id-3' id='type-id-6'/>
      <!-- <anonymous range>[4] -->
      <subrange length='4' type-id='type-id-3' id='type-id-61'/>
    </array-type-def>
    <!-- REAL[6400] -->
    <array-type-def dimensions='1' type-id='type-id-1' size-in-bits='204800' id='type-id-56'>
      <!-- <anonymous range>[6400] -->
      <subrange length='6400' type-id='type-id-3' id='type-id-91'/>
    </array-type-def>
    <!-- StoredVertex*[3] -->
    <array-type-def dimensions='1' type-id='type-id-92' size-in-bits='192' id='type-id-52'>
      <!-- <anonymous range>[3] -->
      <subrange length='3' type-id='type-id-3' id='type-id-90'/>
    </array-type-def>
    <!-- long int[2] -->
    <array-type-def dimensions='1' type-id='type-id-38' size-in-bits='128' id='type-id-93'>
      <!-- <anonymous range>[2] -->
      <subrange length='2' type-id='type-id-3' id='type-id-87'/>
    </array-type-def>
    <!-- struct bezierPatch -->
    <class-decl name='bezierPatch' size-in-bits='384' is-struct='yes' visibility='default' filepath='libnurbs/interface/bezierPatch.h' line='36' column='1' id='type-id-94'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- float bezierPatch::umin -->
        <var-decl name='umin' type-id='type-id-15' visibility='default' filepath='libnurbs/interface/bezierPatch.h' line='37' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- float bezierPatch::vmin -->
        <var-decl name='vmin' type-id='type-id-15' visibility='default' filepath='libnurbs/interface/bezierPatch.h' line='37' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- float bezierPatch::umax -->
        <var-decl name='umax' type-id='type-id-15' visibility='default' filepath='libnurbs/interface/bezierPatch.h' line='37' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- float bezierPatch::vmax -->
        <var-decl name='vmax' type-id='type-id-15' visibility='default' filepath='libnurbs/interface/bezierPatch.h' line='37' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- int bezierPatch::uorder -->
        <var-decl name='uorder' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/bezierPatch.h' line='38' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='160'>
        <!-- int bezierPatch::vorder -->
        <var-decl name='vorder' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/bezierPatch.h' line='39' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- int bezierPatch::dimension -->
        <var-decl name='dimension' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/bezierPatch.h' line='57' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- float* bezierPatch::ctlpoints -->
        <var-decl name='ctlpoints' type-id='type-id-49' visibility='default' filepath='libnurbs/interface/bezierPatch.h' line='58' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- bezierPatch* bezierPatch::next -->
        <var-decl name='next' type-id='type-id-95' visibility='default' filepath='libnurbs/interface/bezierPatch.h' line='63' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef bezierPatch bezierPatch -->
    <typedef-decl name='bezierPatch' type-id='type-id-94' filepath='libnurbs/interface/bezierPatch.h' line='65' column='1' id='type-id-96'/>
    <!-- struct bezierPatchMesh -->
    <class-decl name='bezierPatchMesh' size-in-bits='960' is-struct='yes' visibility='default' filepath='libnurbs/interface/bezierPatchMesh.h' line='39' column='1' id='type-id-97'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- bezierPatch* bezierPatchMesh::bpatch -->
        <var-decl name='bpatch' type-id='type-id-95' visibility='default' filepath='libnurbs/interface/bezierPatchMesh.h' line='40' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- bezierPatch* bezierPatchMesh::bpatch_normal -->
        <var-decl name='bpatch_normal' type-id='type-id-95' visibility='default' filepath='libnurbs/interface/bezierPatchMesh.h' line='41' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- bezierPatch* bezierPatchMesh::bpatch_texcoord -->
        <var-decl name='bpatch_texcoord' type-id='type-id-95' visibility='default' filepath='libnurbs/interface/bezierPatchMesh.h' line='42' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- bezierPatch* bezierPatchMesh::bpatch_color -->
        <var-decl name='bpatch_color' type-id='type-id-95' visibility='default' filepath='libnurbs/interface/bezierPatchMesh.h' line='43' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- float* bezierPatchMesh::UVarray -->
        <var-decl name='UVarray' type-id='type-id-49' visibility='default' filepath='libnurbs/interface/bezierPatchMesh.h' line='45' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- int* bezierPatchMesh::length_array -->
        <var-decl name='length_array' type-id='type-id-98' visibility='default' filepath='libnurbs/interface/bezierPatchMesh.h' line='46' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- GLenum* bezierPatchMesh::type_array -->
        <var-decl name='type_array' type-id='type-id-99' visibility='default' filepath='libnurbs/interface/bezierPatchMesh.h' line='47' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- int bezierPatchMesh::size_UVarray -->
        <var-decl name='size_UVarray' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/bezierPatchMesh.h' line='50' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='480'>
        <!-- int bezierPatchMesh::index_UVarray -->
        <var-decl name='index_UVarray' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/bezierPatchMesh.h' line='51' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- int bezierPatchMesh::size_length_array -->
        <var-decl name='size_length_array' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/bezierPatchMesh.h' line='52' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='544'>
        <!-- int bezierPatchMesh::index_length_array -->
        <var-decl name='index_length_array' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/bezierPatchMesh.h' line='53' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- int bezierPatchMesh::counter -->
        <var-decl name='counter' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/bezierPatchMesh.h' line='55' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='608'>
        <!-- GLenum bezierPatchMesh::type -->
        <var-decl name='type' type-id='type-id-36' visibility='default' filepath='libnurbs/interface/bezierPatchMesh.h' line='56' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- float* bezierPatchMesh::vertex_array -->
        <var-decl name='vertex_array' type-id='type-id-49' visibility='default' filepath='libnurbs/interface/bezierPatchMesh.h' line='59' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='704'>
        <!-- float* bezierPatchMesh::normal_array -->
        <var-decl name='normal_array' type-id='type-id-49' visibility='default' filepath='libnurbs/interface/bezierPatchMesh.h' line='60' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='768'>
        <!-- float* bezierPatchMesh::color_array -->
        <var-decl name='color_array' type-id='type-id-49' visibility='default' filepath='libnurbs/interface/bezierPatchMesh.h' line='61' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='832'>
        <!-- float* bezierPatchMesh::texcoord_array -->
        <var-decl name='texcoord_array' type-id='type-id-49' visibility='default' filepath='libnurbs/interface/bezierPatchMesh.h' line='62' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='896'>
        <!-- bezierPatchMesh* bezierPatchMesh::next -->
        <var-decl name='next' type-id='type-id-54' visibility='default' filepath='libnurbs/interface/bezierPatchMesh.h' line='65' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef bezierPatchMesh bezierPatchMesh -->
    <typedef-decl name='bezierPatchMesh' type-id='type-id-97' filepath='libnurbs/interface/bezierPatchMesh.h' line='66' column='1' id='type-id-100'/>
    <!-- struct surfEvalMachine -->
    <class-decl name='surfEvalMachine' size-in-bits='210272' is-struct='yes' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='63' column='1' id='type-id-101'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- REAL surfEvalMachine::uprime -->
        <var-decl name='uprime' type-id='type-id-1' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='64' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- REAL surfEvalMachine::vprime -->
        <var-decl name='vprime' type-id='type-id-1' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='65' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int surfEvalMachine::k -->
        <var-decl name='k' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='66' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- REAL surfEvalMachine::u1 -->
        <var-decl name='u1' type-id='type-id-1' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='67' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- REAL surfEvalMachine::u2 -->
        <var-decl name='u2' type-id='type-id-1' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='68' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='160'>
        <!-- int surfEvalMachine::ustride -->
        <var-decl name='ustride' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='69' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- int surfEvalMachine::uorder -->
        <var-decl name='uorder' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='70' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='224'>
        <!-- REAL surfEvalMachine::v1 -->
        <var-decl name='v1' type-id='type-id-1' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='71' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- REAL surfEvalMachine::v2 -->
        <var-decl name='v2' type-id='type-id-1' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='72' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='288'>
        <!-- int surfEvalMachine::vstride -->
        <var-decl name='vstride' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='73' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- int surfEvalMachine::vorder -->
        <var-decl name='vorder' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='74' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='352'>
        <!-- REAL surfEvalMachine::ctlPoints[6400] -->
        <var-decl name='ctlPoints' type-id='type-id-56' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='75' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='205152'>
        <!-- REAL surfEvalMachine::ucoeff[40] -->
        <var-decl name='ucoeff' type-id='type-id-5' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='76' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='206432'>
        <!-- REAL surfEvalMachine::vcoeff[40] -->
        <var-decl name='vcoeff' type-id='type-id-5' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='77' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='207712'>
        <!-- REAL surfEvalMachine::ucoeffDeriv[40] -->
        <var-decl name='ucoeffDeriv' type-id='type-id-5' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='78' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='208992'>
        <!-- REAL surfEvalMachine::vcoeffDeriv[40] -->
        <var-decl name='vcoeffDeriv' type-id='type-id-5' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='79' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef surfEvalMachine surfEvalMachine -->
    <typedef-decl name='surfEvalMachine' type-id='type-id-101' filepath='libnurbs/interface/glsurfeval.h' line='80' column='1' id='type-id-57'/>
    <!-- class StoredVertex -->
    <class-decl name='StoredVertex' size-in-bits='256' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='84' column='1' id='type-id-102'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- int StoredVertex::type -->
        <var-decl name='type' type-id='type-id-8' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='95' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='32'>
        <!-- REAL StoredVertex::coord[2] -->
        <var-decl name='coord' type-id='type-id-88' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='96' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='128'>
        <!-- long int StoredVertex::point[2] -->
        <var-decl name='point' type-id='type-id-93' visibility='default' filepath='libnurbs/interface/glsurfeval.h' line='97' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- StoredVertex::StoredVertex() -->
        <function-decl name='StoredVertex' filepath='libnurbs/interface/glsurfeval.h' line='86' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'StoredVertex*' -->
          <parameter type-id='type-id-92' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes'>
        <!-- StoredVertex::~StoredVertex(int) -->
        <function-decl name='~StoredVertex' filepath='libnurbs/interface/glsurfeval.h' line='87' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'StoredVertex*' -->
          <parameter type-id='type-id-92' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void StoredVertex::saveEvalCoord(REAL, REAL) -->
        <function-decl name='saveEvalCoord' mangled-name='_ZN12StoredVertex13saveEvalCoordEff' filepath='libnurbs/interface/glsurfeval.h' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'StoredVertex*' -->
          <parameter type-id='type-id-92' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void StoredVertex::saveEvalPoint(long int, long int) -->
        <function-decl name='saveEvalPoint' mangled-name='_ZN12StoredVertex13saveEvalPointEll' filepath='libnurbs/interface/glsurfeval.h' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'StoredVertex*' -->
          <parameter type-id='type-id-92' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void StoredVertex::invoke(OpenGLSurfaceEvaluator*) -->
        <function-decl name='invoke' mangled-name='_ZN12StoredVertex6invokeEP22OpenGLSurfaceEvaluator' filepath='libnurbs/interface/glsurfeval.h' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'StoredVertex*' -->
          <parameter type-id='type-id-92' is-artificial='yes'/>
          <!-- parameter of type 'OpenGLSurfaceEvaluator*' -->
          <parameter type-id='type-id-48'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- BasicSurfaceEvaluator* -->
    <pointer-type-def type-id='type-id-51' size-in-bits='64' id='type-id-103'/>
    <!-- GLenum* -->
    <pointer-type-def type-id='type-id-36' size-in-bits='64' id='type-id-99'/>
    <!-- REAL[3]* -->
    <pointer-type-def type-id='type-id-89' size-in-bits='64' id='type-id-58'/>
    <!-- StoredVertex* -->
    <pointer-type-def type-id='type-id-102' size-in-bits='64' id='type-id-92'/>
    <!-- SurfaceMap* -->
    <pointer-type-def type-id='type-id-104' size-in-bits='64' id='type-id-105'/>
    <!-- bezierPatch* -->
    <pointer-type-def type-id='type-id-94' size-in-bits='64' id='type-id-95'/>
    <!-- bezierPatchMesh* -->
    <pointer-type-def type-id='type-id-97' size-in-bits='64' id='type-id-54'/>
    <!-- int* -->
    <pointer-type-def type-id='type-id-8' size-in-bits='64' id='type-id-98'/>
    <!-- surfEvalMachine* -->
    <pointer-type-def type-id='type-id-57' size-in-bits='64' id='type-id-59'/>
    <!-- struct SurfaceMap -->
    <class-decl name='SurfaceMap' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-104'/>
    <!-- struct BasicSurfaceEvaluator -->
    <class-decl name='BasicSurfaceEvaluator' is-struct='yes' visibility='default' filepath='libnurbs/internals/basicsurfeval.h' line='43' column='1' is-declaration-only='yes' id='type-id-51'>
      <!-- class CachingEvaluator -->
      <base-class access='public' layout-offset-in-bits='0' type-id='type-id-10'/>
      <member-function access='public' destructor='yes' vtable-offset='-1'>
        <!-- BasicSurfaceEvaluator::~BasicSurfaceEvaluator(int) -->
        <function-decl name='~BasicSurfaceEvaluator' filepath='libnurbs/internals/basicsurfeval.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='9'>
        <!-- void BasicSurfaceEvaluator::range2f(long int, REAL*, REAL*) -->
        <function-decl name='range2f' mangled-name='_ZN21BasicSurfaceEvaluator7range2fElPfS0_' filepath='libnurbs/internals/basicsurfeval.cc' line='65' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='10'>
        <!-- void BasicSurfaceEvaluator::domain2f(REAL, REAL, REAL, REAL) -->
        <function-decl name='domain2f' mangled-name='_ZN21BasicSurfaceEvaluator8domain2fEffff' filepath='libnurbs/internals/basicsurfeval.cc' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='11'>
        <!-- void BasicSurfaceEvaluator::enable(long int) -->
        <function-decl name='enable' mangled-name='_ZN21BasicSurfaceEvaluator6enableEl' filepath='libnurbs/internals/basicsurfeval.cc' line='74' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='12'>
        <!-- void BasicSurfaceEvaluator::disable(long int) -->
        <function-decl name='disable' mangled-name='_ZN21BasicSurfaceEvaluator7disableEl' filepath='libnurbs/internals/basicsurfeval.cc' line='82' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='13'>
        <!-- void BasicSurfaceEvaluator::bgnmap2f(long int) -->
        <function-decl name='bgnmap2f' mangled-name='_ZN21BasicSurfaceEvaluator8bgnmap2fEl' filepath='libnurbs/internals/basicsurfeval.cc' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='14'>
        <!-- void BasicSurfaceEvaluator::map2f(long int, REAL, REAL, long int, long int, REAL, REAL, long int, long int, REAL*) -->
        <function-decl name='map2f' mangled-name='_ZN21BasicSurfaceEvaluator5map2fElffllffllPf' filepath='libnurbs/internals/basicsurfeval.cc' line='106' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='15'>
        <!-- void BasicSurfaceEvaluator::mapgrid2f(long int, REAL, REAL, long int, REAL, REAL) -->
        <function-decl name='mapgrid2f' mangled-name='_ZN21BasicSurfaceEvaluator9mapgrid2fElfflff' filepath='libnurbs/internals/basicsurfeval.cc' line='116' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='16'>
        <!-- void BasicSurfaceEvaluator::mapmesh2f(long int, long int, long int, long int, long int) -->
        <function-decl name='mapmesh2f' mangled-name='_ZN21BasicSurfaceEvaluator9mapmesh2fElllll' filepath='libnurbs/internals/basicsurfeval.cc' line='124' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='17'>
        <!-- void BasicSurfaceEvaluator::evalcoord2f(long int, REAL, REAL) -->
        <function-decl name='evalcoord2f' mangled-name='_ZN21BasicSurfaceEvaluator11evalcoord2fElff' filepath='libnurbs/internals/basicsurfeval.cc' line='132' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='18'>
        <!-- void BasicSurfaceEvaluator::evalpoint2i(long int, long int) -->
        <function-decl name='evalpoint2i' mangled-name='_ZN21BasicSurfaceEvaluator11evalpoint2iEll' filepath='libnurbs/internals/basicsurfeval.cc' line='140' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='19'>
        <!-- void BasicSurfaceEvaluator::endmap2f() -->
        <function-decl name='endmap2f' mangled-name='_ZN21BasicSurfaceEvaluator8endmap2fEv' filepath='libnurbs/internals/basicsurfeval.cc' line='98' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='20'>
        <!-- void BasicSurfaceEvaluator::polymode(long int) -->
        <function-decl name='polymode' mangled-name='_ZN21BasicSurfaceEvaluator8polymodeEl' filepath='libnurbs/internals/basicsurfeval.cc' line='57' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='21'>
        <!-- void BasicSurfaceEvaluator::bgnline() -->
        <function-decl name='bgnline' mangled-name='_ZN21BasicSurfaceEvaluator7bgnlineEv' filepath='libnurbs/internals/basicsurfeval.cc' line='148' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='22'>
        <!-- void BasicSurfaceEvaluator::endline() -->
        <function-decl name='endline' mangled-name='_ZN21BasicSurfaceEvaluator7endlineEv' filepath='libnurbs/internals/basicsurfeval.cc' line='156' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='23'>
        <!-- void BasicSurfaceEvaluator::bgnclosedline() -->
        <function-decl name='bgnclosedline' mangled-name='_ZN21BasicSurfaceEvaluator13bgnclosedlineEv' filepath='libnurbs/internals/basicsurfeval.cc' line='164' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='24'>
        <!-- void BasicSurfaceEvaluator::endclosedline() -->
        <function-decl name='endclosedline' mangled-name='_ZN21BasicSurfaceEvaluator13endclosedlineEv' filepath='libnurbs/internals/basicsurfeval.cc' line='172' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='25'>
        <!-- void BasicSurfaceEvaluator::bgntmesh() -->
        <function-decl name='bgntmesh' mangled-name='_ZN21BasicSurfaceEvaluator8bgntmeshEv' filepath='libnurbs/internals/basicsurfeval.cc' line='194' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='26'>
        <!-- void BasicSurfaceEvaluator::swaptmesh() -->
        <function-decl name='swaptmesh' mangled-name='_ZN21BasicSurfaceEvaluator9swaptmeshEv' filepath='libnurbs/internals/basicsurfeval.cc' line='202' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='27'>
        <!-- void BasicSurfaceEvaluator::endtmesh() -->
        <function-decl name='endtmesh' mangled-name='_ZN21BasicSurfaceEvaluator8endtmeshEv' filepath='libnurbs/internals/basicsurfeval.cc' line='210' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='28'>
        <!-- void BasicSurfaceEvaluator::bgnqstrip() -->
        <function-decl name='bgnqstrip' mangled-name='_ZN21BasicSurfaceEvaluator9bgnqstripEv' filepath='libnurbs/internals/basicsurfeval.cc' line='218' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='29'>
        <!-- void BasicSurfaceEvaluator::endqstrip() -->
        <function-decl name='endqstrip' mangled-name='_ZN21BasicSurfaceEvaluator9endqstripEv' filepath='libnurbs/internals/basicsurfeval.cc' line='226' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='30'>
        <!-- void BasicSurfaceEvaluator::bgntfan() -->
        <function-decl name='bgntfan' mangled-name='_ZN21BasicSurfaceEvaluator7bgntfanEv' filepath='libnurbs/internals/basicsurfeval.cc' line='180' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='31'>
        <!-- void BasicSurfaceEvaluator::endtfan() -->
        <function-decl name='endtfan' mangled-name='_ZN21BasicSurfaceEvaluator7endtfanEv' filepath='libnurbs/internals/basicsurfeval.cc' line='188' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='32'>
        <!-- void BasicSurfaceEvaluator::evalUStrip(int, REAL, REAL*, int, REAL, REAL*) -->
        <function-decl name='evalUStrip' mangled-name='_ZN21BasicSurfaceEvaluator10evalUStripEifPfifS0_' filepath='libnurbs/internals/basicsurfeval.h' line='75' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='33'>
        <!-- void BasicSurfaceEvaluator::evalVStrip(int, REAL, REAL*, int, REAL, REAL*) -->
        <function-decl name='evalVStrip' mangled-name='_ZN21BasicSurfaceEvaluator10evalVStripEifPfifS0_' filepath='libnurbs/internals/basicsurfeval.h' line='79' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='34'>
        <!-- void BasicSurfaceEvaluator::inDoEvalCoord2NOGE(REAL, REAL, REAL*, REAL*) -->
        <function-decl name='inDoEvalCoord2NOGE' mangled-name='_ZN21BasicSurfaceEvaluator18inDoEvalCoord2NOGEEffPfS0_' filepath='libnurbs/internals/basicsurfeval.h' line='82' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='35'>
        <!-- void BasicSurfaceEvaluator::inDoEvalCoord2NOGE_BU(REAL, REAL, REAL*, REAL*) -->
        <function-decl name='inDoEvalCoord2NOGE_BU' mangled-name='_ZN21BasicSurfaceEvaluator21inDoEvalCoord2NOGE_BUEffPfS0_' filepath='libnurbs/internals/basicsurfeval.h' line='83' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='36'>
        <!-- void BasicSurfaceEvaluator::inDoEvalCoord2NOGE_BV(REAL, REAL, REAL*, REAL*) -->
        <function-decl name='inDoEvalCoord2NOGE_BV' mangled-name='_ZN21BasicSurfaceEvaluator21inDoEvalCoord2NOGE_BVEffPfS0_' filepath='libnurbs/internals/basicsurfeval.h' line='84' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='37'>
        <!-- void BasicSurfaceEvaluator::inPreEvaluateBV_intfac(REAL) -->
        <function-decl name='inPreEvaluateBV_intfac' mangled-name='_ZN21BasicSurfaceEvaluator22inPreEvaluateBV_intfacEf' filepath='libnurbs/internals/basicsurfeval.h' line='85' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' vtable-offset='38'>
        <!-- void BasicSurfaceEvaluator::inPreEvaluateBU_intfac(REAL) -->
        <function-decl name='inPreEvaluateBU_intfac' mangled-name='_ZN21BasicSurfaceEvaluator22inPreEvaluateBU_intfacEf' filepath='libnurbs/internals/basicsurfeval.h' line='86' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'BasicSurfaceEvaluator*' -->
          <parameter type-id='type-id-103' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/interface/insurfeval.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/arc.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- char -->
    <type-decl name='char' size-in-bits='8' id='type-id-106'/>
    <!-- char*[32] -->
    <array-type-def dimensions='1' type-id='type-id-107' size-in-bits='2048' id='type-id-108'>
      <!-- <anonymous range>[32] -->
      <subrange length='32' type-id='type-id-3' id='type-id-109'/>
    </array-type-def>
    <!-- typedef unsigned long int size_t -->
    <typedef-decl name='size_t' type-id='type-id-3' filepath='/usr/lib/gcc/x86_64-redhat-linux/4.4.7/include/stddef.h' line='211' column='1' id='type-id-110'/>
    <!-- typedef Arc* Arc_ptr -->
    <typedef-decl name='Arc_ptr' type-id='type-id-111' filepath='libnurbs/internals/arc.h' line='50' column='1' id='type-id-112'/>
    <!-- enum arc_side -->
    <enum-decl name='arc_side' filepath='libnurbs/internals/arc.h' line='52' column='1' id='type-id-113'>
      <underlying-type type-id='type-id-12'/>
      <enumerator name='arc_none' value='0'/>
      <enumerator name='arc_right' value='1'/>
      <enumerator name='arc_top' value='2'/>
      <enumerator name='arc_left' value='3'/>
      <enumerator name='arc_bottom' value='4'/>
    </enum-decl>
    <!-- struct Arc -->
    <class-decl name='Arc' size-in-bits='448' is-struct='yes' visibility='default' filepath='libnurbs/internals/arc.h' line='55' column='1' id='type-id-114'>
      <!-- class PooledObj -->
      <base-class access='public' layout-offset-in-bits='0' type-id='type-id-115'/>
      <data-member access='public' static='yes'>
        <!-- static const int Arc::bezier_tag -->
        <var-decl name='bezier_tag' type-id='type-id-116' mangled-name='_ZN3Arc10bezier_tagE' visibility='default' filepath='libnurbs/internals/arc.h' line='58' column='1'/>
      </data-member>
      <data-member access='public' static='yes'>
        <!-- static const int Arc::arc_tag -->
        <var-decl name='arc_tag' type-id='type-id-116' mangled-name='_ZN3Arc7arc_tagE' visibility='default' filepath='libnurbs/internals/arc.h' line='59' column='1'/>
      </data-member>
      <data-member access='public' static='yes'>
        <!-- static const int Arc::tail_tag -->
        <var-decl name='tail_tag' type-id='type-id-116' mangled-name='_ZN3Arc8tail_tagE' visibility='default' filepath='libnurbs/internals/arc.h' line='60' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- Arc_ptr Arc::prev -->
        <var-decl name='prev' type-id='type-id-112' visibility='default' filepath='libnurbs/internals/arc.h' line='61' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- Arc_ptr Arc::next -->
        <var-decl name='next' type-id='type-id-112' visibility='default' filepath='libnurbs/internals/arc.h' line='62' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- Arc_ptr Arc::link -->
        <var-decl name='link' type-id='type-id-112' visibility='default' filepath='libnurbs/internals/arc.h' line='63' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- BezierArc* Arc::bezierArc -->
        <var-decl name='bezierArc' type-id='type-id-117' visibility='default' filepath='libnurbs/internals/arc.h' line='64' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- PwlArc* Arc::pwlArc -->
        <var-decl name='pwlArc' type-id='type-id-118' visibility='default' filepath='libnurbs/internals/arc.h' line='65' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- long int Arc::type -->
        <var-decl name='type' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/arc.h' line='66' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- long int Arc::nuid -->
        <var-decl name='nuid' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/arc.h' line='67' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- Arc::Arc(Arc*, PwlArc*) -->
        <function-decl name='Arc' filepath='libnurbs/internals/arc.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- parameter of type 'Arc*' -->
          <parameter type-id='type-id-111'/>
          <!-- parameter of type 'PwlArc*' -->
          <parameter type-id='type-id-118'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- Arc::Arc(arc_side, long int) -->
        <function-decl name='Arc' filepath='libnurbs/internals/arc.h' line='70' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- parameter of type 'enum arc_side' -->
          <parameter type-id='type-id-113'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Arc::clearside() -->
        <function-decl name='clearside' mangled-name='_ZN3Arc9clearsideEv' filepath='libnurbs/internals/arc.h' line='94' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Arc::clearbezier() -->
        <function-decl name='clearbezier' mangled-name='_ZN3Arc11clearbezierEv' filepath='libnurbs/internals/arc.h' line='85' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Arc::setside(arc_side) -->
        <function-decl name='setside' mangled-name='_ZN3Arc7setsideE8arc_side' filepath='libnurbs/internals/arc.h' line='95' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- parameter of type 'enum arc_side' -->
          <parameter type-id='type-id-113'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- REAL* Arc::tail() -->
        <function-decl name='tail' mangled-name='_ZN3Arc4tailEv' filepath='libnurbs/internals/arc.h' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- REAL* -->
          <return type-id='type-id-22'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- REAL* Arc::rhead() -->
        <function-decl name='rhead' mangled-name='_ZN3Arc5rheadEv' filepath='libnurbs/internals/arc.h' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- REAL* -->
          <return type-id='type-id-22'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Arc::show() -->
        <function-decl name='show' mangled-name='_ZN3Arc4showEv' filepath='libnurbs/internals/arc.h' line='80' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- long int Arc::isbezier() -->
        <function-decl name='isbezier' mangled-name='_ZN3Arc8isbezierEv' filepath='libnurbs/internals/arc.h' line='83' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- long int -->
          <return type-id='type-id-38'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Arc::makeSide(PwlArc*, arc_side) -->
        <function-decl name='makeSide' mangled-name='_ZN3Arc8makeSideEP6PwlArc8arc_side' filepath='libnurbs/internals/arc.h' line='81' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- parameter of type 'PwlArc*' -->
          <parameter type-id='type-id-118'/>
          <!-- parameter of type 'enum arc_side' -->
          <parameter type-id='type-id-113'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Arc::numpts() -->
        <function-decl name='numpts' mangled-name='_ZN3Arc6numptsEv' filepath='libnurbs/internals/arc.h' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Arc::markverts() -->
        <function-decl name='markverts' mangled-name='_ZN3Arc9markvertsEv' filepath='libnurbs/internals/arc.h' line='77' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Arc::getextrema(Arc_ptr*) -->
        <function-decl name='getextrema' mangled-name='_ZN3Arc10getextremaEPPS_' filepath='libnurbs/internals/arc.h' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- parameter of type 'Arc_ptr*' -->
          <parameter type-id='type-id-119'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Arc::print() -->
        <function-decl name='print' mangled-name='_ZN3Arc5printEv' filepath='libnurbs/internals/arc.h' line='79' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Arc::isDisconnected() -->
        <function-decl name='isDisconnected' mangled-name='_ZN3Arc14isDisconnectedEv' filepath='libnurbs/internals/arc.h' line='75' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Arc::check() -->
        <function-decl name='check' mangled-name='_ZN3Arc5checkEv' filepath='libnurbs/internals/arc.h' line='73' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- Arc_ptr Arc::append(Arc_ptr) -->
        <function-decl name='append' mangled-name='_ZN3Arc6appendEPS_' filepath='libnurbs/internals/arc.h' line='72' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- typedef Arc_ptr -->
          <return type-id='type-id-112'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Arc::getitail() -->
        <function-decl name='getitail' mangled-name='_ZN3Arc8getitailEv' filepath='libnurbs/internals/arc.h' line='97' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- REAL* Arc::head() -->
        <function-decl name='head' mangled-name='_ZN3Arc4headEv' filepath='libnurbs/internals/arc.h' line='89' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- REAL* -->
          <return type-id='type-id-22'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Arc::setbezier() -->
        <function-decl name='setbezier' mangled-name='_ZN3Arc9setbezierEv' filepath='libnurbs/internals/arc.h' line='84' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Arc::setmark() -->
        <function-decl name='setmark' mangled-name='_ZN3Arc7setmarkEv' filepath='libnurbs/internals/arc.h' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- long int Arc::ismarked() -->
        <function-decl name='ismarked' mangled-name='_ZN3Arc8ismarkedEv' filepath='libnurbs/internals/arc.h' line='91' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- long int -->
          <return type-id='type-id-38'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Arc::clearmark() -->
        <function-decl name='clearmark' mangled-name='_ZN3Arc9clearmarkEv' filepath='libnurbs/internals/arc.h' line='93' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Arc::setitail() -->
        <function-decl name='setitail' mangled-name='_ZN3Arc8setitailEv' filepath='libnurbs/internals/arc.h' line='98' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Arc::clearitail() -->
        <function-decl name='clearitail' mangled-name='_ZN3Arc10clearitailEv' filepath='libnurbs/internals/arc.h' line='99' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- arc_side Arc::getside() -->
        <function-decl name='getside' mangled-name='_ZN3Arc7getsideEv' filepath='libnurbs/internals/arc.h' line='96' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- enum arc_side -->
          <return type-id='type-id-113'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Arc::isTessellated() -->
        <function-decl name='isTessellated' mangled-name='_ZN3Arc13isTessellatedEv' filepath='libnurbs/internals/arc.h' line='82' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Arc*' -->
          <parameter type-id='type-id-111' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- class Buffer -->
    <class-decl name='Buffer' size-in-bits='64' visibility='default' filepath='libnurbs/internals/bufpool.h' line='45' column='1' id='type-id-120'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- Buffer* Buffer::next -->
        <var-decl name='next' type-id='type-id-121' visibility='default' filepath='libnurbs/internals/bufpool.h' line='47' column='1'/>
      </data-member>
    </class-decl>
    <!-- class Pool -->
    <class-decl name='Pool' size-in-bits='2496' visibility='default' filepath='libnurbs/internals/bufpool.h' line='50' column='1' id='type-id-67'>
      <member-type access='protected'>
        <!-- enum Pool::Magic -->
        <enum-decl name='Magic' filepath='libnurbs/internals/bufpool.h' line='70' column='1' id='type-id-122'>
          <underlying-type type-id='type-id-12'/>
          <enumerator name='is_allocated' value='62369'/>
          <enumerator name='is_free' value='61858'/>
        </enum-decl>
      </member-type>
      <data-member access='protected' layout-offset-in-bits='0'>
        <!-- Buffer* Pool::freelist -->
        <var-decl name='freelist' type-id='type-id-121' visibility='default' filepath='libnurbs/internals/bufpool.h' line='62' column='1'/>
      </data-member>
      <data-member access='protected' layout-offset-in-bits='64'>
        <!-- char* Pool::blocklist[32] -->
        <var-decl name='blocklist' type-id='type-id-108' visibility='default' filepath='libnurbs/internals/bufpool.h' line='63' column='1'/>
      </data-member>
      <data-member access='protected' layout-offset-in-bits='2112'>
        <!-- int Pool::nextblock -->
        <var-decl name='nextblock' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/bufpool.h' line='64' column='1'/>
      </data-member>
      <data-member access='protected' layout-offset-in-bits='2176'>
        <!-- char* Pool::curblock -->
        <var-decl name='curblock' type-id='type-id-107' visibility='default' filepath='libnurbs/internals/bufpool.h' line='65' column='1'/>
      </data-member>
      <data-member access='protected' layout-offset-in-bits='2240'>
        <!-- int Pool::buffersize -->
        <var-decl name='buffersize' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/bufpool.h' line='66' column='1'/>
      </data-member>
      <data-member access='protected' layout-offset-in-bits='2272'>
        <!-- int Pool::nextsize -->
        <var-decl name='nextsize' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/bufpool.h' line='67' column='1'/>
      </data-member>
      <data-member access='protected' layout-offset-in-bits='2304'>
        <!-- int Pool::nextfree -->
        <var-decl name='nextfree' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/bufpool.h' line='68' column='1'/>
      </data-member>
      <data-member access='protected' layout-offset-in-bits='2336'>
        <!-- int Pool::initsize -->
        <var-decl name='initsize' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/bufpool.h' line='69' column='1'/>
      </data-member>
      <data-member access='protected' layout-offset-in-bits='2368'>
        <!-- const char* Pool::name -->
        <var-decl name='name' type-id='type-id-84' visibility='default' filepath='libnurbs/internals/bufpool.h' line='71' column='1'/>
      </data-member>
      <data-member access='protected' layout-offset-in-bits='2432'>
        <!-- Pool::Magic Pool::magic -->
        <var-decl name='magic' type-id='type-id-122' visibility='default' filepath='libnurbs/internals/bufpool.h' line='72' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- Pool::Pool(int, int, const char*) -->
        <function-decl name='Pool' filepath='libnurbs/internals/bufpool.h' line='52' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Pool*' -->
          <parameter type-id='type-id-123' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-84'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes'>
        <!-- Pool::~Pool(int) -->
        <function-decl name='~Pool' filepath='libnurbs/internals/bufpool.h' line='53' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Pool*' -->
          <parameter type-id='type-id-123' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void* Pool::new_buffer() -->
        <function-decl name='new_buffer' mangled-name='_ZN4Pool10new_bufferEv' filepath='libnurbs/internals/bufpool.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Pool*' -->
          <parameter type-id='type-id-123' is-artificial='yes'/>
          <!-- void* -->
          <return type-id='type-id-35'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Pool::clear() -->
        <function-decl name='clear' mangled-name='_ZN4Pool5clearEv' filepath='libnurbs/internals/bufpool.h' line='56' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Pool*' -->
          <parameter type-id='type-id-123' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Pool::grow() -->
        <function-decl name='grow' mangled-name='_ZN4Pool4growEv' filepath='libnurbs/internals/bufpool.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Pool*' -->
          <parameter type-id='type-id-123' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Pool::free_buffer(void*) -->
        <function-decl name='free_buffer' mangled-name='_ZN4Pool11free_bufferEPv' filepath='libnurbs/internals/bufpool.h' line='55' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Pool*' -->
          <parameter type-id='type-id-123' is-artificial='yes'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-35'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- class PooledObj -->
    <class-decl name='PooledObj' size-in-bits='8' visibility='default' filepath='libnurbs/internals/bufpool.h' line='118' column='1' id='type-id-115'>
      <member-function access='private' static='yes'>
        <!-- void PooledObj::operator delete(Pool&) -->
        <function-decl name='operator delete' mangled-name='_ZN9PooledObjdlEPvR4Pool' filepath='libnurbs/internals/bufpool.h' line='125' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-35'/>
          <!-- parameter of type 'Pool&' -->
          <parameter type-id='type-id-124'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' static='yes'>
        <!-- void* PooledObj::operator new(Pool&) -->
        <function-decl name='operator new' mangled-name='_ZN9PooledObjnwEmR4Pool' filepath='libnurbs/internals/bufpool.h' line='120' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- parameter of type 'typedef size_t' -->
          <parameter type-id='type-id-110'/>
          <!-- parameter of type 'Pool&' -->
          <parameter type-id='type-id-124'/>
          <!-- void* -->
          <return type-id='type-id-35'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void PooledObj::deleteMe(Pool&) -->
        <function-decl name='deleteMe' mangled-name='_ZN9PooledObj8deleteMeER4Pool' filepath='libnurbs/internals/bufpool.h' line='126' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'PooledObj*' -->
          <parameter type-id='type-id-125' is-artificial='yes'/>
          <!-- parameter of type 'Pool&' -->
          <parameter type-id='type-id-124'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- class PwlArc -->
    <class-decl name='PwlArc' size-in-bits='192' visibility='default' filepath='libnurbs/internals/pwlarc.h' line='44' column='1' id='type-id-126'>
      <!-- class PooledObj -->
      <base-class access='public' layout-offset-in-bits='0' type-id='type-id-115'/>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- TrimVertex* PwlArc::pts -->
        <var-decl name='pts' type-id='type-id-127' visibility='default' filepath='libnurbs/internals/pwlarc.h' line='46' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- int PwlArc::npts -->
        <var-decl name='npts' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/pwlarc.h' line='47' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='128'>
        <!-- long int PwlArc::type -->
        <var-decl name='type' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/pwlarc.h' line='48' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- PwlArc::PwlArc() -->
        <function-decl name='PwlArc' filepath='libnurbs/internals/pwlarc.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'PwlArc*' -->
          <parameter type-id='type-id-118' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' constructor='yes'>
        <!-- PwlArc::PwlArc(int, TrimVertex*) -->
        <function-decl name='PwlArc' filepath='libnurbs/internals/pwlarc.h' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'PwlArc*' -->
          <parameter type-id='type-id-118' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' constructor='yes'>
        <!-- PwlArc::PwlArc(int, TrimVertex*, long int) -->
        <function-decl name='PwlArc' filepath='libnurbs/internals/pwlarc.h' line='51' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'PwlArc*' -->
          <parameter type-id='type-id-118' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct TrimVertex -->
    <class-decl name='TrimVertex' size-in-bits='128' is-struct='yes' visibility='default' filepath='libnurbs/internals/trimvertex.h' line='43' column='1' id='type-id-128'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- REAL TrimVertex::param[2] -->
        <var-decl name='param' type-id='type-id-88' visibility='default' filepath='libnurbs/internals/trimvertex.h' line='45' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- long int TrimVertex::nuid -->
        <var-decl name='nuid' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/trimvertex.h' line='50' column='1'/>
      </data-member>
    </class-decl>
    <!-- Arc* -->
    <pointer-type-def type-id='type-id-114' size-in-bits='64' id='type-id-111'/>
    <!-- Arc_ptr* -->
    <pointer-type-def type-id='type-id-112' size-in-bits='64' id='type-id-119'/>
    <!-- BezierArc* -->
    <pointer-type-def type-id='type-id-129' size-in-bits='64' id='type-id-117'/>
    <!-- Buffer* -->
    <pointer-type-def type-id='type-id-120' size-in-bits='64' id='type-id-121'/>
    <!-- Pool& -->
    <reference-type-def kind='lvalue' type-id='type-id-67' size-in-bits='64' id='type-id-124'/>
    <!-- Pool* -->
    <pointer-type-def type-id='type-id-67' size-in-bits='64' id='type-id-123'/>
    <!-- PooledObj* -->
    <pointer-type-def type-id='type-id-115' size-in-bits='64' id='type-id-125'/>
    <!-- PwlArc* -->
    <pointer-type-def type-id='type-id-126' size-in-bits='64' id='type-id-118'/>
    <!-- TrimVertex* -->
    <pointer-type-def type-id='type-id-128' size-in-bits='64' id='type-id-127'/>
    <!-- char* -->
    <pointer-type-def type-id='type-id-106' size-in-bits='64' id='type-id-107'/>
    <!-- const char -->
    <qualified-type-def type-id='type-id-106' const='yes' id='type-id-130'/>
    <!-- const char* -->
    <pointer-type-def type-id='type-id-130' size-in-bits='64' id='type-id-84'/>
    <!-- const int -->
    <qualified-type-def type-id='type-id-8' const='yes' id='type-id-116'/>
    <!-- struct BezierArc -->
    <class-decl name='BezierArc' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-129'/>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/arcsorter.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- REAL[4] -->
    <array-type-def dimensions='1' type-id='type-id-1' size-in-bits='128' id='type-id-131'>
      <!-- <anonymous range>[4] -->
      <subrange length='4' type-id='type-id-3' id='type-id-61'/>
    </array-type-def>
    <!-- REAL[][24][24] -->
    <array-type-def dimensions='3' type-id='type-id-1' size-in-bits='infinite' id='type-id-132'>
      <!-- <anonymous range>[] -->
      <subrange length='infinite' id='type-id-133'/>
      <!-- <anonymous range>[24] -->
      <subrange length='24' type-id='type-id-3' id='type-id-134'/>
      <!-- <anonymous range>[24] -->
      <subrange length='24' type-id='type-id-3' id='type-id-134'/>
    </array-type-def>
    <!-- class ArcTessellator -->
    <class-decl name='ArcTessellator' size-in-bits='128' visibility='default' filepath='libnurbs/internals/arctess.h' line='47' column='1' id='type-id-135'>
      <data-member access='private' static='yes'>
        <!-- static REAL ArcTessellator::gl_Bernstein[][24][24] -->
        <var-decl name='gl_Bernstein' type-id='type-id-132' mangled-name='_ZN14ArcTessellator12gl_BernsteinE' visibility='default' filepath='libnurbs/internals/arctess.h' line='60' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- Pool& ArcTessellator::pwlarcpool -->
        <var-decl name='pwlarcpool' type-id='type-id-124' visibility='default' filepath='libnurbs/internals/arctess.h' line='61' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- TrimVertexPool& ArcTessellator::trimvertexpool -->
        <var-decl name='trimvertexpool' type-id='type-id-136' visibility='default' filepath='libnurbs/internals/arctess.h' line='62' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- ArcTessellator::ArcTessellator(TrimVertexPool&, Pool&) -->
        <function-decl name='ArcTessellator' filepath='libnurbs/internals/arctess.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ArcTessellator*' -->
          <parameter type-id='type-id-137' is-artificial='yes'/>
          <!-- parameter of type 'TrimVertexPool&' -->
          <parameter type-id='type-id-136'/>
          <!-- parameter of type 'Pool&' -->
          <parameter type-id='type-id-124'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes'>
        <!-- ArcTessellator::~ArcTessellator(int) -->
        <function-decl name='~ArcTessellator' filepath='libnurbs/internals/arctess.h' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ArcTessellator*' -->
          <parameter type-id='type-id-137' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' static='yes'>
        <!-- void ArcTessellator::trim_power_coeffs(REAL*, int) -->
        <function-decl name='trim_power_coeffs' mangled-name='_ZN14ArcTessellator17trim_power_coeffsEP9BezierArcPfi' filepath='libnurbs/internals/arctess.h' line='63' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- parameter of type 'BezierArc*' -->
          <parameter type-id='type-id-117'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void ArcTessellator::pwl_left(Arc_ptr, REAL, REAL, REAL, REAL) -->
        <function-decl name='pwl_left' mangled-name='_ZN14ArcTessellator8pwl_leftEP3Arcffff' filepath='libnurbs/internals/arctess.h' line='53' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ArcTessellator*' -->
          <parameter type-id='type-id-137' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void ArcTessellator::tessellateNonlinear(Arc_ptr, REAL, REAL, int) -->
        <function-decl name='tessellateNonlinear' mangled-name='_ZN14ArcTessellator19tessellateNonlinearEP3Arcffi' filepath='libnurbs/internals/arctess.h' line='58' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ArcTessellator*' -->
          <parameter type-id='type-id-137' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void ArcTessellator::pwl(Arc_ptr, REAL, REAL, REAL, REAL, REAL) -->
        <function-decl name='pwl' mangled-name='_ZN14ArcTessellator3pwlEP3Arcfffff' filepath='libnurbs/internals/arctess.h' line='52' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ArcTessellator*' -->
          <parameter type-id='type-id-137' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void ArcTessellator::bezier(Arc_ptr, REAL, REAL, REAL, REAL) -->
        <function-decl name='bezier' mangled-name='_ZN14ArcTessellator6bezierEP3Arcffff' filepath='libnurbs/internals/arctess.h' line='51' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ArcTessellator*' -->
          <parameter type-id='type-id-137' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void ArcTessellator::pwl_bottom(Arc_ptr, REAL, REAL, REAL, REAL) -->
        <function-decl name='pwl_bottom' mangled-name='_ZN14ArcTessellator10pwl_bottomEP3Arcffff' filepath='libnurbs/internals/arctess.h' line='56' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ArcTessellator*' -->
          <parameter type-id='type-id-137' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void ArcTessellator::pwl_top(Arc_ptr, REAL, REAL, REAL, REAL) -->
        <function-decl name='pwl_top' mangled-name='_ZN14ArcTessellator7pwl_topEP3Arcffff' filepath='libnurbs/internals/arctess.h' line='55' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ArcTessellator*' -->
          <parameter type-id='type-id-137' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void ArcTessellator::pwl_right(Arc_ptr, REAL, REAL, REAL, REAL) -->
        <function-decl name='pwl_right' mangled-name='_ZN14ArcTessellator9pwl_rightEP3Arcffff' filepath='libnurbs/internals/arctess.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ArcTessellator*' -->
          <parameter type-id='type-id-137' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void ArcTessellator::tessellateLinear(Arc_ptr, REAL, REAL, int) -->
        <function-decl name='tessellateLinear' mangled-name='_ZN14ArcTessellator16tessellateLinearEP3Arcffi' filepath='libnurbs/internals/arctess.h' line='57' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ArcTessellator*' -->
          <parameter type-id='type-id-137' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct Backend -->
    <class-decl name='Backend' size-in-bits='640' is-struct='yes' visibility='default' filepath='libnurbs/internals/backend.h' line='46' column='1' id='type-id-64'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- BasicCurveEvaluator& Backend::curveEvaluator -->
        <var-decl name='curveEvaluator' type-id='type-id-79' visibility='default' filepath='libnurbs/internals/backend.h' line='48' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- BasicSurfaceEvaluator& Backend::surfaceEvaluator -->
        <var-decl name='surfaceEvaluator' type-id='type-id-80' visibility='default' filepath='libnurbs/internals/backend.h' line='49' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='128'>
        <!-- int Backend::wireframetris -->
        <var-decl name='wireframetris' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/backend.h' line='105' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='160'>
        <!-- int Backend::wireframequads -->
        <var-decl name='wireframequads' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/backend.h' line='106' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='192'>
        <!-- int Backend::npts -->
        <var-decl name='npts' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/backend.h' line='107' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='224'>
        <!-- REAL Backend::mesh[3][4] -->
        <var-decl name='mesh' type-id='type-id-138' visibility='default' filepath='libnurbs/internals/backend.h' line='108' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='608'>
        <!-- int Backend::meshindex -->
        <var-decl name='meshindex' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/backend.h' line='109' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- Backend::Backend(BasicCurveEvaluator&, BasicSurfaceEvaluator&) -->
        <function-decl name='Backend' filepath='libnurbs/internals/backend.h' line='51' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'BasicCurveEvaluator&' -->
          <parameter type-id='type-id-79'/>
          <!-- parameter of type 'BasicSurfaceEvaluator&' -->
          <parameter type-id='type-id-80'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::bgnsurf(int, int, long int) -->
        <function-decl name='bgnsurf' mangled-name='_ZN7Backend7bgnsurfEiil' filepath='libnurbs/internals/backend.h' line='55' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::patch(REAL, REAL, REAL, REAL) -->
        <function-decl name='patch' mangled-name='_ZN7Backend5patchEffff' filepath='libnurbs/internals/backend.h' line='56' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::surfbbox(long int, REAL*, REAL*) -->
        <function-decl name='surfbbox' mangled-name='_ZN7Backend8surfbboxElPfS0_' filepath='libnurbs/internals/backend.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::surfpts(long int, REAL*, long int, long int, int, int, REAL, REAL, REAL, REAL) -->
        <function-decl name='surfpts' mangled-name='_ZN7Backend7surfptsElPflliiffff' filepath='libnurbs/internals/backend.h' line='57' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::surfgrid(REAL, REAL, long int, REAL, REAL, long int) -->
        <function-decl name='surfgrid' mangled-name='_ZN7Backend8surfgridEfflffl' filepath='libnurbs/internals/backend.h' line='60' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::surfmesh(long int, long int, long int, long int) -->
        <function-decl name='surfmesh' mangled-name='_ZN7Backend8surfmeshEllll' filepath='libnurbs/internals/backend.h' line='61' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::endsurf() -->
        <function-decl name='endsurf' mangled-name='_ZN7Backend7endsurfEv' filepath='libnurbs/internals/backend.h' line='73' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::bgntfan() -->
        <function-decl name='bgntfan' mangled-name='_ZN7Backend7bgntfanEv' filepath='libnurbs/internals/backend.h' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::endtfan() -->
        <function-decl name='endtfan' mangled-name='_ZN7Backend7endtfanEv' filepath='libnurbs/internals/backend.h' line='77' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::bgnqstrip() -->
        <function-decl name='bgnqstrip' mangled-name='_ZN7Backend9bgnqstripEv' filepath='libnurbs/internals/backend.h' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::endqstrip() -->
        <function-decl name='endqstrip' mangled-name='_ZN7Backend9endqstripEv' filepath='libnurbs/internals/backend.h' line='79' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::evalUStrip(int, REAL, REAL*, int, REAL, REAL*) -->
        <function-decl name='evalUStrip' mangled-name='_ZN7Backend10evalUStripEifPfifS0_' filepath='libnurbs/internals/backend.h' line='80' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::evalVStrip(int, REAL, REAL*, int, REAL, REAL*) -->
        <function-decl name='evalVStrip' mangled-name='_ZN7Backend10evalVStripEifPfifS0_' filepath='libnurbs/internals/backend.h' line='83' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::bgntmesh(const char*) -->
        <function-decl name='bgntmesh' mangled-name='_ZN7Backend8bgntmeshEPKc' filepath='libnurbs/internals/backend.h' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-84'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::tmeshvertNOGE(TrimVertex*) -->
        <function-decl name='tmeshvertNOGE' mangled-name='_ZN7Backend13tmeshvertNOGEEP10TrimVertex' filepath='libnurbs/internals/backend.h' line='86' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::tmeshvertNOGE_BU(TrimVertex*) -->
        <function-decl name='tmeshvertNOGE_BU' mangled-name='_ZN7Backend16tmeshvertNOGE_BUEP10TrimVertex' filepath='libnurbs/internals/backend.h' line='87' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::tmeshvertNOGE_BV(TrimVertex*) -->
        <function-decl name='tmeshvertNOGE_BV' mangled-name='_ZN7Backend16tmeshvertNOGE_BVEP10TrimVertex' filepath='libnurbs/internals/backend.h' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::preEvaluateBU(REAL) -->
        <function-decl name='preEvaluateBU' mangled-name='_ZN7Backend13preEvaluateBUEf' filepath='libnurbs/internals/backend.h' line='89' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::preEvaluateBV(REAL) -->
        <function-decl name='preEvaluateBV' mangled-name='_ZN7Backend13preEvaluateBVEf' filepath='libnurbs/internals/backend.h' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::tmeshvert(TrimVertex*) -->
        <function-decl name='tmeshvert' mangled-name='_ZN7Backend9tmeshvertEP10TrimVertex' filepath='libnurbs/internals/backend.h' line='66' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::tmeshvert(REAL, REAL) -->
        <function-decl name='tmeshvert' mangled-name='_ZN7Backend9tmeshvertEff' filepath='libnurbs/internals/backend.h' line='68' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::tmeshvert(GridVertex*) -->
        <function-decl name='tmeshvert' mangled-name='_ZN7Backend9tmeshvertEP10GridVertex' filepath='libnurbs/internals/backend.h' line='67' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'GridVertex*' -->
          <parameter type-id='type-id-140'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::tmeshvert(GridTrimVertex*) -->
        <function-decl name='tmeshvert' mangled-name='_ZN7Backend9tmeshvertEP14GridTrimVertex' filepath='libnurbs/internals/backend.h' line='65' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'GridTrimVertex*' -->
          <parameter type-id='type-id-141'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::swaptmesh() -->
        <function-decl name='swaptmesh' mangled-name='_ZN7Backend9swaptmeshEv' filepath='libnurbs/internals/backend.h' line='64' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::endtmesh() -->
        <function-decl name='endtmesh' mangled-name='_ZN7Backend8endtmeshEv' filepath='libnurbs/internals/backend.h' line='63' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::bgnoutline() -->
        <function-decl name='bgnoutline' mangled-name='_ZN7Backend10bgnoutlineEv' filepath='libnurbs/internals/backend.h' line='71' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::linevert(TrimVertex*) -->
        <function-decl name='linevert' mangled-name='_ZN7Backend8linevertEP10TrimVertex' filepath='libnurbs/internals/backend.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::linevert(GridVertex*) -->
        <function-decl name='linevert' mangled-name='_ZN7Backend8linevertEP10GridVertex' filepath='libnurbs/internals/backend.h' line='70' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'GridVertex*' -->
          <parameter type-id='type-id-140'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::endoutline() -->
        <function-decl name='endoutline' mangled-name='_ZN7Backend10endoutlineEv' filepath='libnurbs/internals/backend.h' line='72' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::triangle(TrimVertex*, TrimVertex*, TrimVertex*) -->
        <function-decl name='triangle' mangled-name='_ZN7Backend8triangleEP10TrimVertexS1_S1_' filepath='libnurbs/internals/backend.h' line='74' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::bgncurv() -->
        <function-decl name='bgncurv' mangled-name='_ZN7Backend7bgncurvEv' filepath='libnurbs/internals/backend.h' line='94' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::segment(REAL, REAL) -->
        <function-decl name='segment' mangled-name='_ZN7Backend7segmentEff' filepath='libnurbs/internals/backend.h' line='95' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::curvpts(long int, REAL*, long int, int, REAL, REAL) -->
        <function-decl name='curvpts' mangled-name='_ZN7Backend7curvptsElPfliff' filepath='libnurbs/internals/backend.h' line='96' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::curvgrid(REAL, REAL, long int) -->
        <function-decl name='curvgrid' mangled-name='_ZN7Backend8curvgridEffl' filepath='libnurbs/internals/backend.h' line='97' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::curvmesh(long int, long int) -->
        <function-decl name='curvmesh' mangled-name='_ZN7Backend8curvmeshEll' filepath='libnurbs/internals/backend.h' line='98' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::curvpt(REAL) -->
        <function-decl name='curvpt' mangled-name='_ZN7Backend6curvptEf' filepath='libnurbs/internals/backend.h' line='99' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::bgnline() -->
        <function-decl name='bgnline' mangled-name='_ZN7Backend7bgnlineEv' filepath='libnurbs/internals/backend.h' line='100' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::endline() -->
        <function-decl name='endline' mangled-name='_ZN7Backend7endlineEv' filepath='libnurbs/internals/backend.h' line='101' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Backend::endcurv() -->
        <function-decl name='endcurv' mangled-name='_ZN7Backend7endcurvEv' filepath='libnurbs/internals/backend.h' line='102' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Backend*' -->
          <parameter type-id='type-id-139' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- class Bin -->
    <class-decl name='Bin' size-in-bits='128' visibility='default' filepath='libnurbs/internals/bin.h' line='44' column='1' id='type-id-142'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- Arc_ptr Bin::head -->
        <var-decl name='head' type-id='type-id-112' visibility='default' filepath='libnurbs/internals/bin.h' line='46' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- Arc_ptr Bin::current -->
        <var-decl name='current' type-id='type-id-112' visibility='default' filepath='libnurbs/internals/bin.h' line='47' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- Bin::Bin() -->
        <function-decl name='Bin' filepath='libnurbs/internals/bin.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Bin*' -->
          <parameter type-id='type-id-143' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes'>
        <!-- Bin::~Bin(int) -->
        <function-decl name='~Bin' filepath='libnurbs/internals/bin.h' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Bin*' -->
          <parameter type-id='type-id-143' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Arc_ptr Bin::nextarc() -->
        <function-decl name='nextarc' mangled-name='_ZN3Bin7nextarcEv' filepath='libnurbs/internals/bin.h' line='52' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Bin*' -->
          <parameter type-id='type-id-143' is-artificial='yes'/>
          <!-- typedef Arc_ptr -->
          <return type-id='type-id-112'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Arc_ptr Bin::firstarc() -->
        <function-decl name='firstarc' mangled-name='_ZN3Bin8firstarcEv' filepath='libnurbs/internals/bin.h' line='51' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Bin*' -->
          <parameter type-id='type-id-143' is-artificial='yes'/>
          <!-- typedef Arc_ptr -->
          <return type-id='type-id-112'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Bin::markall() -->
        <function-decl name='markall' mangled-name='_ZN3Bin7markallEv' filepath='libnurbs/internals/bin.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Bin*' -->
          <parameter type-id='type-id-143' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Arc_ptr Bin::removearc() -->
        <function-decl name='removearc' mangled-name='_ZN3Bin9removearcEv' filepath='libnurbs/internals/bin.h' line='53' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Bin*' -->
          <parameter type-id='type-id-143' is-artificial='yes'/>
          <!-- typedef Arc_ptr -->
          <return type-id='type-id-112'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Bin::remove_this_arc(Arc_ptr) -->
        <function-decl name='remove_this_arc' mangled-name='_ZN3Bin15remove_this_arcEP3Arc' filepath='libnurbs/internals/bin.h' line='56' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Bin*' -->
          <parameter type-id='type-id-143' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int Bin::numarcs() -->
        <function-decl name='numarcs' mangled-name='_ZN3Bin7numarcsEv' filepath='libnurbs/internals/bin.h' line='57' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Bin*' -->
          <parameter type-id='type-id-143' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Bin::adopt() -->
        <function-decl name='adopt' mangled-name='_ZN3Bin5adoptEv' filepath='libnurbs/internals/bin.h' line='58' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Bin*' -->
          <parameter type-id='type-id-143' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Bin::show(const char*) -->
        <function-decl name='show' mangled-name='_ZN3Bin4showEPKc' filepath='libnurbs/internals/bin.h' line='60' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Bin*' -->
          <parameter type-id='type-id-143' is-artificial='yes'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-84'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Bin::listBezier() -->
        <function-decl name='listBezier' mangled-name='_ZN3Bin10listBezierEv' filepath='libnurbs/internals/bin.h' line='61' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Bin*' -->
          <parameter type-id='type-id-143' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Bin::addarc(Arc_ptr) -->
        <function-decl name='addarc' mangled-name='_ZN3Bin6addarcEP3Arc' filepath='libnurbs/internals/bin.h' line='55' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Bin*' -->
          <parameter type-id='type-id-143' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int Bin::isnonempty() -->
        <function-decl name='isnonempty' mangled-name='_ZN3Bin10isnonemptyEv' filepath='libnurbs/internals/bin.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Bin*' -->
          <parameter type-id='type-id-143' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct Curvelist -->
    <class-decl name='Curvelist' size-in-bits='256' is-struct='yes' visibility='default' filepath='libnurbs/internals/curvelist.h' line='47' column='1' id='type-id-144'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- Curve* Curvelist::curve -->
        <var-decl name='curve' type-id='type-id-145' visibility='default' filepath='libnurbs/internals/curvelist.h' line='57' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- float Curvelist::range[3] -->
        <var-decl name='range' type-id='type-id-146' visibility='default' filepath='libnurbs/internals/curvelist.h' line='58' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='160'>
        <!-- int Curvelist::needsSubdivision -->
        <var-decl name='needsSubdivision' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/curvelist.h' line='59' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='192'>
        <!-- float Curvelist::stepsize -->
        <var-decl name='stepsize' type-id='type-id-15' visibility='default' filepath='libnurbs/internals/curvelist.h' line='60' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- Curvelist::Curvelist(Quilt*, REAL, REAL) -->
        <function-decl name='Curvelist' filepath='libnurbs/internals/curvelist.h' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Curvelist*' -->
          <parameter type-id='type-id-147' is-artificial='yes'/>
          <!-- parameter of type 'Quilt*' -->
          <parameter type-id='type-id-148'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- Curvelist::Curvelist(Curvelist&, REAL) -->
        <function-decl name='Curvelist' filepath='libnurbs/internals/curvelist.h' line='51' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Curvelist*' -->
          <parameter type-id='type-id-147' is-artificial='yes'/>
          <!-- parameter of type 'Curvelist&' -->
          <parameter type-id='type-id-149'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' destructor='yes'>
        <!-- Curvelist::~Curvelist(int) -->
        <function-decl name='~Curvelist' filepath='libnurbs/internals/curvelist.h' line='52' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Curvelist*' -->
          <parameter type-id='type-id-147' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Curvelist::needsSamplingSubdivision() -->
        <function-decl name='needsSamplingSubdivision' mangled-name='_ZN9Curvelist24needsSamplingSubdivisionEv' filepath='libnurbs/internals/curvelist.h' line='55' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Curvelist*' -->
          <parameter type-id='type-id-147' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Curvelist::getstepsize() -->
        <function-decl name='getstepsize' mangled-name='_ZN9Curvelist11getstepsizeEv' filepath='libnurbs/internals/curvelist.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Curvelist*' -->
          <parameter type-id='type-id-147' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Curvelist::cullCheck() -->
        <function-decl name='cullCheck' mangled-name='_ZN9Curvelist9cullCheckEv' filepath='libnurbs/internals/curvelist.h' line='53' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Curvelist*' -->
          <parameter type-id='type-id-147' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- class Flist -->
    <class-decl name='Flist' size-in-bits='320' visibility='default' filepath='libnurbs/internals/flist.h' line='42' column='1' id='type-id-150'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- REAL* Flist::pts -->
        <var-decl name='pts' type-id='type-id-22' visibility='default' filepath='libnurbs/internals/flist.h' line='44' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- int Flist::npts -->
        <var-decl name='npts' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/flist.h' line='45' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='96'>
        <!-- int Flist::start -->
        <var-decl name='start' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/flist.h' line='46' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='128'>
        <!-- int Flist::end -->
        <var-decl name='end' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/flist.h' line='47' column='1'/>
      </data-member>
      <data-member access='protected' layout-offset-in-bits='192'>
        <!-- FlistSorter Flist::sorter -->
        <var-decl name='sorter' type-id='type-id-151' visibility='default' filepath='libnurbs/internals/flist.h' line='56' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- Flist::Flist() -->
        <function-decl name='Flist' filepath='libnurbs/internals/flist.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Flist*' -->
          <parameter type-id='type-id-152' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes'>
        <!-- Flist::~Flist(int) -->
        <function-decl name='~Flist' filepath='libnurbs/internals/flist.h' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Flist*' -->
          <parameter type-id='type-id-152' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Flist::add(REAL) -->
        <function-decl name='add' mangled-name='_ZN5Flist3addEf' filepath='libnurbs/internals/flist.h' line='51' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Flist*' -->
          <parameter type-id='type-id-152' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Flist::taper(REAL, REAL) -->
        <function-decl name='taper' mangled-name='_ZN5Flist5taperEff' filepath='libnurbs/internals/flist.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Flist*' -->
          <parameter type-id='type-id-152' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Flist::grow(int) -->
        <function-decl name='grow' mangled-name='_ZN5Flist4growEi' filepath='libnurbs/internals/flist.h' line='53' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Flist*' -->
          <parameter type-id='type-id-152' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Flist::filter() -->
        <function-decl name='filter' mangled-name='_ZN5Flist6filterEv' filepath='libnurbs/internals/flist.h' line='52' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Flist*' -->
          <parameter type-id='type-id-152' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- class FlistSorter -->
    <class-decl name='FlistSorter' size-in-bits='128' visibility='default' filepath='libnurbs/internals/flistsorter.h' line='42' column='1' id='type-id-151'>
      <!-- class Sorter -->
      <base-class access='public' layout-offset-in-bits='0' type-id='type-id-153'/>
      <member-function access='private' constructor='yes'>
        <!-- FlistSorter::FlistSorter() -->
        <function-decl name='FlistSorter' filepath='libnurbs/internals/flistsorter.cc' line='43' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'FlistSorter*' -->
          <parameter type-id='type-id-154' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void FlistSorter::qsort(REAL*, int) -->
        <function-decl name='qsort' mangled-name='_ZN11FlistSorter5qsortEPfi' filepath='libnurbs/internals/flistsorter.cc' line='48' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'FlistSorter*' -->
          <parameter type-id='type-id-154' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes' vtable-offset='-1'>
        <!-- FlistSorter::~FlistSorter(int) -->
        <function-decl name='~FlistSorter' filepath='libnurbs/internals/flistsorter.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'FlistSorter*' -->
          <parameter type-id='type-id-154' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='protected' vtable-offset='2'>
        <!-- int FlistSorter::qscmp(char*, char*) -->
        <function-decl name='qscmp' mangled-name='_ZN11FlistSorter5qscmpEPcS0_' filepath='libnurbs/internals/flistsorter.cc' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'FlistSorter*' -->
          <parameter type-id='type-id-154' is-artificial='yes'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='protected' vtable-offset='3'>
        <!-- void FlistSorter::qsexc(char*, char*) -->
        <function-decl name='qsexc' mangled-name='_ZN11FlistSorter5qsexcEPcS0_' filepath='libnurbs/internals/flistsorter.cc' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'FlistSorter*' -->
          <parameter type-id='type-id-154' is-artificial='yes'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='protected' vtable-offset='4'>
        <!-- void FlistSorter::qstexc(char*, char*, char*) -->
        <function-decl name='qstexc' mangled-name='_ZN11FlistSorter6qstexcEPcS0_S0_' filepath='libnurbs/internals/flistsorter.cc' line='72' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'FlistSorter*' -->
          <parameter type-id='type-id-154' is-artificial='yes'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct JumpBuffer -->
    <class-decl name='JumpBuffer' size-in-bits='1600' is-struct='yes' visibility='default' filepath='libnurbs/internals/mysetjmp.h' line='56' column='1' id='type-id-155'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- jmp_buf JumpBuffer::buf -->
        <var-decl name='buf' type-id='type-id-156' visibility='default' filepath='libnurbs/internals/mysetjmp.h' line='57' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct Patchlist -->
    <class-decl name='Patchlist' size-in-bits='640' is-struct='yes' visibility='default' filepath='libnurbs/internals/patchlist.h' line='45' column='1' id='type-id-157'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- Patch* Patchlist::patch -->
        <var-decl name='patch' type-id='type-id-158' visibility='default' filepath='libnurbs/internals/patchlist.h' line='63' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- int Patchlist::notInBbox -->
        <var-decl name='notInBbox' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/patchlist.h' line='64' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='96'>
        <!-- int Patchlist::needsSampling -->
        <var-decl name='needsSampling' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/patchlist.h' line='65' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='128'>
        <!-- Pspec Patchlist::pspec[2] -->
        <var-decl name='pspec' type-id='type-id-159' visibility='default' filepath='libnurbs/internals/patchlist.h' line='66' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- Patchlist::Patchlist(Quilt*, REAL*, REAL*) -->
        <function-decl name='Patchlist' filepath='libnurbs/internals/patchlist.h' line='48' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patchlist*' -->
          <parameter type-id='type-id-160' is-artificial='yes'/>
          <!-- parameter of type 'Quilt*' -->
          <parameter type-id='type-id-148'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- Patchlist::Patchlist(Patchlist&, int, REAL) -->
        <function-decl name='Patchlist' filepath='libnurbs/internals/patchlist.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patchlist*' -->
          <parameter type-id='type-id-160' is-artificial='yes'/>
          <!-- parameter of type 'Patchlist&' -->
          <parameter type-id='type-id-161'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' destructor='yes'>
        <!-- Patchlist::~Patchlist(int) -->
        <function-decl name='~Patchlist' filepath='libnurbs/internals/patchlist.h' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patchlist*' -->
          <parameter type-id='type-id-160' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Patchlist::getRanges(REAL*) -->
        <function-decl name='getRanges' mangled-name='_ZN9Patchlist9getRangesEPf' filepath='libnurbs/internals/patchlist.h' line='58' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patchlist*' -->
          <parameter type-id='type-id-160' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Patchlist::needsSamplingSubdivision() -->
        <function-decl name='needsSamplingSubdivision' mangled-name='_ZN9Patchlist24needsSamplingSubdivisionEv' filepath='libnurbs/internals/patchlist.h' line='55' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patchlist*' -->
          <parameter type-id='type-id-160' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Patchlist::needsSubdivision(int) -->
        <function-decl name='needsSubdivision' mangled-name='_ZN9Patchlist16needsSubdivisionEi' filepath='libnurbs/internals/patchlist.h' line='56' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patchlist*' -->
          <parameter type-id='type-id-160' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Patchlist::needsNonSamplingSubdivision() -->
        <function-decl name='needsNonSamplingSubdivision' mangled-name='_ZN9Patchlist27needsNonSamplingSubdivisionEv' filepath='libnurbs/internals/patchlist.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patchlist*' -->
          <parameter type-id='type-id-160' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Patchlist::bbox() -->
        <function-decl name='bbox' mangled-name='_ZN9Patchlist4bboxEv' filepath='libnurbs/internals/patchlist.h' line='51' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patchlist*' -->
          <parameter type-id='type-id-160' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Patchlist::getstepsize() -->
        <function-decl name='getstepsize' mangled-name='_ZN9Patchlist11getstepsizeEv' filepath='libnurbs/internals/patchlist.h' line='53' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patchlist*' -->
          <parameter type-id='type-id-160' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Patchlist::cullCheck() -->
        <function-decl name='cullCheck' mangled-name='_ZN9Patchlist9cullCheckEv' filepath='libnurbs/internals/patchlist.h' line='52' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patchlist*' -->
          <parameter type-id='type-id-160' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- REAL Patchlist::getStepsize(int) -->
        <function-decl name='getStepsize' mangled-name='_ZN9Patchlist11getStepsizeEi' filepath='libnurbs/internals/patchlist.h' line='57' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patchlist*' -->
          <parameter type-id='type-id-160' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- typedef REAL -->
          <return type-id='type-id-1'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Patchlist::get_uorder() -->
        <function-decl name='get_uorder' mangled-name='_ZN9Patchlist10get_uorderEv' filepath='libnurbs/internals/patchlist.h' line='60' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patchlist*' -->
          <parameter type-id='type-id-160' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Patchlist::get_vorder() -->
        <function-decl name='get_vorder' mangled-name='_ZN9Patchlist10get_vorderEv' filepath='libnurbs/internals/patchlist.h' line='61' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patchlist*' -->
          <parameter type-id='type-id-160' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct Quilt -->
    <class-decl name='Quilt' size-in-bits='896' is-struct='yes' visibility='default' filepath='libnurbs/internals/quilt.h' line='64' column='1' id='type-id-162'>
      <!-- class PooledObj -->
      <base-class access='public' layout-offset-in-bits='0' type-id='type-id-115'/>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- Mapdesc* Quilt::mapdesc -->
        <var-decl name='mapdesc' type-id='type-id-163' visibility='default' filepath='libnurbs/internals/quilt.h' line='67' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- REAL* Quilt::cpts -->
        <var-decl name='cpts' type-id='type-id-22' visibility='default' filepath='libnurbs/internals/quilt.h' line='68' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- Quiltspec Quilt::qspec[2] -->
        <var-decl name='qspec' type-id='type-id-164' visibility='default' filepath='libnurbs/internals/quilt.h' line='69' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='768'>
        <!-- Quiltspec_ptr Quilt::eqspec -->
        <var-decl name='eqspec' type-id='type-id-165' visibility='default' filepath='libnurbs/internals/quilt.h' line='70' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='832'>
        <!-- Quilt* Quilt::next -->
        <var-decl name='next' type-id='type-id-148' visibility='default' filepath='libnurbs/internals/quilt.h' line='71' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- Quilt::Quilt(Mapdesc*) -->
        <function-decl name='Quilt' filepath='libnurbs/internals/quilt.h' line='66' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Quilt*' -->
          <parameter type-id='type-id-148' is-artificial='yes'/>
          <!-- parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Quilt::getDimension() -->
        <function-decl name='getDimension' mangled-name='_ZN5Quilt12getDimensionEv' filepath='libnurbs/internals/quilt.h' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Quilt*' -->
          <parameter type-id='type-id-148' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Quilt::show() -->
        <function-decl name='show' mangled-name='_ZN5Quilt4showEv' filepath='libnurbs/internals/quilt.h' line='87' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Quilt*' -->
          <parameter type-id='type-id-148' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Quilt::select(REAL*, REAL*) -->
        <function-decl name='select' mangled-name='_ZN5Quilt6selectEPfS0_' filepath='libnurbs/internals/quilt.h' line='77' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Quilt*' -->
          <parameter type-id='type-id-148' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Quilt::findSampleRates(Flist&, Flist&) -->
        <function-decl name='findSampleRates' mangled-name='_ZN5Quilt15findSampleRatesER5FlistS1_' filepath='libnurbs/internals/quilt.h' line='86' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Quilt*' -->
          <parameter type-id='type-id-148' is-artificial='yes'/>
          <!-- parameter of type 'Flist&' -->
          <parameter type-id='type-id-166'/>
          <!-- parameter of type 'Flist&' -->
          <parameter type-id='type-id-166'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Quilt::findRates(Flist&, Flist&, REAL*) -->
        <function-decl name='findRates' mangled-name='_ZN5Quilt9findRatesER5FlistS1_Pf' filepath='libnurbs/internals/quilt.h' line='85' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Quilt*' -->
          <parameter type-id='type-id-148' is-artificial='yes'/>
          <!-- parameter of type 'Flist&' -->
          <parameter type-id='type-id-166'/>
          <!-- parameter of type 'Flist&' -->
          <parameter type-id='type-id-166'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Quilt::getRange(REAL*, REAL*, int, Flist&) -->
        <function-decl name='getRange' mangled-name='_ZN5Quilt8getRangeEPfS0_iR5Flist' filepath='libnurbs/internals/quilt.h' line='83' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Quilt*' -->
          <parameter type-id='type-id-148' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'Flist&' -->
          <parameter type-id='type-id-166'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Quilt::getRange(REAL*, REAL*, Flist&) -->
        <function-decl name='getRange' mangled-name='_ZN5Quilt8getRangeEPfS0_R5Flist' filepath='libnurbs/internals/quilt.h' line='84' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Quilt*' -->
          <parameter type-id='type-id-148' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'Flist&' -->
          <parameter type-id='type-id-166'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Quilt::getRange(REAL*, REAL*, Flist&, Flist&) -->
        <function-decl name='getRange' mangled-name='_ZN5Quilt8getRangeEPfS0_R5FlistS2_' filepath='libnurbs/internals/quilt.h' line='82' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Quilt*' -->
          <parameter type-id='type-id-148' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'Flist&' -->
          <parameter type-id='type-id-166'/>
          <!-- parameter of type 'Flist&' -->
          <parameter type-id='type-id-166'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Quilt::isCulled() -->
        <function-decl name='isCulled' mangled-name='_ZN5Quilt8isCulledEv' filepath='libnurbs/internals/quilt.h' line='81' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Quilt*' -->
          <parameter type-id='type-id-148' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Quilt::download(Backend&) -->
        <function-decl name='download' mangled-name='_ZN5Quilt8downloadER7Backend' filepath='libnurbs/internals/quilt.h' line='79' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Quilt*' -->
          <parameter type-id='type-id-148' is-artificial='yes'/>
          <!-- parameter of type 'Backend&' -->
          <parameter type-id='type-id-167'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Quilt::downloadAll(REAL*, REAL*, Backend&) -->
        <function-decl name='downloadAll' mangled-name='_ZN5Quilt11downloadAllEPfS0_R7Backend' filepath='libnurbs/internals/quilt.h' line='80' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Quilt*' -->
          <parameter type-id='type-id-148' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'Backend&' -->
          <parameter type-id='type-id-167'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Quilt::deleteMe(Pool&) -->
        <function-decl name='deleteMe' mangled-name='_ZN5Quilt8deleteMeER4Pool' filepath='libnurbs/internals/quilt.h' line='74' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Quilt*' -->
          <parameter type-id='type-id-148' is-artificial='yes'/>
          <!-- parameter of type 'Pool&' -->
          <parameter type-id='type-id-124'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Quilt::toBezier(Knotvector&, Knotvector&, float*, long int) -->
        <function-decl name='toBezier' mangled-name='_ZN5Quilt8toBezierER10KnotvectorS1_Pfl' filepath='libnurbs/internals/quilt.h' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Quilt*' -->
          <parameter type-id='type-id-148' is-artificial='yes'/>
          <!-- parameter of type 'Knotvector&' -->
          <parameter type-id='type-id-168'/>
          <!-- parameter of type 'Knotvector&' -->
          <parameter type-id='type-id-168'/>
          <!-- parameter of type 'float*' -->
          <parameter type-id='type-id-49'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Quilt::toBezier(Knotvector&, float*, long int) -->
        <function-decl name='toBezier' mangled-name='_ZN5Quilt8toBezierER10KnotvectorPfl' filepath='libnurbs/internals/quilt.h' line='75' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Quilt*' -->
          <parameter type-id='type-id-148' is-artificial='yes'/>
          <!-- parameter of type 'Knotvector&' -->
          <parameter type-id='type-id-168'/>
          <!-- parameter of type 'float*' -->
          <parameter type-id='type-id-49'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct Renderhints -->
    <class-decl name='Renderhints' size-in-bits='256' is-struct='yes' visibility='default' filepath='libnurbs/internals/renderhints.h' line='41' column='1' id='type-id-62'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- REAL Renderhints::display_method -->
        <var-decl name='display_method' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/renderhints.h' line='49' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- REAL Renderhints::errorchecking -->
        <var-decl name='errorchecking' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/renderhints.h' line='50' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- REAL Renderhints::subdivisions -->
        <var-decl name='subdivisions' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/renderhints.h' line='51' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- REAL Renderhints::tmp1 -->
        <var-decl name='tmp1' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/renderhints.h' line='52' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- int Renderhints::displaydomain -->
        <var-decl name='displaydomain' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/renderhints.h' line='54' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='160'>
        <!-- int Renderhints::maxsubdivisions -->
        <var-decl name='maxsubdivisions' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/renderhints.h' line='55' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- int Renderhints::wiretris -->
        <var-decl name='wiretris' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/renderhints.h' line='56' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='224'>
        <!-- int Renderhints::wirequads -->
        <var-decl name='wirequads' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/renderhints.h' line='57' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- Renderhints::Renderhints() -->
        <function-decl name='Renderhints' filepath='libnurbs/internals/renderhints.h' line='43' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Renderhints*' -->
          <parameter type-id='type-id-169' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Renderhints::init() -->
        <function-decl name='init' mangled-name='_ZN11Renderhints4initEv' filepath='libnurbs/internals/renderhints.h' line='44' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Renderhints*' -->
          <parameter type-id='type-id-169' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Renderhints::isProperty(long int) -->
        <function-decl name='isProperty' mangled-name='_ZN11Renderhints10isPropertyEl' filepath='libnurbs/internals/renderhints.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Renderhints*' -->
          <parameter type-id='type-id-169' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Renderhints::setProperty(long int, REAL) -->
        <function-decl name='setProperty' mangled-name='_ZN11Renderhints11setPropertyElf' filepath='libnurbs/internals/renderhints.h' line='47' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Renderhints*' -->
          <parameter type-id='type-id-169' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- REAL Renderhints::getProperty(long int) -->
        <function-decl name='getProperty' mangled-name='_ZN11Renderhints11getPropertyEl' filepath='libnurbs/internals/renderhints.h' line='46' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Renderhints*' -->
          <parameter type-id='type-id-169' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- typedef REAL -->
          <return type-id='type-id-1'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- class Subdivider -->
    <class-decl name='Subdivider' size-in-bits='20416' visibility='default' filepath='libnurbs/internals/subdivider.h' line='55' column='1' id='type-id-65'>
      <member-type access='private'>
        <!-- enum Subdivider::dir -->
        <enum-decl name='dir' filepath='libnurbs/internals/subdivider.h' line='105' column='1' id='type-id-170'>
          <underlying-type type-id='type-id-12'/>
          <enumerator name='down' value='0'/>
          <enumerator name='same' value='1'/>
          <enumerator name='up' value='2'/>
          <enumerator name='none' value='3'/>
        </enum-decl>
      </member-type>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- Slicer Subdivider::slicer -->
        <var-decl name='slicer' type-id='type-id-171' visibility='default' filepath='libnurbs/internals/subdivider.h' line='112' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='8064'>
        <!-- ArcTessellator Subdivider::arctessellator -->
        <var-decl name='arctessellator' type-id='type-id-135' visibility='default' filepath='libnurbs/internals/subdivider.h' line='113' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='8192'>
        <!-- Pool Subdivider::arcpool -->
        <var-decl name='arcpool' type-id='type-id-67' visibility='default' filepath='libnurbs/internals/subdivider.h' line='114' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='10688'>
        <!-- Pool Subdivider::bezierarcpool -->
        <var-decl name='bezierarcpool' type-id='type-id-67' visibility='default' filepath='libnurbs/internals/subdivider.h' line='115' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='13184'>
        <!-- Pool Subdivider::pwlarcpool -->
        <var-decl name='pwlarcpool' type-id='type-id-67' visibility='default' filepath='libnurbs/internals/subdivider.h' line='116' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='15680'>
        <!-- TrimVertexPool Subdivider::trimvertexpool -->
        <var-decl name='trimvertexpool' type-id='type-id-68' visibility='default' filepath='libnurbs/internals/subdivider.h' line='117' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='18304'>
        <!-- JumpBuffer* Subdivider::jumpbuffer -->
        <var-decl name='jumpbuffer' type-id='type-id-66' visibility='default' filepath='libnurbs/internals/subdivider.h' line='119' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='18368'>
        <!-- Renderhints& Subdivider::renderhints -->
        <var-decl name='renderhints' type-id='type-id-172' visibility='default' filepath='libnurbs/internals/subdivider.h' line='120' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='18432'>
        <!-- Backend& Subdivider::backend -->
        <var-decl name='backend' type-id='type-id-167' visibility='default' filepath='libnurbs/internals/subdivider.h' line='121' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='18496'>
        <!-- Bin Subdivider::initialbin -->
        <var-decl name='initialbin' type-id='type-id-142' visibility='default' filepath='libnurbs/internals/subdivider.h' line='123' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='18624'>
        <!-- Arc_ptr Subdivider::pjarc -->
        <var-decl name='pjarc' type-id='type-id-112' visibility='default' filepath='libnurbs/internals/subdivider.h' line='124' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='18688'>
        <!-- int Subdivider::s_index -->
        <var-decl name='s_index' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/subdivider.h' line='125' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='18720'>
        <!-- int Subdivider::t_index -->
        <var-decl name='t_index' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/subdivider.h' line='126' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='18752'>
        <!-- Quilt* Subdivider::qlist -->
        <var-decl name='qlist' type-id='type-id-148' visibility='default' filepath='libnurbs/internals/subdivider.h' line='127' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='18816'>
        <!-- Flist Subdivider::spbrkpts -->
        <var-decl name='spbrkpts' type-id='type-id-150' visibility='default' filepath='libnurbs/internals/subdivider.h' line='128' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='19136'>
        <!-- Flist Subdivider::tpbrkpts -->
        <var-decl name='tpbrkpts' type-id='type-id-150' visibility='default' filepath='libnurbs/internals/subdivider.h' line='129' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='19456'>
        <!-- Flist Subdivider::smbrkpts -->
        <var-decl name='smbrkpts' type-id='type-id-150' visibility='default' filepath='libnurbs/internals/subdivider.h' line='130' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='19776'>
        <!-- Flist Subdivider::tmbrkpts -->
        <var-decl name='tmbrkpts' type-id='type-id-150' visibility='default' filepath='libnurbs/internals/subdivider.h' line='131' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='20096'>
        <!-- REAL Subdivider::stepsizes[4] -->
        <var-decl name='stepsizes' type-id='type-id-131' visibility='default' filepath='libnurbs/internals/subdivider.h' line='132' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='20224'>
        <!-- int Subdivider::showDegenerate -->
        <var-decl name='showDegenerate' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/subdivider.h' line='133' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='20256'>
        <!-- int Subdivider::isArcTypeBezier -->
        <var-decl name='isArcTypeBezier' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/subdivider.h' line='134' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='20288'>
        <!-- REAL Subdivider::domain_distance_u_rate -->
        <var-decl name='domain_distance_u_rate' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/subdivider.h' line='188' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='20320'>
        <!-- REAL Subdivider::domain_distance_v_rate -->
        <var-decl name='domain_distance_v_rate' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/subdivider.h' line='189' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='20352'>
        <!-- int Subdivider::is_domain_distance_sampling -->
        <var-decl name='is_domain_distance_sampling' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/subdivider.h' line='190' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- Subdivider::Subdivider(Renderhints&, Backend&) -->
        <function-decl name='Subdivider' filepath='libnurbs/internals/subdivider.h' line='57' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Renderhints&' -->
          <parameter type-id='type-id-172'/>
          <!-- parameter of type 'Backend&' -->
          <parameter type-id='type-id-167'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes'>
        <!-- Subdivider::~Subdivider(int) -->
        <function-decl name='~Subdivider' filepath='libnurbs/internals/subdivider.h' line='58' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' static='yes'>
        <!-- int Subdivider::bbox(REAL, REAL, REAL, REAL, REAL) -->
        <function-decl name='bbox' mangled-name='_ZN10Subdivider4bboxEffffff' filepath='libnurbs/internals/subdivider.h' line='168' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private' static='yes'>
        <!-- int Subdivider::ccw(TrimVertex*, TrimVertex*) -->
        <function-decl name='ccw' mangled-name='_ZN10Subdivider3ccwEP10TrimVertexS1_S1_' filepath='libnurbs/internals/subdivider.h' line='169' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int Subdivider::bbox(TrimVertex*, TrimVertex*, TrimVertex*, int) -->
        <function-decl name='bbox' mangled-name='_ZN10Subdivider4bboxEP10TrimVertexS1_S1_i' filepath='libnurbs/internals/subdivider.h' line='167' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int Subdivider::ccwTurn_tl(Arc_ptr, Arc_ptr) -->
        <function-decl name='ccwTurn_tl' mangled-name='_ZN10Subdivider10ccwTurn_tlEP3ArcS1_' filepath='libnurbs/internals/subdivider.h' line='77' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int Subdivider::ccwTurn_sr(Arc_ptr, Arc_ptr) -->
        <function-decl name='ccwTurn_sr' mangled-name='_ZN10Subdivider10ccwTurn_srEP3ArcS1_' filepath='libnurbs/internals/subdivider.h' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int Subdivider::ccwTurn_sl(Arc_ptr, Arc_ptr) -->
        <function-decl name='ccwTurn_sl' mangled-name='_ZN10Subdivider10ccwTurn_slEP3ArcS1_' filepath='libnurbs/internals/subdivider.h' line='75' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int Subdivider::ccwTurn_tr(Arc_ptr, Arc_ptr) -->
        <function-decl name='ccwTurn_tr' mangled-name='_ZN10Subdivider10ccwTurn_trEP3ArcS1_' filepath='libnurbs/internals/subdivider.h' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::samplingSplit(Curvelist&, int) -->
        <function-decl name='samplingSplit' mangled-name='_ZN10Subdivider13samplingSplitER9Curvelisti' filepath='libnurbs/internals/subdivider.h' line='136' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Curvelist&' -->
          <parameter type-id='type-id-149'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::drawCurves() -->
        <function-decl name='drawCurves' mangled-name='_ZN10Subdivider10drawCurvesEv' filepath='libnurbs/internals/subdivider.h' line='72' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int Subdivider::showingDegenerate() -->
        <function-decl name='showingDegenerate' mangled-name='_ZN10Subdivider17showingDegenerateEv' filepath='libnurbs/internals/subdivider.h' line='155' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::classify_headonright_t(Bin&, Bin&, Bin&, REAL) -->
        <function-decl name='classify_headonright_t' mangled-name='_ZN10Subdivider22classify_headonright_tER3BinS1_S1_f' filepath='libnurbs/internals/subdivider.h' line='102' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::classify_tailonright_t(Bin&, Bin&, Bin&, REAL) -->
        <function-decl name='classify_tailonright_t' mangled-name='_ZN10Subdivider22classify_tailonright_tER3BinS1_S1_f' filepath='libnurbs/internals/subdivider.h' line='103' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::classify_headonright_s(Bin&, Bin&, Bin&, REAL) -->
        <function-decl name='classify_headonright_s' mangled-name='_ZN10Subdivider22classify_headonright_sER3BinS1_S1_f' filepath='libnurbs/internals/subdivider.h' line='98' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::classify_tailonright_s(Bin&, Bin&, Bin&, REAL) -->
        <function-decl name='classify_tailonright_s' mangled-name='_ZN10Subdivider22classify_tailonright_sER3BinS1_S1_f' filepath='libnurbs/internals/subdivider.h' line='99' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::classify_headonleft_t(Bin&, Bin&, Bin&, REAL) -->
        <function-decl name='classify_headonleft_t' mangled-name='_ZN10Subdivider21classify_headonleft_tER3BinS1_S1_f' filepath='libnurbs/internals/subdivider.h' line='100' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::classify_tailonleft_t(Bin&, Bin&, Bin&, REAL) -->
        <function-decl name='classify_tailonleft_t' mangled-name='_ZN10Subdivider21classify_tailonleft_tER3BinS1_S1_f' filepath='libnurbs/internals/subdivider.h' line='101' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::classify_headonleft_s(Bin&, Bin&, Bin&, REAL) -->
        <function-decl name='classify_headonleft_s' mangled-name='_ZN10Subdivider21classify_headonleft_sER3BinS1_S1_f' filepath='libnurbs/internals/subdivider.h' line='96' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::classify_tailonleft_s(Bin&, Bin&, Bin&, REAL) -->
        <function-decl name='classify_tailonleft_s' mangled-name='_ZN10Subdivider21classify_tailonleft_sER3BinS1_S1_f' filepath='libnurbs/internals/subdivider.h' line='97' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int Subdivider::arc_split(Arc_ptr, int, REAL, int) -->
        <function-decl name='arc_split' mangled-name='_ZN10Subdivider9arc_splitEP3Arcifi' filepath='libnurbs/internals/subdivider.h' line='172' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::partition(Bin&, Bin&, Bin&, Bin&, Bin&, int, REAL) -->
        <function-decl name='partition' mangled-name='_ZN10Subdivider9partitionER3BinS1_S1_S1_S1_if' filepath='libnurbs/internals/subdivider.h' line='162' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int Subdivider::isMonotone(Arc_ptr) -->
        <function-decl name='isMonotone' mangled-name='_ZN10Subdivider10isMonotoneEP3Arc' filepath='libnurbs/internals/subdivider.h' line='108' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::monotonize(Arc_ptr, Bin&) -->
        <function-decl name='monotonize' mangled-name='_ZN10Subdivider10monotonizeEP3ArcR3Bin' filepath='libnurbs/internals/subdivider.h' line='107' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::tessellate(Arc_ptr, REAL) -->
        <function-decl name='tessellate' mangled-name='_ZN10Subdivider10tessellateEP3Arcf' filepath='libnurbs/internals/subdivider.h' line='106' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int Subdivider::decompose(Bin&, REAL) -->
        <function-decl name='decompose' mangled-name='_ZN10Subdivider9decomposeER3Binf' filepath='libnurbs/internals/subdivider.h' line='109' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::set_domain_distance_u_rate(REAL) -->
        <function-decl name='set_domain_distance_u_rate' mangled-name='_ZN10Subdivider26set_domain_distance_u_rateEf' filepath='libnurbs/internals/subdivider.h' line='82' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::set_domain_distance_v_rate(REAL) -->
        <function-decl name='set_domain_distance_v_rate' mangled-name='_ZN10Subdivider26set_domain_distance_v_rateEf' filepath='libnurbs/internals/subdivider.h' line='86' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::set_is_domain_distance_sampling(int) -->
        <function-decl name='set_is_domain_distance_sampling' mangled-name='_ZN10Subdivider31set_is_domain_distance_samplingEi' filepath='libnurbs/internals/subdivider.h' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::beginTrims() -->
        <function-decl name='beginTrims' mangled-name='_ZN10Subdivider10beginTrimsEv' filepath='libnurbs/internals/subdivider.h' line='61' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::beginLoop() -->
        <function-decl name='beginLoop' mangled-name='_ZN10Subdivider9beginLoopEv' filepath='libnurbs/internals/subdivider.h' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::endLoop() -->
        <function-decl name='endLoop' mangled-name='_ZN10Subdivider7endLoopEv' filepath='libnurbs/internals/subdivider.h' line='65' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::endTrims() -->
        <function-decl name='endTrims' mangled-name='_ZN10Subdivider8endTrimsEv' filepath='libnurbs/internals/subdivider.h' line='66' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::endQuilts() -->
        <function-decl name='endQuilts' mangled-name='_ZN10Subdivider9endQuiltsEv' filepath='libnurbs/internals/subdivider.h' line='70' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::simple_link(Arc_ptr, Arc_ptr) -->
        <function-decl name='simple_link' mangled-name='_ZN10Subdivider11simple_linkEP3ArcS1_' filepath='libnurbs/internals/subdivider.h' line='176' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int Subdivider::isBezierArcType() -->
        <function-decl name='isBezierArcType' mangled-name='_ZN10Subdivider15isBezierArcTypeEv' filepath='libnurbs/internals/subdivider.h' line='158' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::link(Arc_ptr, Arc_ptr, Arc_ptr, Arc_ptr) -->
        <function-decl name='link' mangled-name='_ZN10Subdivider4linkEP3ArcS1_S1_S1_' filepath='libnurbs/internals/subdivider.h' line='175' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::check_t(Arc_ptr, Arc_ptr) -->
        <function-decl name='check_t' mangled-name='_ZN10Subdivider7check_tEP3ArcS1_' filepath='libnurbs/internals/subdivider.h' line='174' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::check_s(Arc_ptr, Arc_ptr) -->
        <function-decl name='check_s' mangled-name='_ZN10Subdivider7check_sEP3ArcS1_' filepath='libnurbs/internals/subdivider.h' line='173' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::join_t(Bin&, Bin&, Arc_ptr, Arc_ptr) -->
        <function-decl name='join_t' mangled-name='_ZN10Subdivider6join_tER3BinS1_P3ArcS3_' filepath='libnurbs/internals/subdivider.h' line='171' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::join_s(Bin&, Bin&, Arc_ptr, Arc_ptr) -->
        <function-decl name='join_s' mangled-name='_ZN10Subdivider6join_sER3BinS1_P3ArcS3_' filepath='libnurbs/internals/subdivider.h' line='170' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::split(Bin&, Bin&, Bin&, int, REAL) -->
        <function-decl name='split' mangled-name='_ZN10Subdivider5splitER3BinS1_S1_if' filepath='libnurbs/internals/subdivider.h' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::setArcTypePwl() -->
        <function-decl name='setArcTypePwl' mangled-name='_ZN10Subdivider13setArcTypePwlEv' filepath='libnurbs/internals/subdivider.h' line='157' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::setDegenerate() -->
        <function-decl name='setDegenerate' mangled-name='_ZN10Subdivider13setDegenerateEv' filepath='libnurbs/internals/subdivider.h' line='153' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::setArcTypeBezier() -->
        <function-decl name='setArcTypeBezier' mangled-name='_ZN10Subdivider16setArcTypeBezierEv' filepath='libnurbs/internals/subdivider.h' line='156' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::setNonDegenerate() -->
        <function-decl name='setNonDegenerate' mangled-name='_ZN10Subdivider16setNonDegenerateEv' filepath='libnurbs/internals/subdivider.h' line='154' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::setJumpbuffer(JumpBuffer*) -->
        <function-decl name='setJumpbuffer' mangled-name='_ZN10Subdivider13setJumpbufferEP10JumpBuffer' filepath='libnurbs/internals/subdivider.h' line='80' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'JumpBuffer*' -->
          <parameter type-id='type-id-66'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::beginQuilts() -->
        <function-decl name='beginQuilts' mangled-name='_ZN10Subdivider11beginQuiltsEv' filepath='libnurbs/internals/subdivider.h' line='68' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::addQuilt(Quilt*) -->
        <function-decl name='addQuilt' mangled-name='_ZN10Subdivider8addQuiltEP5Quilt' filepath='libnurbs/internals/subdivider.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Quilt*' -->
          <parameter type-id='type-id-148'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::tessellate(Bin&, REAL, REAL, REAL, REAL) -->
        <function-decl name='tessellate' mangled-name='_ZN10Subdivider10tessellateER3Binffff' filepath='libnurbs/internals/subdivider.h' line='151' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::freejarcs(Bin&) -->
        <function-decl name='freejarcs' mangled-name='_ZN10Subdivider9freejarcsER3Bin' filepath='libnurbs/internals/subdivider.h' line='148' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::outline(Bin&) -->
        <function-decl name='outline' mangled-name='_ZN10Subdivider7outlineER3Bin' filepath='libnurbs/internals/subdivider.h' line='147' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::render(Bin&) -->
        <function-decl name='render' mangled-name='_ZN10Subdivider6renderER3Bin' filepath='libnurbs/internals/subdivider.h' line='149' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::findIrregularT(Bin&) -->
        <function-decl name='findIrregularT' mangled-name='_ZN10Subdivider14findIrregularTER3Bin' filepath='libnurbs/internals/subdivider.h' line='164' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::findIrregularS(Bin&) -->
        <function-decl name='findIrregularS' mangled-name='_ZN10Subdivider14findIrregularSER3Bin' filepath='libnurbs/internals/subdivider.h' line='163' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::monosplitInT(Bin&, int, int) -->
        <function-decl name='monosplitInT' mangled-name='_ZN10Subdivider12monosplitInTER3Binii' filepath='libnurbs/internals/subdivider.h' line='145' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::monosplitInS(Bin&, int, int) -->
        <function-decl name='monosplitInS' mangled-name='_ZN10Subdivider12monosplitInSER3Binii' filepath='libnurbs/internals/subdivider.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::tessellation(Bin&, Patchlist&) -->
        <function-decl name='tessellation' mangled-name='_ZN10Subdivider12tessellationER3BinR9Patchlist' filepath='libnurbs/internals/subdivider.h' line='143' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Patchlist&' -->
          <parameter type-id='type-id-161'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::nonSamplingSplit(Bin&, Patchlist&, int, int) -->
        <function-decl name='nonSamplingSplit' mangled-name='_ZN10Subdivider16nonSamplingSplitER3BinR9Patchlistii' filepath='libnurbs/internals/subdivider.h' line='142' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Patchlist&' -->
          <parameter type-id='type-id-161'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::samplingSplit(Bin&, Patchlist&, int, int) -->
        <function-decl name='samplingSplit' mangled-name='_ZN10Subdivider13samplingSplitER3BinR9Patchlistii' filepath='libnurbs/internals/subdivider.h' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'Patchlist&' -->
          <parameter type-id='type-id-161'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::splitInT(Bin&, int, int) -->
        <function-decl name='splitInT' mangled-name='_ZN10Subdivider8splitInTER3Binii' filepath='libnurbs/internals/subdivider.h' line='140' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::splitInS(Bin&, int, int) -->
        <function-decl name='splitInS' mangled-name='_ZN10Subdivider8splitInSER3Binii' filepath='libnurbs/internals/subdivider.h' line='139' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::subdivideInS(Bin&) -->
        <function-decl name='subdivideInS' mangled-name='_ZN10Subdivider12subdivideInSER3Bin' filepath='libnurbs/internals/subdivider.h' line='138' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'Bin&' -->
          <parameter type-id='type-id-174'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::clear() -->
        <function-decl name='clear' mangled-name='_ZN10Subdivider5clearEv' filepath='libnurbs/internals/subdivider.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::makeBorderTrim(const REAL*, const REAL*) -->
        <function-decl name='makeBorderTrim' mangled-name='_ZN10Subdivider14makeBorderTrimEPKfS1_' filepath='libnurbs/internals/subdivider.h' line='160' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'const REAL*' -->
          <parameter type-id='type-id-175'/>
          <!-- parameter of type 'const REAL*' -->
          <parameter type-id='type-id-175'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::drawSurfaces(long int) -->
        <function-decl name='drawSurfaces' mangled-name='_ZN10Subdivider12drawSurfacesEl' filepath='libnurbs/internals/subdivider.h' line='73' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::addArc(int, TrimVertex*, long int) -->
        <function-decl name='addArc' mangled-name='_ZN10Subdivider6addArcEiP10TrimVertexl' filepath='libnurbs/internals/subdivider.h' line='64' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Subdivider::addArc(REAL*, Quilt*, long int) -->
        <function-decl name='addArc' mangled-name='_ZN10Subdivider6addArcEPfP5Quiltl' filepath='libnurbs/internals/subdivider.h' line='63' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'Quilt*' -->
          <parameter type-id='type-id-148'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Bin* Subdivider::makePatchBoundary(const REAL*, const REAL*) -->
        <function-decl name='makePatchBoundary' mangled-name='_ZN10Subdivider17makePatchBoundaryEPKfS1_' filepath='libnurbs/internals/subdivider.h' line='178' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Subdivider*' -->
          <parameter type-id='type-id-173' is-artificial='yes'/>
          <!-- parameter of type 'const REAL*' -->
          <parameter type-id='type-id-175'/>
          <!-- parameter of type 'const REAL*' -->
          <parameter type-id='type-id-175'/>
          <!-- Bin* -->
          <return type-id='type-id-143'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct TrimVertexPool -->
    <class-decl name='TrimVertexPool' size-in-bits='2624' is-struct='yes' visibility='default' filepath='libnurbs/internals/trimvertpool.h' line='45' column='1' id='type-id-68'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- Pool TrimVertexPool::pool -->
        <var-decl name='pool' type-id='type-id-67' visibility='default' filepath='libnurbs/internals/trimvertpool.h' line='52' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='2496'>
        <!-- TrimVertex** TrimVertexPool::vlist -->
        <var-decl name='vlist' type-id='type-id-176' visibility='default' filepath='libnurbs/internals/trimvertpool.h' line='53' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='2560'>
        <!-- int TrimVertexPool::nextvlistslot -->
        <var-decl name='nextvlistslot' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/trimvertpool.h' line='54' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='2592'>
        <!-- int TrimVertexPool::vlistsize -->
        <var-decl name='vlistsize' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/trimvertpool.h' line='55' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- TrimVertexPool::TrimVertexPool() -->
        <function-decl name='TrimVertexPool' filepath='libnurbs/internals/trimvertpool.h' line='47' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'TrimVertexPool*' -->
          <parameter type-id='type-id-177' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' destructor='yes'>
        <!-- TrimVertexPool::~TrimVertexPool(int) -->
        <function-decl name='~TrimVertexPool' filepath='libnurbs/internals/trimvertpool.h' line='48' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'TrimVertexPool*' -->
          <parameter type-id='type-id-177' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- TrimVertex* TrimVertexPool::get(int) -->
        <function-decl name='get' mangled-name='_ZN14TrimVertexPool3getEi' filepath='libnurbs/internals/trimvertpool.h' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'TrimVertexPool*' -->
          <parameter type-id='type-id-177' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- TrimVertex* -->
          <return type-id='type-id-127'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void TrimVertexPool::clear() -->
        <function-decl name='clear' mangled-name='_ZN14TrimVertexPool5clearEv' filepath='libnurbs/internals/trimvertpool.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'TrimVertexPool*' -->
          <parameter type-id='type-id-177' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- Arc** -->
    <pointer-type-def type-id='type-id-111' size-in-bits='64' id='type-id-178'/>
    <!-- ArcSdirSorter* -->
    <pointer-type-def type-id='type-id-179' size-in-bits='64' id='type-id-180'/>
    <!-- ArcSorter* -->
    <pointer-type-def type-id='type-id-181' size-in-bits='64' id='type-id-182'/>
    <!-- ArcTdirSorter* -->
    <pointer-type-def type-id='type-id-183' size-in-bits='64' id='type-id-184'/>
    <!-- ArcTessellator* -->
    <pointer-type-def type-id='type-id-135' size-in-bits='64' id='type-id-137'/>
    <!-- Backend& -->
    <reference-type-def kind='lvalue' type-id='type-id-64' size-in-bits='64' id='type-id-167'/>
    <!-- Bin& -->
    <reference-type-def kind='lvalue' type-id='type-id-142' size-in-bits='64' id='type-id-174'/>
    <!-- Bin* -->
    <pointer-type-def type-id='type-id-142' size-in-bits='64' id='type-id-143'/>
    <!-- Curvelist& -->
    <reference-type-def kind='lvalue' type-id='type-id-144' size-in-bits='64' id='type-id-149'/>
    <!-- Flist* -->
    <pointer-type-def type-id='type-id-150' size-in-bits='64' id='type-id-152'/>
    <!-- JumpBuffer* -->
    <pointer-type-def type-id='type-id-155' size-in-bits='64' id='type-id-66'/>
    <!-- Patchlist& -->
    <reference-type-def kind='lvalue' type-id='type-id-157' size-in-bits='64' id='type-id-161'/>
    <!-- Quilt* -->
    <pointer-type-def type-id='type-id-162' size-in-bits='64' id='type-id-148'/>
    <!-- Renderhints& -->
    <reference-type-def kind='lvalue' type-id='type-id-62' size-in-bits='64' id='type-id-172'/>
    <!-- Sorter* -->
    <pointer-type-def type-id='type-id-153' size-in-bits='64' id='type-id-185'/>
    <!-- Subdivider& -->
    <reference-type-def kind='lvalue' type-id='type-id-65' size-in-bits='64' id='type-id-186'/>
    <!-- Subdivider* -->
    <pointer-type-def type-id='type-id-65' size-in-bits='64' id='type-id-173'/>
    <!-- TrimVertex** -->
    <pointer-type-def type-id='type-id-127' size-in-bits='64' id='type-id-176'/>
    <!-- TrimVertexPool& -->
    <reference-type-def kind='lvalue' type-id='type-id-68' size-in-bits='64' id='type-id-136'/>
    <!-- TrimVertexPool* -->
    <pointer-type-def type-id='type-id-68' size-in-bits='64' id='type-id-177'/>
    <!-- const REAL -->
    <qualified-type-def type-id='type-id-1' const='yes' id='type-id-187'/>
    <!-- const REAL* -->
    <pointer-type-def type-id='type-id-187' size-in-bits='64' id='type-id-175'/>
    <!-- class ArcSorter -->
    <class-decl name='ArcSorter' visibility='default' filepath='libnurbs/internals/arcsorter.h' line='44' column='1' is-declaration-only='yes' id='type-id-181'>
      <!-- class Sorter -->
      <base-class access='private' layout-offset-in-bits='0' type-id='type-id-153'/>
      <data-member access='protected' layout-offset-in-bits='128'>
        <!-- Subdivider& ArcSorter::subdivider -->
        <var-decl name='subdivider' type-id='type-id-186' visibility='default' filepath='libnurbs/internals/arcsorter.h' line='50' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- ArcSorter::ArcSorter(Subdivider&) -->
        <function-decl name='ArcSorter' filepath='libnurbs/internals/arcsorter.cc' line='48' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ArcSorter*' -->
          <parameter type-id='type-id-182' is-artificial='yes'/>
          <!-- parameter of type 'Subdivider&' -->
          <parameter type-id='type-id-186'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void ArcSorter::qsort(Arc**, int) -->
        <function-decl name='qsort' mangled-name='_ZN9ArcSorter5qsortEPP3Arci' filepath='libnurbs/internals/arcsorter.cc' line='60' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ArcSorter*' -->
          <parameter type-id='type-id-182' is-artificial='yes'/>
          <!-- parameter of type 'Arc**' -->
          <parameter type-id='type-id-178'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='protected' vtable-offset='2'>
        <!-- int ArcSorter::qscmp(char*, char*) -->
        <function-decl name='qscmp' mangled-name='_ZN9ArcSorter5qscmpEPcS0_' filepath='libnurbs/internals/arcsorter.cc' line='53' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ArcSorter*' -->
          <parameter type-id='type-id-182' is-artificial='yes'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='3'>
        <!-- void ArcSorter::qsexc(char*, char*) -->
        <function-decl name='qsexc' mangled-name='_ZN9ArcSorter5qsexcEPcS0_' filepath='libnurbs/internals/arcsorter.cc' line='66' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ArcSorter*' -->
          <parameter type-id='type-id-182' is-artificial='yes'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='4'>
        <!-- void ArcSorter::qstexc(char*, char*, char*) -->
        <function-decl name='qstexc' mangled-name='_ZN9ArcSorter6qstexcEPcS0_S0_' filepath='libnurbs/internals/arcsorter.cc' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ArcSorter*' -->
          <parameter type-id='type-id-182' is-artificial='yes'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- class ArcSdirSorter -->
    <class-decl name='ArcSdirSorter' visibility='default' filepath='libnurbs/internals/arcsorter.h' line='57' column='1' is-declaration-only='yes' id='type-id-179'>
      <!-- class ArcSorter -->
      <base-class access='public' layout-offset-in-bits='0' type-id='type-id-181'/>
      <member-function access='private' constructor='yes'>
        <!-- ArcSdirSorter::ArcSdirSorter(Subdivider&) -->
        <function-decl name='ArcSdirSorter' filepath='libnurbs/internals/arcsorter.cc' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ArcSdirSorter*' -->
          <parameter type-id='type-id-180' is-artificial='yes'/>
          <!-- parameter of type 'Subdivider&' -->
          <parameter type-id='type-id-186'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='2'>
        <!-- int ArcSdirSorter::qscmp(char*, char*) -->
        <function-decl name='qscmp' mangled-name='_ZN13ArcSdirSorter5qscmpEPcS0_' filepath='libnurbs/internals/arcsorter.cc' line='93' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ArcSdirSorter*' -->
          <parameter type-id='type-id-180' is-artificial='yes'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- class ArcTdirSorter -->
    <class-decl name='ArcTdirSorter' visibility='default' filepath='libnurbs/internals/arcsorter.h' line='65' column='1' is-declaration-only='yes' id='type-id-183'>
      <!-- class ArcSorter -->
      <base-class access='public' layout-offset-in-bits='0' type-id='type-id-181'/>
      <member-function access='private' constructor='yes'>
        <!-- ArcTdirSorter::ArcTdirSorter(Subdivider&) -->
        <function-decl name='ArcTdirSorter' filepath='libnurbs/internals/arcsorter.cc' line='125' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ArcTdirSorter*' -->
          <parameter type-id='type-id-184' is-artificial='yes'/>
          <!-- parameter of type 'Subdivider&' -->
          <parameter type-id='type-id-186'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' vtable-offset='2'>
        <!-- int ArcTdirSorter::qscmp(char*, char*) -->
        <function-decl name='qscmp' mangled-name='_ZN13ArcTdirSorter5qscmpEPcS0_' filepath='libnurbs/internals/arcsorter.cc' line='138' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'ArcTdirSorter*' -->
          <parameter type-id='type-id-184' is-artificial='yes'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- class Slicer -->
    <class-decl name='Slicer' visibility='default' filepath='libnurbs/internals/slicer.h' line='49' column='1' is-declaration-only='yes' id='type-id-171'>
      <!-- class CoveAndTiler -->
      <base-class access='public' layout-offset-in-bits='0' type-id='type-id-188'/>
      <!-- class Mesher -->
      <base-class access='public' layout-offset-in-bits='128' type-id='type-id-189'/>
      <data-member access='private' layout-offset-in-bits='5248'>
        <!-- Backend& Slicer::backend -->
        <var-decl name='backend' type-id='type-id-167' visibility='default' filepath='libnurbs/internals/slicer.h' line='72' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='5312'>
        <!-- REAL Slicer::oneOverDu -->
        <var-decl name='oneOverDu' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/slicer.h' line='73' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='5344'>
        <!-- REAL Slicer::du -->
        <var-decl name='du' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/slicer.h' line='74' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='5376'>
        <!-- REAL Slicer::dv -->
        <var-decl name='dv' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/slicer.h' line='74' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='5408'>
        <!-- int Slicer::isolines -->
        <var-decl name='isolines' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/slicer.h' line='75' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='5440'>
        <!-- int Slicer::ulinear -->
        <var-decl name='ulinear' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/slicer.h' line='81' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='5472'>
        <!-- int Slicer::vlinear -->
        <var-decl name='vlinear' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/slicer.h' line='82' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- Slicer::Slicer(int, void**, Backend&) -->
        <function-decl name='Slicer' filepath='libnurbs/internals/slicer.cc' line='1181' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Slicer*' -->
          <parameter type-id='type-id-190' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- artificial parameter of type 'void**' -->
          <parameter type-id='type-id-191' is-artificial='yes'/>
          <!-- parameter of type 'Backend&' -->
          <parameter type-id='type-id-167'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes'>
        <!-- Slicer::~Slicer(int, void**) -->
        <function-decl name='~Slicer' filepath='libnurbs/internals/slicer.cc' line='1192' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Slicer*' -->
          <parameter type-id='type-id-190' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- artificial parameter of type 'void**' -->
          <parameter type-id='type-id-191' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Slicer::setisolines(int) -->
        <function-decl name='setisolines' mangled-name='_ZN6Slicer11setisolinesEi' filepath='libnurbs/internals/slicer.cc' line='1197' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Slicer*' -->
          <parameter type-id='type-id-190' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Slicer::outline(Arc_ptr) -->
        <function-decl name='outline' mangled-name='_ZN6Slicer7outlineEP3Arc' filepath='libnurbs/internals/slicer.cc' line='1292' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Slicer*' -->
          <parameter type-id='type-id-190' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Slicer::outline() -->
        <function-decl name='outline' mangled-name='_ZN6Slicer7outlineEv' filepath='libnurbs/internals/slicer.cc' line='1266' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Slicer*' -->
          <parameter type-id='type-id-190' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Slicer::slice_old(Arc_ptr) -->
        <function-decl name='slice_old' mangled-name='_ZN6Slicer9slice_oldEP3Arc' filepath='libnurbs/internals/slicer.cc' line='1212' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Slicer*' -->
          <parameter type-id='type-id-190' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Slicer::setstriptessellation(REAL, REAL) -->
        <function-decl name='setstriptessellation' mangled-name='_ZN6Slicer20setstriptessellationEff' filepath='libnurbs/internals/slicer.cc' line='1203' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Slicer*' -->
          <parameter type-id='type-id-190' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Slicer::evalRBArray(rectBlockArray*, gridWrap*) -->
        <function-decl name='evalRBArray' mangled-name='_ZN6Slicer11evalRBArrayEP14rectBlockArrayP8gridWrap' filepath='libnurbs/internals/slicer.cc' line='1001' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Slicer*' -->
          <parameter type-id='type-id-190' is-artificial='yes'/>
          <!-- parameter of type 'rectBlockArray*' -->
          <parameter type-id='type-id-192'/>
          <!-- parameter of type 'gridWrap*' -->
          <parameter type-id='type-id-193'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Slicer::evalStream(primStream*) -->
        <function-decl name='evalStream' mangled-name='_ZN6Slicer10evalStreamEP10primStream' filepath='libnurbs/internals/slicer.cc' line='1027' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Slicer*' -->
          <parameter type-id='type-id-190' is-artificial='yes'/>
          <!-- parameter of type 'primStream*' -->
          <parameter type-id='type-id-194'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Slicer::slice_new(Arc_ptr) -->
        <function-decl name='slice_new' mangled-name='_ZN6Slicer9slice_newEP3Arc' filepath='libnurbs/internals/slicer.cc' line='1068' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Slicer*' -->
          <parameter type-id='type-id-190' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Slicer::slice(Arc_ptr) -->
        <function-decl name='slice' mangled-name='_ZN6Slicer5sliceEP3Arc' filepath='libnurbs/internals/slicer.cc' line='1165' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Slicer*' -->
          <parameter type-id='type-id-190' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Slicer::set_ulinear(int) -->
        <function-decl name='set_ulinear' mangled-name='_ZN6Slicer11set_ulinearEi' filepath='libnurbs/internals/slicer.h' line='63' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Slicer*' -->
          <parameter type-id='type-id-190' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Slicer::set_vlinear(int) -->
        <function-decl name='set_vlinear' mangled-name='_ZN6Slicer11set_vlinearEi' filepath='libnurbs/internals/slicer.h' line='67' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Slicer*' -->
          <parameter type-id='type-id-190' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- class Sorter -->
    <class-decl name='Sorter' visibility='default' filepath='libnurbs/internals/sorter.h' line='36' column='1' is-declaration-only='yes' id='type-id-153'>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- int Sorter::es -->
        <var-decl name='es' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/sorter.h' line='49' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- Sorter::Sorter(int) -->
        <function-decl name='Sorter' filepath='libnurbs/internals/sorter.cc' line='44' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Sorter*' -->
          <parameter type-id='type-id-185' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Sorter::qs1(char*, char*) -->
        <function-decl name='qs1' mangled-name='_ZN6Sorter3qs1EPcS0_' filepath='libnurbs/internals/sorter.cc' line='77' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Sorter*' -->
          <parameter type-id='type-id-185' is-artificial='yes'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Sorter::qsort(void*, int) -->
        <function-decl name='qsort' mangled-name='_ZN6Sorter5qsortEPvi' filepath='libnurbs/internals/sorter.cc' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Sorter*' -->
          <parameter type-id='type-id-185' is-artificial='yes'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-35'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes' vtable-offset='-1'>
        <!-- Sorter::~Sorter(int) -->
        <function-decl name='~Sorter' filepath='libnurbs/internals/sorter.h' line='39' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Sorter*' -->
          <parameter type-id='type-id-185' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='protected' vtable-offset='2'>
        <!-- int Sorter::qscmp(char*, char*) -->
        <function-decl name='qscmp' mangled-name='_ZN6Sorter5qscmpEPcS0_' filepath='libnurbs/internals/sorter.cc' line='56' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Sorter*' -->
          <parameter type-id='type-id-185' is-artificial='yes'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='protected' vtable-offset='3'>
        <!-- void Sorter::qsexc(char*, char*) -->
        <function-decl name='qsexc' mangled-name='_ZN6Sorter5qsexcEPcS0_' filepath='libnurbs/internals/sorter.cc' line='64' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Sorter*' -->
          <parameter type-id='type-id-185' is-artificial='yes'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='protected' vtable-offset='4'>
        <!-- void Sorter::qstexc(char*, char*, char*) -->
        <function-decl name='qstexc' mangled-name='_ZN6Sorter6qstexcEPcS0_S0_' filepath='libnurbs/internals/sorter.cc' line='71' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Sorter*' -->
          <parameter type-id='type-id-185' is-artificial='yes'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/arctess.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/backend.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- REAL[3][4] -->
    <array-type-def dimensions='2' type-id='type-id-1' size-in-bits='384' id='type-id-138'>
      <!-- <anonymous range>[3] -->
      <subrange length='3' type-id='type-id-3' id='type-id-90'/>
      <!-- <anonymous range>[4] -->
      <subrange length='4' type-id='type-id-3' id='type-id-61'/>
    </array-type-def>
    <!-- class GridTrimVertex -->
    <class-decl name='GridTrimVertex' size-in-bits='384' visibility='default' filepath='libnurbs/internals/gridtrimvertex.h' line='45' column='1' id='type-id-195'>
      <!-- class PooledObj -->
      <base-class access='public' layout-offset-in-bits='0' type-id='type-id-115'/>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- TrimVertex GridTrimVertex::dummyt -->
        <var-decl name='dummyt' type-id='type-id-128' visibility='default' filepath='libnurbs/internals/gridtrimvertex.h' line='47' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='128'>
        <!-- GridVertex GridTrimVertex::dummyg -->
        <var-decl name='dummyg' type-id='type-id-196' visibility='default' filepath='libnurbs/internals/gridtrimvertex.h' line='48' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='256'>
        <!-- TrimVertex* GridTrimVertex::t -->
        <var-decl name='t' type-id='type-id-127' visibility='default' filepath='libnurbs/internals/gridtrimvertex.h' line='51' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='320'>
        <!-- GridVertex* GridTrimVertex::g -->
        <var-decl name='g' type-id='type-id-140' visibility='default' filepath='libnurbs/internals/gridtrimvertex.h' line='52' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- GridTrimVertex::GridTrimVertex() -->
        <function-decl name='GridTrimVertex' filepath='libnurbs/internals/gridtrimvertex.h' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GridTrimVertex*' -->
          <parameter type-id='type-id-141' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int GridTrimVertex::isGridVert() -->
        <function-decl name='isGridVert' mangled-name='_ZN14GridTrimVertex10isGridVertEv' filepath='libnurbs/internals/gridtrimvertex.h' line='58' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GridTrimVertex*' -->
          <parameter type-id='type-id-141' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void GridTrimVertex::set(TrimVertex*) -->
        <function-decl name='set' mangled-name='_ZN14GridTrimVertex3setEP10TrimVertex' filepath='libnurbs/internals/gridtrimvertex.h' line='56' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GridTrimVertex*' -->
          <parameter type-id='type-id-141' is-artificial='yes'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void GridTrimVertex::set(long int, long int) -->
        <function-decl name='set' mangled-name='_ZN14GridTrimVertex3setEll' filepath='libnurbs/internals/gridtrimvertex.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GridTrimVertex*' -->
          <parameter type-id='type-id-141' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int GridTrimVertex::isTrimVert() -->
        <function-decl name='isTrimVert' mangled-name='_ZN14GridTrimVertex10isTrimVertEv' filepath='libnurbs/internals/gridtrimvertex.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GridTrimVertex*' -->
          <parameter type-id='type-id-141' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void GridTrimVertex::set(REAL, REAL) -->
        <function-decl name='set' mangled-name='_ZN14GridTrimVertex3setEff' filepath='libnurbs/internals/gridtrimvertex.h' line='55' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GridTrimVertex*' -->
          <parameter type-id='type-id-141' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct GridVertex -->
    <class-decl name='GridVertex' size-in-bits='128' is-struct='yes' visibility='default' filepath='libnurbs/internals/gridvertex.h' line='39' column='1' id='type-id-196'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- long int GridVertex::gparam[2] -->
        <var-decl name='gparam' type-id='type-id-93' visibility='default' filepath='libnurbs/internals/gridvertex.h' line='40' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- GridVertex::GridVertex() -->
        <function-decl name='GridVertex' filepath='libnurbs/internals/gridvertex.h' line='41' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GridVertex*' -->
          <parameter type-id='type-id-140' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- GridVertex::GridVertex(long int, long int) -->
        <function-decl name='GridVertex' filepath='libnurbs/internals/gridvertex.h' line='42' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GridVertex*' -->
          <parameter type-id='type-id-140' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- long int GridVertex::nextu() -->
        <function-decl name='nextu' mangled-name='_ZN10GridVertex5nextuEv' filepath='libnurbs/internals/gridvertex.h' line='44' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GridVertex*' -->
          <parameter type-id='type-id-140' is-artificial='yes'/>
          <!-- long int -->
          <return type-id='type-id-38'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- long int GridVertex::prevu() -->
        <function-decl name='prevu' mangled-name='_ZN10GridVertex5prevuEv' filepath='libnurbs/internals/gridvertex.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'GridVertex*' -->
          <parameter type-id='type-id-140' is-artificial='yes'/>
          <!-- long int -->
          <return type-id='type-id-38'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- Backend* -->
    <pointer-type-def type-id='type-id-64' size-in-bits='64' id='type-id-139'/>
    <!-- BasicCurveEvaluator& -->
    <reference-type-def kind='lvalue' type-id='type-id-16' size-in-bits='64' id='type-id-79'/>
    <!-- BasicSurfaceEvaluator& -->
    <reference-type-def kind='lvalue' type-id='type-id-51' size-in-bits='64' id='type-id-80'/>
    <!-- GridTrimVertex* -->
    <pointer-type-def type-id='type-id-195' size-in-bits='64' id='type-id-141'/>
    <!-- GridVertex* -->
    <pointer-type-def type-id='type-id-196' size-in-bits='64' id='type-id-140'/>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/cachingeval.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/coveandtiler.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- class CoveAndTiler -->
    <class-decl name='CoveAndTiler' size-in-bits='2688' visibility='default' filepath='libnurbs/internals/coveandtiler.h' line='46' column='1' id='type-id-188'>
      <!-- class TrimRegion -->
      <base-class access='public' layout-offset-in-bits='192' is-virtual='yes' type-id='type-id-197'/>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- Backend& CoveAndTiler::backend -->
        <var-decl name='backend' type-id='type-id-167' visibility='default' filepath='libnurbs/internals/coveandtiler.h' line='52' column='1'/>
      </data-member>
      <data-member access='private' static='yes'>
        <!-- static const int CoveAndTiler::MAXSTRIPSIZE -->
        <var-decl name='MAXSTRIPSIZE' type-id='type-id-116' mangled-name='_ZN12CoveAndTiler12MAXSTRIPSIZEE' visibility='default' filepath='libnurbs/internals/coveandtiler.cc' line='50' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- CoveAndTiler::CoveAndTiler(int, void**, Backend&) -->
        <function-decl name='CoveAndTiler' filepath='libnurbs/internals/coveandtiler.cc' line='52' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CoveAndTiler*' -->
          <parameter type-id='type-id-198' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- artificial parameter of type 'void**' -->
          <parameter type-id='type-id-191' is-artificial='yes'/>
          <!-- parameter of type 'Backend&' -->
          <parameter type-id='type-id-167'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes'>
        <!-- CoveAndTiler::~CoveAndTiler(int, void**) -->
        <function-decl name='~CoveAndTiler' filepath='libnurbs/internals/coveandtiler.cc' line='56' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CoveAndTiler*' -->
          <parameter type-id='type-id-198' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- artificial parameter of type 'void**' -->
          <parameter type-id='type-id-191' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void CoveAndTiler::output(TrimVertex*) -->
        <function-decl name='output' mangled-name='_ZN12CoveAndTiler6outputEP10TrimVertex' filepath='libnurbs/internals/coveandtiler.cc' line='66' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CoveAndTiler*' -->
          <parameter type-id='type-id-198' is-artificial='yes'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void CoveAndTiler::output(GridVertex&) -->
        <function-decl name='output' mangled-name='_ZN12CoveAndTiler6outputER10GridVertex' filepath='libnurbs/internals/coveandtiler.cc' line='60' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CoveAndTiler*' -->
          <parameter type-id='type-id-198' is-artificial='yes'/>
          <!-- parameter of type 'GridVertex&' -->
          <parameter type-id='type-id-199'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void CoveAndTiler::output(GridTrimVertex&) -->
        <function-decl name='output' mangled-name='_ZN12CoveAndTiler6outputER14GridTrimVertex' filepath='libnurbs/internals/coveandtiler.cc' line='72' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CoveAndTiler*' -->
          <parameter type-id='type-id-198' is-artificial='yes'/>
          <!-- parameter of type 'GridTrimVertex&' -->
          <parameter type-id='type-id-200'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void CoveAndTiler::coveLR() -->
        <function-decl name='coveLR' mangled-name='_ZN12CoveAndTiler6coveLREv' filepath='libnurbs/internals/coveandtiler.cc' line='409' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CoveAndTiler*' -->
          <parameter type-id='type-id-198' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void CoveAndTiler::coveLL() -->
        <function-decl name='coveLL' mangled-name='_ZN12CoveAndTiler6coveLLEv' filepath='libnurbs/internals/coveandtiler.cc' line='348' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CoveAndTiler*' -->
          <parameter type-id='type-id-198' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void CoveAndTiler::coveUL() -->
        <function-decl name='coveUL' mangled-name='_ZN12CoveAndTiler6coveULEv' filepath='libnurbs/internals/coveandtiler.cc' line='287' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CoveAndTiler*' -->
          <parameter type-id='type-id-198' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void CoveAndTiler::coveUR() -->
        <function-decl name='coveUR' mangled-name='_ZN12CoveAndTiler6coveUREv' filepath='libnurbs/internals/coveandtiler.cc' line='225' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CoveAndTiler*' -->
          <parameter type-id='type-id-198' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void CoveAndTiler::coveLowerRightNoGrid(TrimVertex*) -->
        <function-decl name='coveLowerRightNoGrid' mangled-name='_ZN12CoveAndTiler20coveLowerRightNoGridEP10TrimVertex' filepath='libnurbs/internals/coveandtiler.cc' line='397' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CoveAndTiler*' -->
          <parameter type-id='type-id-198' is-artificial='yes'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void CoveAndTiler::coveLowerRight() -->
        <function-decl name='coveLowerRight' mangled-name='_ZN12CoveAndTiler14coveLowerRightEv' filepath='libnurbs/internals/coveandtiler.cc' line='381' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CoveAndTiler*' -->
          <parameter type-id='type-id-198' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void CoveAndTiler::coveLowerLeftNoGrid(TrimVertex*) -->
        <function-decl name='coveLowerLeftNoGrid' mangled-name='_ZN12CoveAndTiler19coveLowerLeftNoGridEP10TrimVertex' filepath='libnurbs/internals/coveandtiler.cc' line='336' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CoveAndTiler*' -->
          <parameter type-id='type-id-198' is-artificial='yes'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void CoveAndTiler::coveLowerLeft() -->
        <function-decl name='coveLowerLeft' mangled-name='_ZN12CoveAndTiler13coveLowerLeftEv' filepath='libnurbs/internals/coveandtiler.cc' line='320' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CoveAndTiler*' -->
          <parameter type-id='type-id-198' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void CoveAndTiler::coveUpperLeftNoGrid(TrimVertex*) -->
        <function-decl name='coveUpperLeftNoGrid' mangled-name='_ZN12CoveAndTiler19coveUpperLeftNoGridEP10TrimVertex' filepath='libnurbs/internals/coveandtiler.cc' line='275' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CoveAndTiler*' -->
          <parameter type-id='type-id-198' is-artificial='yes'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void CoveAndTiler::coveUpperLeft() -->
        <function-decl name='coveUpperLeft' mangled-name='_ZN12CoveAndTiler13coveUpperLeftEv' filepath='libnurbs/internals/coveandtiler.cc' line='259' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CoveAndTiler*' -->
          <parameter type-id='type-id-198' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void CoveAndTiler::coveUpperRightNoGrid(TrimVertex*) -->
        <function-decl name='coveUpperRightNoGrid' mangled-name='_ZN12CoveAndTiler20coveUpperRightNoGridEP10TrimVertex' filepath='libnurbs/internals/coveandtiler.cc' line='213' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CoveAndTiler*' -->
          <parameter type-id='type-id-198' is-artificial='yes'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void CoveAndTiler::coveUpperRight() -->
        <function-decl name='coveUpperRight' mangled-name='_ZN12CoveAndTiler14coveUpperRightEv' filepath='libnurbs/internals/coveandtiler.cc' line='197' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CoveAndTiler*' -->
          <parameter type-id='type-id-198' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void CoveAndTiler::tile(long int, long int, long int) -->
        <function-decl name='tile' mangled-name='_ZN12CoveAndTiler4tileElll' filepath='libnurbs/internals/coveandtiler.cc' line='181' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CoveAndTiler*' -->
          <parameter type-id='type-id-198' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void CoveAndTiler::coveAndTile() -->
        <function-decl name='coveAndTile' mangled-name='_ZN12CoveAndTiler11coveAndTileEv' filepath='libnurbs/internals/coveandtiler.cc' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'CoveAndTiler*' -->
          <parameter type-id='type-id-198' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct Gridline -->
    <class-decl name='Gridline' size-in-bits='320' is-struct='yes' visibility='default' filepath='libnurbs/internals/gridline.h' line='39' column='1' id='type-id-201'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- long int Gridline::v -->
        <var-decl name='v' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/gridline.h' line='40' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- REAL Gridline::vval -->
        <var-decl name='vval' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/gridline.h' line='41' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- long int Gridline::vindex -->
        <var-decl name='vindex' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/gridline.h' line='42' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- long int Gridline::ustart -->
        <var-decl name='ustart' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/gridline.h' line='43' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- long int Gridline::uend -->
        <var-decl name='uend' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/gridline.h' line='44' column='1'/>
      </data-member>
    </class-decl>
    <!-- class Jarcloc -->
    <class-decl name='Jarcloc' size-in-bits='192' visibility='default' filepath='libnurbs/internals/jarcloc.h' line='41' column='1' id='type-id-202'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- Arc_ptr Jarcloc::arc -->
        <var-decl name='arc' type-id='type-id-112' visibility='default' filepath='libnurbs/internals/jarcloc.h' line='43' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- TrimVertex* Jarcloc::p -->
        <var-decl name='p' type-id='type-id-127' visibility='default' filepath='libnurbs/internals/jarcloc.h' line='44' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='128'>
        <!-- TrimVertex* Jarcloc::plast -->
        <var-decl name='plast' type-id='type-id-127' visibility='default' filepath='libnurbs/internals/jarcloc.h' line='45' column='1'/>
      </data-member>
      <member-function access='private'>
        <!-- TrimVertex* Jarcloc::getnextpt() -->
        <function-decl name='getnextpt' mangled-name='_ZN7Jarcloc9getnextptEv' filepath='libnurbs/internals/jarcloc.h' line='48' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Jarcloc*' -->
          <parameter type-id='type-id-203' is-artificial='yes'/>
          <!-- TrimVertex* -->
          <return type-id='type-id-127'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- TrimVertex* Jarcloc::getprevpt() -->
        <function-decl name='getprevpt' mangled-name='_ZN7Jarcloc9getprevptEv' filepath='libnurbs/internals/jarcloc.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Jarcloc*' -->
          <parameter type-id='type-id-203' is-artificial='yes'/>
          <!-- TrimVertex* -->
          <return type-id='type-id-127'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Jarcloc::reverse() -->
        <function-decl name='reverse' mangled-name='_ZN7Jarcloc7reverseEv' filepath='libnurbs/internals/jarcloc.h' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Jarcloc*' -->
          <parameter type-id='type-id-203' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Jarcloc::init(Arc_ptr, long int, long int) -->
        <function-decl name='init' mangled-name='_ZN7Jarcloc4initEP3Arcll' filepath='libnurbs/internals/jarcloc.h' line='47' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Jarcloc*' -->
          <parameter type-id='type-id-203' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- class Trimline -->
    <class-decl name='Trimline' size-in-bits='832' visibility='default' filepath='libnurbs/internals/trimline.h' line='46' column='1' id='type-id-204'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- TrimVertex** Trimline::pts -->
        <var-decl name='pts' type-id='type-id-176' visibility='default' filepath='libnurbs/internals/trimline.h' line='48' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- long int Trimline::numverts -->
        <var-decl name='numverts' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/trimline.h' line='49' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='128'>
        <!-- long int Trimline::i -->
        <var-decl name='i' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/trimline.h' line='50' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='192'>
        <!-- long int Trimline::size -->
        <var-decl name='size' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/trimline.h' line='51' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='256'>
        <!-- Jarcloc Trimline::jarcl -->
        <var-decl name='jarcl' type-id='type-id-202' visibility='default' filepath='libnurbs/internals/trimline.h' line='52' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='448'>
        <!-- TrimVertex Trimline::t -->
        <var-decl name='t' type-id='type-id-128' visibility='default' filepath='libnurbs/internals/trimline.h' line='53' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='576'>
        <!-- TrimVertex Trimline::b -->
        <var-decl name='b' type-id='type-id-128' visibility='default' filepath='libnurbs/internals/trimline.h' line='53' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='704'>
        <!-- TrimVertex* Trimline::tinterp -->
        <var-decl name='tinterp' type-id='type-id-127' visibility='default' filepath='libnurbs/internals/trimline.h' line='54' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='768'>
        <!-- TrimVertex* Trimline::binterp -->
        <var-decl name='binterp' type-id='type-id-127' visibility='default' filepath='libnurbs/internals/trimline.h' line='54' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- Trimline::Trimline() -->
        <function-decl name='Trimline' filepath='libnurbs/internals/trimline.h' line='64' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Trimline*' -->
          <parameter type-id='type-id-205' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes'>
        <!-- Trimline::~Trimline(int) -->
        <function-decl name='~Trimline' filepath='libnurbs/internals/trimline.h' line='65' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Trimline*' -->
          <parameter type-id='type-id-205' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- TrimVertex* Trimline::prev() -->
        <function-decl name='prev' mangled-name='_ZN8Trimline4prevEv' filepath='libnurbs/internals/trimline.h' line='75' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Trimline*' -->
          <parameter type-id='type-id-205' is-artificial='yes'/>
          <!-- TrimVertex* -->
          <return type-id='type-id-127'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- TrimVertex* Trimline::next() -->
        <function-decl name='next' mangled-name='_ZN8Trimline4nextEv' filepath='libnurbs/internals/trimline.h' line='74' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Trimline*' -->
          <parameter type-id='type-id-205' is-artificial='yes'/>
          <!-- TrimVertex* -->
          <return type-id='type-id-127'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- TrimVertex* Trimline::last() -->
        <function-decl name='last' mangled-name='_ZN8Trimline4lastEv' filepath='libnurbs/internals/trimline.h' line='77' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Trimline*' -->
          <parameter type-id='type-id-205' is-artificial='yes'/>
          <!-- TrimVertex* -->
          <return type-id='type-id-127'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- TrimVertex* Trimline::first() -->
        <function-decl name='first' mangled-name='_ZN8Trimline5firstEv' filepath='libnurbs/internals/trimline.h' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Trimline*' -->
          <parameter type-id='type-id-205' is-artificial='yes'/>
          <!-- TrimVertex* -->
          <return type-id='type-id-127'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Trimline::reset() -->
        <function-decl name='reset' mangled-name='_ZN8Trimline5resetEv' filepath='libnurbs/internals/trimline.h' line='55' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Trimline*' -->
          <parameter type-id='type-id-205' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Trimline::swap() -->
        <function-decl name='swap' mangled-name='_ZN8Trimline4swapEv' filepath='libnurbs/internals/trimline.h' line='57' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Trimline*' -->
          <parameter type-id='type-id-205' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Trimline::append(TrimVertex*) -->
        <function-decl name='append' mangled-name='_ZN8Trimline6appendEP10TrimVertex' filepath='libnurbs/internals/trimline.h' line='58' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Trimline*' -->
          <parameter type-id='type-id-205' is-artificial='yes'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Trimline::getNextPt() -->
        <function-decl name='getNextPt' mangled-name='_ZN8Trimline9getNextPtEv' filepath='libnurbs/internals/trimline.h' line='68' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Trimline*' -->
          <parameter type-id='type-id-205' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Trimline::getPrevPt() -->
        <function-decl name='getPrevPt' mangled-name='_ZN8Trimline9getPrevPtEv' filepath='libnurbs/internals/trimline.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Trimline*' -->
          <parameter type-id='type-id-205' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Trimline::getNextPts(Arc_ptr) -->
        <function-decl name='getNextPts' mangled-name='_ZN8Trimline10getNextPtsEP3Arc' filepath='libnurbs/internals/trimline.h' line='72' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Trimline*' -->
          <parameter type-id='type-id-205' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Trimline::getPrevPts(Arc_ptr) -->
        <function-decl name='getPrevPts' mangled-name='_ZN8Trimline10getPrevPtsEP3Arc' filepath='libnurbs/internals/trimline.h' line='73' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Trimline*' -->
          <parameter type-id='type-id-205' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' static='yes'>
        <!-- long int Trimline::interpvert(TrimVertex*, TrimVertex*, REAL) -->
        <function-decl name='interpvert' mangled-name='_ZN8Trimline10interpvertEP10TrimVertexS1_S1_f' filepath='libnurbs/internals/trimline.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- long int -->
          <return type-id='type-id-38'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Trimline::getPrevPts(REAL, Backend&) -->
        <function-decl name='getPrevPts' mangled-name='_ZN8Trimline10getPrevPtsEfR7Backend' filepath='libnurbs/internals/trimline.h' line='71' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Trimline*' -->
          <parameter type-id='type-id-205' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'Backend&' -->
          <parameter type-id='type-id-167'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Trimline::getNextPts(REAL, Backend&) -->
        <function-decl name='getNextPts' mangled-name='_ZN8Trimline10getNextPtsEfR7Backend' filepath='libnurbs/internals/trimline.h' line='70' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Trimline*' -->
          <parameter type-id='type-id-205' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'Backend&' -->
          <parameter type-id='type-id-167'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Trimline::grow(long int) -->
        <function-decl name='grow' mangled-name='_ZN8Trimline4growEl' filepath='libnurbs/internals/trimline.h' line='56' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Trimline*' -->
          <parameter type-id='type-id-205' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Trimline::init(long int, Arc_ptr, long int) -->
        <function-decl name='init' mangled-name='_ZN8Trimline4initElP3Arcl' filepath='libnurbs/internals/trimline.h' line='67' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Trimline*' -->
          <parameter type-id='type-id-205' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Trimline::init(TrimVertex*) -->
        <function-decl name='init' mangled-name='_ZN8Trimline4initEP10TrimVertex' filepath='libnurbs/internals/trimline.h' line='66' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Trimline*' -->
          <parameter type-id='type-id-205' is-artificial='yes'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- class TrimRegion -->
    <class-decl name='TrimRegion' size-in-bits='2560' visibility='default' filepath='libnurbs/internals/trimregion.h' line='46' column='1' id='type-id-197'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- Trimline TrimRegion::left -->
        <var-decl name='left' type-id='type-id-204' visibility='default' filepath='libnurbs/internals/trimregion.h' line='49' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='832'>
        <!-- Trimline TrimRegion::right -->
        <var-decl name='right' type-id='type-id-204' visibility='default' filepath='libnurbs/internals/trimregion.h' line='50' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1664'>
        <!-- Gridline TrimRegion::top -->
        <var-decl name='top' type-id='type-id-201' visibility='default' filepath='libnurbs/internals/trimregion.h' line='51' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1984'>
        <!-- Gridline TrimRegion::bot -->
        <var-decl name='bot' type-id='type-id-201' visibility='default' filepath='libnurbs/internals/trimregion.h' line='52' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='2304'>
        <!-- Uarray TrimRegion::uarray -->
        <var-decl name='uarray' type-id='type-id-206' visibility='default' filepath='libnurbs/internals/trimregion.h' line='53' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='2496'>
        <!-- REAL TrimRegion::oneOverDu -->
        <var-decl name='oneOverDu' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/trimregion.h' line='65' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- TrimRegion::TrimRegion() -->
        <function-decl name='TrimRegion' filepath='libnurbs/internals/trimregion.h' line='48' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'TrimRegion*' -->
          <parameter type-id='type-id-207' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void TrimRegion::init(REAL) -->
        <function-decl name='init' mangled-name='_ZN10TrimRegion4initEf' filepath='libnurbs/internals/trimregion.h' line='55' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'TrimRegion*' -->
          <parameter type-id='type-id-207' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void TrimRegion::advance(REAL, REAL, REAL) -->
        <function-decl name='advance' mangled-name='_ZN10TrimRegion7advanceEfff' filepath='libnurbs/internals/trimregion.h' line='56' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'TrimRegion*' -->
          <parameter type-id='type-id-207' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void TrimRegion::setDu(REAL) -->
        <function-decl name='setDu' mangled-name='_ZN10TrimRegion5setDuEf' filepath='libnurbs/internals/trimregion.h' line='57' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'TrimRegion*' -->
          <parameter type-id='type-id-207' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void TrimRegion::getGridExtent(TrimVertex*, TrimVertex*) -->
        <function-decl name='getGridExtent' mangled-name='_ZN10TrimRegion13getGridExtentEP10TrimVertexS1_' filepath='libnurbs/internals/trimregion.h' line='61' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'TrimRegion*' -->
          <parameter type-id='type-id-207' is-artificial='yes'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void TrimRegion::getGridExtent() -->
        <function-decl name='getGridExtent' mangled-name='_ZN10TrimRegion13getGridExtentEv' filepath='libnurbs/internals/trimregion.h' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'TrimRegion*' -->
          <parameter type-id='type-id-207' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int TrimRegion::canTile() -->
        <function-decl name='canTile' mangled-name='_ZN10TrimRegion7canTileEv' filepath='libnurbs/internals/trimregion.h' line='63' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'TrimRegion*' -->
          <parameter type-id='type-id-207' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void TrimRegion::getPts(Backend&) -->
        <function-decl name='getPts' mangled-name='_ZN10TrimRegion6getPtsER7Backend' filepath='libnurbs/internals/trimregion.h' line='60' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'TrimRegion*' -->
          <parameter type-id='type-id-207' is-artificial='yes'/>
          <!-- parameter of type 'Backend&' -->
          <parameter type-id='type-id-167'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void TrimRegion::getPts(Arc_ptr) -->
        <function-decl name='getPts' mangled-name='_ZN10TrimRegion6getPtsEP3Arc' filepath='libnurbs/internals/trimregion.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'TrimRegion*' -->
          <parameter type-id='type-id-207' is-artificial='yes'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void TrimRegion::init(long int, Arc_ptr) -->
        <function-decl name='init' mangled-name='_ZN10TrimRegion4initElP3Arc' filepath='libnurbs/internals/trimregion.h' line='58' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'TrimRegion*' -->
          <parameter type-id='type-id-207' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- class Uarray -->
    <class-decl name='Uarray' size-in-bits='192' visibility='default' filepath='libnurbs/internals/uarray.h' line='44' column='1' id='type-id-206'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- long int Uarray::size -->
        <var-decl name='size' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/uarray.h' line='46' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- long int Uarray::ulines -->
        <var-decl name='ulines' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/uarray.h' line='47' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='128'>
        <!-- REAL* Uarray::uarray -->
        <var-decl name='uarray' type-id='type-id-22' visibility='default' filepath='libnurbs/internals/uarray.h' line='52' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- Uarray::Uarray() -->
        <function-decl name='Uarray' filepath='libnurbs/internals/uarray.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Uarray*' -->
          <parameter type-id='type-id-208' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes'>
        <!-- Uarray::~Uarray(int) -->
        <function-decl name='~Uarray' filepath='libnurbs/internals/uarray.h' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Uarray*' -->
          <parameter type-id='type-id-208' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- long int Uarray::init(REAL, Arc_ptr, Arc_ptr) -->
        <function-decl name='init' mangled-name='_ZN6Uarray4initEfP3ArcS1_' filepath='libnurbs/internals/uarray.h' line='51' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Uarray*' -->
          <parameter type-id='type-id-208' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- parameter of type 'typedef Arc_ptr' -->
          <parameter type-id='type-id-112'/>
          <!-- long int -->
          <return type-id='type-id-38'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- CoveAndTiler* -->
    <pointer-type-def type-id='type-id-188' size-in-bits='64' id='type-id-198'/>
    <!-- GridTrimVertex& -->
    <reference-type-def kind='lvalue' type-id='type-id-195' size-in-bits='64' id='type-id-200'/>
    <!-- GridVertex& -->
    <reference-type-def kind='lvalue' type-id='type-id-196' size-in-bits='64' id='type-id-199'/>
    <!-- Jarcloc* -->
    <pointer-type-def type-id='type-id-202' size-in-bits='64' id='type-id-203'/>
    <!-- TrimRegion* -->
    <pointer-type-def type-id='type-id-197' size-in-bits='64' id='type-id-207'/>
    <!-- Trimline* -->
    <pointer-type-def type-id='type-id-204' size-in-bits='64' id='type-id-205'/>
    <!-- Uarray* -->
    <pointer-type-def type-id='type-id-206' size-in-bits='64' id='type-id-208'/>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/curve.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- Quiltspec[2] -->
    <array-type-def dimensions='1' type-id='type-id-209' size-in-bits='640' id='type-id-164'>
      <!-- <anonymous range>[2] -->
      <subrange length='2' type-id='type-id-3' id='type-id-87'/>
    </array-type-def>
    <!-- REAL[120] -->
    <array-type-def dimensions='1' type-id='type-id-1' size-in-bits='3840' id='type-id-210'>
      <!-- <anonymous range>[120] -->
      <subrange length='120' type-id='type-id-3' id='type-id-211'/>
    </array-type-def>
    <!-- REAL[5] -->
    <array-type-def dimensions='1' type-id='type-id-1' size-in-bits='160' id='type-id-212'>
      <!-- <anonymous range>[5] -->
      <subrange length='5' type-id='type-id-3' id='type-id-213'/>
    </array-type-def>
    <!-- REAL[5][5] -->
    <array-type-def dimensions='2' type-id='type-id-1' size-in-bits='800' id='type-id-214'>
      <!-- <anonymous range>[5] -->
      <subrange length='5' type-id='type-id-3' id='type-id-213'/>
      <!-- <anonymous range>[5] -->
      <subrange length='5' type-id='type-id-3' id='type-id-213'/>
    </array-type-def>
    <!-- float[4] -->
    <array-type-def dimensions='1' type-id='type-id-15' size-in-bits='128' id='type-id-215'>
      <!-- <anonymous range>[4] -->
      <subrange length='4' type-id='type-id-3' id='type-id-61'/>
    </array-type-def>
    <!-- int[2] -->
    <array-type-def dimensions='1' type-id='type-id-8' size-in-bits='64' id='type-id-216'>
      <!-- <anonymous range>[2] -->
      <subrange length='2' type-id='type-id-3' id='type-id-87'/>
    </array-type-def>
    <!-- class Curve -->
    <class-decl name='Curve' size-in-bits='8128' visibility='default' filepath='libnurbs/internals/curve.h' line='46' column='1' id='type-id-217'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- Curve* Curve::next -->
        <var-decl name='next' type-id='type-id-145' visibility='default' filepath='libnurbs/internals/curve.h' line='51' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- Mapdesc* Curve::mapdesc -->
        <var-decl name='mapdesc' type-id='type-id-163' visibility='default' filepath='libnurbs/internals/curve.h' line='53' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='128'>
        <!-- int Curve::stride -->
        <var-decl name='stride' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/curve.h' line='54' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='160'>
        <!-- int Curve::order -->
        <var-decl name='order' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/curve.h' line='55' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='192'>
        <!-- int Curve::cullval -->
        <var-decl name='cullval' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/curve.h' line='56' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='224'>
        <!-- int Curve::needsSampling -->
        <var-decl name='needsSampling' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/curve.h' line='57' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='256'>
        <!-- REAL Curve::cpts[120] -->
        <var-decl name='cpts' type-id='type-id-210' visibility='default' filepath='libnurbs/internals/curve.h' line='58' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='4096'>
        <!-- REAL Curve::spts[120] -->
        <var-decl name='spts' type-id='type-id-210' visibility='default' filepath='libnurbs/internals/curve.h' line='59' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='7936'>
        <!-- REAL Curve::stepsize -->
        <var-decl name='stepsize' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/curve.h' line='60' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='7968'>
        <!-- REAL Curve::minstepsize -->
        <var-decl name='minstepsize' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/curve.h' line='61' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='8000'>
        <!-- REAL Curve::range[3] -->
        <var-decl name='range' type-id='type-id-89' visibility='default' filepath='libnurbs/internals/curve.h' line='62' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- Curve::Curve(Quilt*, REAL, REAL, Curve*) -->
        <function-decl name='Curve' filepath='libnurbs/internals/curve.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Curve*' -->
          <parameter type-id='type-id-145' is-artificial='yes'/>
          <!-- parameter of type 'Quilt*' -->
          <parameter type-id='type-id-148'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'Curve*' -->
          <parameter type-id='type-id-145'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' constructor='yes'>
        <!-- Curve::Curve(Curve&, REAL, Curve*) -->
        <function-decl name='Curve' filepath='libnurbs/internals/curve.h' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Curve*' -->
          <parameter type-id='type-id-145' is-artificial='yes'/>
          <!-- parameter of type 'Curve&' -->
          <parameter type-id='type-id-218'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'Curve*' -->
          <parameter type-id='type-id-145'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Curve::clamp() -->
        <function-decl name='clamp' mangled-name='_ZN5Curve5clampEv' filepath='libnurbs/internals/curve.h' line='64' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Curve*' -->
          <parameter type-id='type-id-145' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Curve::setstepsize(REAL) -->
        <function-decl name='setstepsize' mangled-name='_ZN5Curve11setstepsizeEf' filepath='libnurbs/internals/curve.h' line='65' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Curve*' -->
          <parameter type-id='type-id-145' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int Curve::needsSamplingSubdivision() -->
        <function-decl name='needsSamplingSubdivision' mangled-name='_ZN5Curve24needsSamplingSubdivisionEv' filepath='libnurbs/internals/curve.h' line='68' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Curve*' -->
          <parameter type-id='type-id-145' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int Curve::cullCheck() -->
        <function-decl name='cullCheck' mangled-name='_ZN5Curve9cullCheckEv' filepath='libnurbs/internals/curve.h' line='67' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Curve*' -->
          <parameter type-id='type-id-145' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Curve::getstepsize() -->
        <function-decl name='getstepsize' mangled-name='_ZN5Curve11getstepsizeEv' filepath='libnurbs/internals/curve.h' line='66' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Curve*' -->
          <parameter type-id='type-id-145' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct Knotvector -->
    <class-decl name='Knotvector' size-in-bits='256' is-struct='yes' visibility='default' filepath='libnurbs/internals/knotvector.h' line='41' column='1' id='type-id-219'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- long int Knotvector::order -->
        <var-decl name='order' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/knotvector.h' line='48' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- long int Knotvector::knotcount -->
        <var-decl name='knotcount' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/knotvector.h' line='49' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- long int Knotvector::stride -->
        <var-decl name='stride' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/knotvector.h' line='50' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- Knot* Knotvector::knotlist -->
        <var-decl name='knotlist' type-id='type-id-220' visibility='default' filepath='libnurbs/internals/knotvector.h' line='51' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- Knotvector::Knotvector() -->
        <function-decl name='Knotvector' filepath='libnurbs/internals/knotvector.h' line='42' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Knotvector*' -->
          <parameter type-id='type-id-83' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' destructor='yes'>
        <!-- Knotvector::~Knotvector(int) -->
        <function-decl name='~Knotvector' filepath='libnurbs/internals/knotvector.h' line='43' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Knotvector*' -->
          <parameter type-id='type-id-83' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Knotvector::validate() -->
        <function-decl name='validate' mangled-name='_ZN10Knotvector8validateEv' filepath='libnurbs/internals/knotvector.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Knotvector*' -->
          <parameter type-id='type-id-83' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Knotvector::show(const char*) -->
        <function-decl name='show' mangled-name='_ZN10Knotvector4showEPKc' filepath='libnurbs/internals/knotvector.h' line='46' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Knotvector*' -->
          <parameter type-id='type-id-83' is-artificial='yes'/>
          <!-- parameter of type 'const char*' -->
          <parameter type-id='type-id-84'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Knotvector::init(long int, long int, long int, float*) -->
        <function-decl name='init' mangled-name='_ZN10Knotvector4initElllPf' filepath='libnurbs/internals/knotvector.h' line='44' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Knotvector*' -->
          <parameter type-id='type-id-83' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'float*' -->
          <parameter type-id='type-id-49'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- typedef REAL[5][5] Maxmatrix -->
    <typedef-decl name='Maxmatrix' type-id='type-id-214' filepath='libnurbs/internals/mapdesc.h' line='45' column='1' id='type-id-221'/>
    <!-- struct Mapdesc -->
    <class-decl name='Mapdesc' size-in-bits='3392' is-struct='yes' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='49' column='1' id='type-id-222'>
      <!-- class PooledObj -->
      <base-class access='public' layout-offset-in-bits='0' type-id='type-id-115'/>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- REAL Mapdesc::pixel_tolerance -->
        <var-decl name='pixel_tolerance' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='104' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- REAL Mapdesc::error_tolerance -->
        <var-decl name='error_tolerance' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='105' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- REAL Mapdesc::object_space_error_tolerance -->
        <var-decl name='object_space_error_tolerance' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='106' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- REAL Mapdesc::clampfactor -->
        <var-decl name='clampfactor' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='107' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- REAL Mapdesc::minsavings -->
        <var-decl name='minsavings' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='108' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='160'>
        <!-- REAL Mapdesc::maxrate -->
        <var-decl name='maxrate' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='109' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- REAL Mapdesc::maxsrate -->
        <var-decl name='maxsrate' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='110' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='224'>
        <!-- REAL Mapdesc::maxtrate -->
        <var-decl name='maxtrate' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='111' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- REAL Mapdesc::bboxsize[5] -->
        <var-decl name='bboxsize' type-id='type-id-212' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='112' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='448'>
        <!-- long int Mapdesc::type -->
        <var-decl name='type' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='115' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='512'>
        <!-- int Mapdesc::isrational -->
        <var-decl name='isrational' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='116' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='544'>
        <!-- int Mapdesc::ncoords -->
        <var-decl name='ncoords' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='117' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='576'>
        <!-- int Mapdesc::hcoords -->
        <var-decl name='hcoords' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='118' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='608'>
        <!-- int Mapdesc::inhcoords -->
        <var-decl name='inhcoords' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='119' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='640'>
        <!-- int Mapdesc::mask -->
        <var-decl name='mask' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='120' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='672'>
        <!-- Maxmatrix Mapdesc::bmat -->
        <var-decl name='bmat' type-id='type-id-221' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='121' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1472'>
        <!-- Maxmatrix Mapdesc::cmat -->
        <var-decl name='cmat' type-id='type-id-221' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='122' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='2272'>
        <!-- Maxmatrix Mapdesc::smat -->
        <var-decl name='smat' type-id='type-id-221' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='123' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='3072'>
        <!-- REAL Mapdesc::s_steps -->
        <var-decl name='s_steps' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='124' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='3104'>
        <!-- REAL Mapdesc::t_steps -->
        <var-decl name='t_steps' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='125' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='3136'>
        <!-- REAL Mapdesc::sampling_method -->
        <var-decl name='sampling_method' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='126' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='3168'>
        <!-- REAL Mapdesc::culling_method -->
        <var-decl name='culling_method' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='127' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='3200'>
        <!-- REAL Mapdesc::bbox_subdividing -->
        <var-decl name='bbox_subdividing' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='128' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='3264'>
        <!-- Mapdesc* Mapdesc::next -->
        <var-decl name='next' type-id='type-id-163' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='129' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='3328'>
        <!-- Backend& Mapdesc::backend -->
        <var-decl name='backend' type-id='type-id-167' visibility='default' filepath='libnurbs/internals/mapdesc.h' line='130' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- Mapdesc::Mapdesc(long int, int, int, Backend&) -->
        <function-decl name='Mapdesc' filepath='libnurbs/internals/mapdesc.h' line='53' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'Backend&' -->
          <parameter type-id='type-id-167'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Mapdesc::isParametricDistanceSampling() -->
        <function-decl name='isParametricDistanceSampling' mangled-name='_ZN7Mapdesc28isParametricDistanceSamplingEv' filepath='libnurbs/internals/mapdesc.h' line='61' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Mapdesc::isPathLengthSampling() -->
        <function-decl name='isPathLengthSampling' mangled-name='_ZN7Mapdesc20isPathLengthSamplingEv' filepath='libnurbs/internals/mapdesc.h' line='65' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Mapdesc::isSurfaceAreaSampling() -->
        <function-decl name='isSurfaceAreaSampling' mangled-name='_ZN7Mapdesc21isSurfaceAreaSamplingEv' filepath='libnurbs/internals/mapdesc.h' line='64' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Mapdesc::isObjectSpaceParaSampling() -->
        <function-decl name='isObjectSpaceParaSampling' mangled-name='_ZN7Mapdesc25isObjectSpaceParaSamplingEv' filepath='libnurbs/internals/mapdesc.h' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Mapdesc::isObjectSpacePathSampling() -->
        <function-decl name='isObjectSpacePathSampling' mangled-name='_ZN7Mapdesc25isObjectSpacePathSamplingEv' filepath='libnurbs/internals/mapdesc.h' line='63' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Mapdesc::isConstantSampling() -->
        <function-decl name='isConstantSampling' mangled-name='_ZN7Mapdesc18isConstantSamplingEv' filepath='libnurbs/internals/mapdesc.h' line='57' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Mapdesc::isDomainSampling() -->
        <function-decl name='isDomainSampling' mangled-name='_ZN7Mapdesc16isDomainSamplingEv' filepath='libnurbs/internals/mapdesc.h' line='58' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Mapdesc::isRangeSampling() -->
        <function-decl name='isRangeSampling' mangled-name='_ZN7Mapdesc15isRangeSamplingEv' filepath='libnurbs/internals/mapdesc.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Mapdesc::isCulling() -->
        <function-decl name='isCulling' mangled-name='_ZN7Mapdesc9isCullingEv' filepath='libnurbs/internals/mapdesc.h' line='66' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Mapdesc::xformCulling(REAL*, REAL*) -->
        <function-decl name='xformCulling' mangled-name='_ZN7Mapdesc12xformCullingEPfS0_' filepath='libnurbs/internals/mapdesc.h' line='143' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Mapdesc::setBboxsize(float*) -->
        <function-decl name='setBboxsize' mangled-name='_ZN7Mapdesc11setBboxsizeEPf' filepath='libnurbs/internals/mapdesc.h' line='97' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'float*' -->
          <parameter type-id='type-id-49'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' static='yes'>
        <!-- void Mapdesc::copy(long int, float*, long int, long int) -->
        <function-decl name='copy' mangled-name='_ZN7Mapdesc4copyEPA5_flPfll' filepath='libnurbs/internals/mapdesc.h' line='134' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- parameter of type 'REAL[5]*' -->
          <parameter type-id='type-id-223'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'float*' -->
          <parameter type-id='type-id-49'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Mapdesc::sumPt(REAL*, REAL*, REAL*, REAL, REAL) -->
        <function-decl name='sumPt' mangled-name='_ZN7Mapdesc5sumPtEPfS0_S0_ff' filepath='libnurbs/internals/mapdesc.h' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Mapdesc::xformRational(REAL[5]*, REAL*, REAL*) -->
        <function-decl name='xformRational' mangled-name='_ZN7Mapdesc13xformRationalEPA5_fPfS2_' filepath='libnurbs/internals/mapdesc.h' line='144' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL[5]*' -->
          <parameter type-id='type-id-223'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Mapdesc::xformNonrational(REAL[5]*, REAL*, REAL*) -->
        <function-decl name='xformNonrational' mangled-name='_ZN7Mapdesc16xformNonrationalEPA5_fPfS2_' filepath='libnurbs/internals/mapdesc.h' line='145' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL[5]*' -->
          <parameter type-id='type-id-223'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Mapdesc::xformMat(REAL[5]*, REAL*, int, int, REAL*, int) -->
        <function-decl name='xformMat' mangled-name='_ZN7Mapdesc8xformMatEPA5_fPfiiS2_i' filepath='libnurbs/internals/mapdesc.h' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL[5]*' -->
          <parameter type-id='type-id-223'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Mapdesc::xformCulling(REAL*, int, int, REAL*, int) -->
        <function-decl name='xformCulling' mangled-name='_ZN7Mapdesc12xformCullingEPfiiS0_i' filepath='libnurbs/internals/mapdesc.h' line='74' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Mapdesc::xformBounding(REAL*, int, int, REAL*, int) -->
        <function-decl name='xformBounding' mangled-name='_ZN7Mapdesc13xformBoundingEPfiiS0_i' filepath='libnurbs/internals/mapdesc.h' line='73' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Mapdesc::xformSampling(REAL*, int, int, REAL*, int) -->
        <function-decl name='xformSampling' mangled-name='_ZN7Mapdesc13xformSamplingEPfiiS0_i' filepath='libnurbs/internals/mapdesc.h' line='75' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Mapdesc::xformMat(REAL[5]*, REAL*, int, int, int, int, REAL*, int, int) -->
        <function-decl name='xformMat' mangled-name='_ZN7Mapdesc8xformMatEPA5_fPfiiiiS2_ii' filepath='libnurbs/internals/mapdesc.h' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL[5]*' -->
          <parameter type-id='type-id-223'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Mapdesc::xformBounding(REAL*, int, int, int, int, REAL*, int, int) -->
        <function-decl name='xformBounding' mangled-name='_ZN7Mapdesc13xformBoundingEPfiiiiS0_ii' filepath='libnurbs/internals/mapdesc.h' line='85' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Mapdesc::xformSampling(REAL*, int, int, int, int, REAL*, int, int) -->
        <function-decl name='xformSampling' mangled-name='_ZN7Mapdesc13xformSamplingEPfiiiiS0_ii' filepath='libnurbs/internals/mapdesc.h' line='87' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Mapdesc::xformCulling(REAL*, int, int, int, int, REAL*, int, int) -->
        <function-decl name='xformCulling' mangled-name='_ZN7Mapdesc12xformCullingEPfiiiiS0_ii' filepath='libnurbs/internals/mapdesc.h' line='86' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Mapdesc::project(REAL*, int, int, REAL*, int, int, int, int) -->
        <function-decl name='project' mangled-name='_ZN7Mapdesc7projectEPfiiS0_iiii' filepath='libnurbs/internals/mapdesc.h' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Mapdesc::project(REAL*, int, REAL*, int, int) -->
        <function-decl name='project' mangled-name='_ZN7Mapdesc7projectEPfiS0_ii' filepath='libnurbs/internals/mapdesc.h' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Mapdesc::bbox(REAL[5]*, REAL*, int, int, int, int) -->
        <function-decl name='bbox' mangled-name='_ZN7Mapdesc4bboxEPA5_fPfiiii' filepath='libnurbs/internals/mapdesc.h' line='132' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL[5]*' -->
          <parameter type-id='type-id-223'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Mapdesc::isProperty(long int) -->
        <function-decl name='isProperty' mangled-name='_ZN7Mapdesc10isPropertyEl' filepath='libnurbs/internals/mapdesc.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Mapdesc::setProperty(long int, REAL) -->
        <function-decl name='setProperty' mangled-name='_ZN7Mapdesc11setPropertyElf' filepath='libnurbs/internals/mapdesc.h' line='56' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- REAL Mapdesc::getProperty(long int) -->
        <function-decl name='getProperty' mangled-name='_ZN7Mapdesc11getPropertyEl' filepath='libnurbs/internals/mapdesc.h' line='55' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- typedef REAL -->
          <return type-id='type-id-1'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- unsigned int Mapdesc::clipbits(REAL*) -->
        <function-decl name='clipbits' mangled-name='_ZN7Mapdesc8clipbitsEPf' filepath='libnurbs/internals/mapdesc.h' line='146' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- unsigned int -->
          <return type-id='type-id-224'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Mapdesc::cullCheck(REAL*, int, int) -->
        <function-decl name='cullCheck' mangled-name='_ZN7Mapdesc9cullCheckEPfii' filepath='libnurbs/internals/mapdesc.h' line='72' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Mapdesc::cullCheck(REAL*, int, int, int, int) -->
        <function-decl name='cullCheck' mangled-name='_ZN7Mapdesc9cullCheckEPfiiii' filepath='libnurbs/internals/mapdesc.h' line='84' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Mapdesc::xformAndCullCheck(REAL*, int, int, int, int) -->
        <function-decl name='xformAndCullCheck' mangled-name='_ZN7Mapdesc17xformAndCullCheckEPfiiii' filepath='libnurbs/internals/mapdesc.h' line='94' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- REAL Mapdesc::calcVelocityNonrational(REAL*, int, int) -->
        <function-decl name='calcVelocityNonrational' mangled-name='_ZN7Mapdesc23calcVelocityNonrationalEPfii' filepath='libnurbs/internals/mapdesc.h' line='80' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- typedef REAL -->
          <return type-id='type-id-1'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- REAL Mapdesc::calcVelocityRational(REAL*, int, int) -->
        <function-decl name='calcVelocityRational' mangled-name='_ZN7Mapdesc20calcVelocityRationalEPfii' filepath='libnurbs/internals/mapdesc.h' line='79' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- typedef REAL -->
          <return type-id='type-id-1'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Mapdesc::bboxTooBig(REAL*, int, int, int, int, REAL[5]*) -->
        <function-decl name='bboxTooBig' mangled-name='_ZN7Mapdesc10bboxTooBigEPfiiiiPA5_f' filepath='libnurbs/internals/mapdesc.h' line='93' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'REAL[5]*' -->
          <parameter type-id='type-id-223'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Mapdesc::copyPt(REAL*, REAL*) -->
        <function-decl name='copyPt' mangled-name='_ZN7Mapdesc6copyPtEPfS0_' filepath='libnurbs/internals/mapdesc.h' line='140' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Mapdesc::subdivide(REAL*, REAL*, REAL, int, int, int, int) -->
        <function-decl name='subdivide' mangled-name='_ZN7Mapdesc9subdivideEPfS0_fiiii' filepath='libnurbs/internals/mapdesc.h' line='83' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Mapdesc::subdivide(REAL*, REAL*, REAL, int, int) -->
        <function-decl name='subdivide' mangled-name='_ZN7Mapdesc9subdivideEPfS0_fii' filepath='libnurbs/internals/mapdesc.h' line='71' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Mapdesc::surfbbox(REAL[5]*) -->
        <function-decl name='surfbbox' mangled-name='_ZN7Mapdesc8surfbboxEPA5_f' filepath='libnurbs/internals/mapdesc.h' line='91' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL[5]*' -->
          <parameter type-id='type-id-223'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Mapdesc::identify(REAL[5]*) -->
        <function-decl name='identify' mangled-name='_ZN7Mapdesc8identifyEPA5_f' filepath='libnurbs/internals/mapdesc.h' line='96' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL[5]*' -->
          <parameter type-id='type-id-223'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- REAL Mapdesc::calcPartialVelocity(REAL*, REAL*, int, int, int, int, int, int, REAL, REAL, int) -->
        <function-decl name='calcPartialVelocity' mangled-name='_ZN7Mapdesc19calcPartialVelocityEPfS0_iiiiiiffi' filepath='libnurbs/internals/mapdesc.h' line='89' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- typedef REAL -->
          <return type-id='type-id-1'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- REAL Mapdesc::calcPartialVelocity(REAL*, int, int, int, REAL) -->
        <function-decl name='calcPartialVelocity' mangled-name='_ZN7Mapdesc19calcPartialVelocityEPfiiif' filepath='libnurbs/internals/mapdesc.h' line='77' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- typedef REAL -->
          <return type-id='type-id-1'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- long int Mapdesc::getType() -->
        <function-decl name='getType' mangled-name='_ZN7Mapdesc7getTypeEv' filepath='libnurbs/internals/mapdesc.h' line='68' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- long int -->
          <return type-id='type-id-38'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Mapdesc::isRational() -->
        <function-decl name='isRational' mangled-name='_ZN7Mapdesc10isRationalEv' filepath='libnurbs/internals/mapdesc.h' line='101' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Mapdesc::setCmat(float*, long int, long int) -->
        <function-decl name='setCmat' mangled-name='_ZN7Mapdesc7setCmatEPfll' filepath='libnurbs/internals/mapdesc.h' line='99' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'float*' -->
          <parameter type-id='type-id-49'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Mapdesc::setSmat(float*, long int, long int) -->
        <function-decl name='setSmat' mangled-name='_ZN7Mapdesc7setSmatEPfll' filepath='libnurbs/internals/mapdesc.h' line='100' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'float*' -->
          <parameter type-id='type-id-49'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Mapdesc::setBmat(float*, long int, long int) -->
        <function-decl name='setBmat' mangled-name='_ZN7Mapdesc7setBmatEPfll' filepath='libnurbs/internals/mapdesc.h' line='98' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- parameter of type 'float*' -->
          <parameter type-id='type-id-49'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Mapdesc::getNcoords() -->
        <function-decl name='getNcoords' mangled-name='_ZN7Mapdesc10getNcoordsEv' filepath='libnurbs/internals/mapdesc.h' line='102' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- int Mapdesc::isBboxSubdividing() -->
        <function-decl name='isBboxSubdividing' mangled-name='_ZN7Mapdesc17isBboxSubdividingEv' filepath='libnurbs/internals/mapdesc.h' line='67' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct Quiltspec -->
    <class-decl name='Quiltspec' size-in-bits='320' is-struct='yes' visibility='default' filepath='libnurbs/internals/quilt.h' line='51' column='1' id='type-id-209'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- int Quiltspec::stride -->
        <var-decl name='stride' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/quilt.h' line='52' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- int Quiltspec::width -->
        <var-decl name='width' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/quilt.h' line='53' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int Quiltspec::offset -->
        <var-decl name='offset' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/quilt.h' line='54' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- int Quiltspec::order -->
        <var-decl name='order' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/quilt.h' line='55' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- int Quiltspec::index -->
        <var-decl name='index' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/quilt.h' line='56' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='160'>
        <!-- int Quiltspec::bdry[2] -->
        <var-decl name='bdry' type-id='type-id-216' visibility='default' filepath='libnurbs/internals/quilt.h' line='57' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='224'>
        <!-- REAL Quiltspec::step_size -->
        <var-decl name='step_size' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/quilt.h' line='58' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- Knot* Quiltspec::breakpoints -->
        <var-decl name='breakpoints' type-id='type-id-220' visibility='default' filepath='libnurbs/internals/quilt.h' line='59' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef Quiltspec* Quiltspec_ptr -->
    <typedef-decl name='Quiltspec_ptr' type-id='type-id-225' filepath='libnurbs/internals/quilt.h' line='62' column='1' id='type-id-165'/>
    <!-- typedef REAL Knot -->
    <typedef-decl name='Knot' type-id='type-id-1' filepath='libnurbs/internals/types.h' line='45' column='1' id='type-id-226'/>
    <!-- Curve& -->
    <reference-type-def kind='lvalue' type-id='type-id-217' size-in-bits='64' id='type-id-218'/>
    <!-- Curve* -->
    <pointer-type-def type-id='type-id-217' size-in-bits='64' id='type-id-145'/>
    <!-- Flist& -->
    <reference-type-def kind='lvalue' type-id='type-id-150' size-in-bits='64' id='type-id-166'/>
    <!-- Knot* -->
    <pointer-type-def type-id='type-id-226' size-in-bits='64' id='type-id-220'/>
    <!-- Knotvector& -->
    <reference-type-def kind='lvalue' type-id='type-id-219' size-in-bits='64' id='type-id-168'/>
    <!-- Mapdesc* -->
    <pointer-type-def type-id='type-id-222' size-in-bits='64' id='type-id-163'/>
    <!-- Quiltspec* -->
    <pointer-type-def type-id='type-id-209' size-in-bits='64' id='type-id-225'/>
    <!-- REAL[5]* -->
    <pointer-type-def type-id='type-id-212' size-in-bits='64' id='type-id-223'/>
    <!-- float[4]* -->
    <pointer-type-def type-id='type-id-215' size-in-bits='64' id='type-id-227'/>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/curvelist.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- float[3] -->
    <array-type-def dimensions='1' type-id='type-id-15' size-in-bits='96' id='type-id-146'>
      <!-- <anonymous range>[3] -->
      <subrange length='3' type-id='type-id-3' id='type-id-90'/>
    </array-type-def>
    <!-- Curvelist* -->
    <pointer-type-def type-id='type-id-144' size-in-bits='64' id='type-id-147'/>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/displaylist.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- struct PFVS -->
    <class-decl name='PFVS' size-in-bits='128' is-struct='yes' naming-typedef-id='type-id-228' visibility='default' filepath='libnurbs/internals/displaylist.h' line='46' column='1' id='type-id-229'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- void (NurbsTessellator*, void*)* PFVS::__pfn -->
        <var-decl name='__pfn' type-id='type-id-230' visibility='default' filepath='libnurbs/internals/displaylist.h' line='46' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- long int PFVS::__delta -->
        <var-decl name='__delta' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/displaylist.h' line='46' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef PFVS PFVS -->
    <typedef-decl name='PFVS' type-id='type-id-229' filepath='libnurbs/internals/displaylist.h' line='46' column='1' id='type-id-228'/>
    <!-- struct Dlnode -->
    <class-decl name='Dlnode' size-in-bits='384' is-struct='yes' visibility='default' filepath='libnurbs/internals/displaylist.h' line='48' column='1' id='type-id-231'>
      <!-- class PooledObj -->
      <base-class access='public' layout-offset-in-bits='0' type-id='type-id-115'/>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- PFVS Dlnode::work -->
        <var-decl name='work' type-id='type-id-228' visibility='default' filepath='libnurbs/internals/displaylist.h' line='50' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- void* Dlnode::arg -->
        <var-decl name='arg' type-id='type-id-35' visibility='default' filepath='libnurbs/internals/displaylist.h' line='51' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- PFVS Dlnode::cleanup -->
        <var-decl name='cleanup' type-id='type-id-228' visibility='default' filepath='libnurbs/internals/displaylist.h' line='52' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- Dlnode* Dlnode::next -->
        <var-decl name='next' type-id='type-id-232' visibility='default' filepath='libnurbs/internals/displaylist.h' line='53' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- Dlnode::Dlnode(PFVS, void*, PFVS) -->
        <function-decl name='Dlnode' filepath='libnurbs/internals/displaylist.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Dlnode*' -->
          <parameter type-id='type-id-232' is-artificial='yes'/>
          <!-- parameter of type 'typedef PFVS' -->
          <parameter type-id='type-id-228'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-35'/>
          <!-- parameter of type 'typedef PFVS' -->
          <parameter type-id='type-id-228'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- class DisplayList -->
    <class-decl name='DisplayList' size-in-bits='2688' visibility='default' filepath='libnurbs/internals/displaylist.h' line='65' column='1' id='type-id-233'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- Dlnode* DisplayList::nodes -->
        <var-decl name='nodes' type-id='type-id-232' visibility='default' filepath='libnurbs/internals/displaylist.h' line='73' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- Pool DisplayList::dlnodePool -->
        <var-decl name='dlnodePool' type-id='type-id-67' visibility='default' filepath='libnurbs/internals/displaylist.h' line='74' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='2560'>
        <!-- Dlnode** DisplayList::lastNode -->
        <var-decl name='lastNode' type-id='type-id-234' visibility='default' filepath='libnurbs/internals/displaylist.h' line='75' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='2624'>
        <!-- NurbsTessellator* DisplayList::nt -->
        <var-decl name='nt' type-id='type-id-78' visibility='default' filepath='libnurbs/internals/displaylist.h' line='76' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- DisplayList::DisplayList(NurbsTessellator*) -->
        <function-decl name='DisplayList' filepath='libnurbs/internals/displaylist.h' line='67' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'DisplayList*' -->
          <parameter type-id='type-id-77' is-artificial='yes'/>
          <!-- parameter of type 'NurbsTessellator*' -->
          <parameter type-id='type-id-78'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes'>
        <!-- DisplayList::~DisplayList(int) -->
        <function-decl name='~DisplayList' filepath='libnurbs/internals/displaylist.h' line='68' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'DisplayList*' -->
          <parameter type-id='type-id-77' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void DisplayList::play() -->
        <function-decl name='play' mangled-name='_ZN11DisplayList4playEv' filepath='libnurbs/internals/displaylist.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'DisplayList*' -->
          <parameter type-id='type-id-77' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void DisplayList::endList() -->
        <function-decl name='endList' mangled-name='_ZN11DisplayList7endListEv' filepath='libnurbs/internals/displaylist.h' line='71' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'DisplayList*' -->
          <parameter type-id='type-id-77' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void DisplayList::append(PFVS, void*, PFVS) -->
        <function-decl name='append' mangled-name='_ZN11DisplayList6appendEM16NurbsTessellatorFvPvES1_S3_' filepath='libnurbs/internals/displaylist.h' line='70' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'DisplayList*' -->
          <parameter type-id='type-id-77' is-artificial='yes'/>
          <!-- parameter of type 'typedef PFVS' -->
          <parameter type-id='type-id-228'/>
          <!-- parameter of type 'void*' -->
          <parameter type-id='type-id-35'/>
          <!-- parameter of type 'typedef PFVS' -->
          <parameter type-id='type-id-228'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- DisplayList* -->
    <pointer-type-def type-id='type-id-233' size-in-bits='64' id='type-id-77'/>
    <!-- Dlnode* -->
    <pointer-type-def type-id='type-id-231' size-in-bits='64' id='type-id-232'/>
    <!-- Dlnode** -->
    <pointer-type-def type-id='type-id-232' size-in-bits='64' id='type-id-234'/>
    <!-- NurbsTessellator* -->
    <pointer-type-def type-id='type-id-40' size-in-bits='64' id='type-id-78'/>
    <!-- void (NurbsTessellator*, void*)* -->
    <pointer-type-def type-id='type-id-235' size-in-bits='64' id='type-id-230'/>
    <!-- void (NurbsTessellator*, void*) -->
    <function-type size-in-bits='64' id='type-id-235'>
      <!-- implicit parameter of type 'NurbsTessellator*' -->
      <parameter type-id='type-id-78' is-artificial='yes'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-35'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/flist.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- FlistSorter* -->
    <pointer-type-def type-id='type-id-151' size-in-bits='64' id='type-id-154'/>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/hull.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- class Hull -->
    <class-decl name='Hull' size-in-bits='4800' visibility='default' filepath='libnurbs/internals/hull.h' line='47' column='1' id='type-id-236'>
      <!-- class TrimRegion -->
      <base-class access='public' layout-offset-in-bits='192' is-virtual='yes' type-id='type-id-197'/>
      <member-type access='private'>
        <!-- struct Hull::Side -->
        <class-decl name='Side' size-in-bits='256' is-struct='yes' visibility='default' filepath='libnurbs/internals/hull.h' line='55' column='1' id='type-id-237'>
          <data-member access='public' layout-offset-in-bits='0'>
            <!-- Trimline* Hull::Side::left -->
            <var-decl name='left' type-id='type-id-205' visibility='default' filepath='libnurbs/internals/hull.h' line='56' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='64'>
            <!-- Gridline* Hull::Side::line -->
            <var-decl name='line' type-id='type-id-238' visibility='default' filepath='libnurbs/internals/hull.h' line='57' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='128'>
            <!-- Trimline* Hull::Side::right -->
            <var-decl name='right' type-id='type-id-205' visibility='default' filepath='libnurbs/internals/hull.h' line='58' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='192'>
            <!-- long int Hull::Side::index -->
            <var-decl name='index' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/hull.h' line='59' column='1'/>
          </data-member>
        </class-decl>
      </member-type>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- Hull::Side Hull::lower -->
        <var-decl name='lower' type-id='type-id-237' visibility='default' filepath='libnurbs/internals/hull.h' line='62' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='320'>
        <!-- Hull::Side Hull::upper -->
        <var-decl name='upper' type-id='type-id-237' visibility='default' filepath='libnurbs/internals/hull.h' line='63' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='576'>
        <!-- Trimline Hull::fakeleft -->
        <var-decl name='fakeleft' type-id='type-id-204' visibility='default' filepath='libnurbs/internals/hull.h' line='64' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='1408'>
        <!-- Trimline Hull::fakeright -->
        <var-decl name='fakeright' type-id='type-id-204' visibility='default' filepath='libnurbs/internals/hull.h' line='65' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- Hull::Hull(int, void**) -->
        <function-decl name='Hull' filepath='libnurbs/internals/hull.cc' line='51' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Hull*' -->
          <parameter type-id='type-id-239' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- artificial parameter of type 'void**' -->
          <parameter type-id='type-id-191' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes'>
        <!-- Hull::~Hull(int, void**) -->
        <function-decl name='~Hull' filepath='libnurbs/internals/hull.cc' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Hull*' -->
          <parameter type-id='type-id-239' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- artificial parameter of type 'void**' -->
          <parameter type-id='type-id-191' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- GridTrimVertex* Hull::nextupper(GridTrimVertex*) -->
        <function-decl name='nextupper' mangled-name='_ZN4Hull9nextupperEP14GridTrimVertex' filepath='libnurbs/internals/hull.cc' line='116' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Hull*' -->
          <parameter type-id='type-id-239' is-artificial='yes'/>
          <!-- parameter of type 'GridTrimVertex*' -->
          <parameter type-id='type-id-141'/>
          <!-- GridTrimVertex* -->
          <return type-id='type-id-141'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- GridTrimVertex* Hull::nextlower(GridTrimVertex*) -->
        <function-decl name='nextlower' mangled-name='_ZN4Hull9nextlowerEP14GridTrimVertex' filepath='libnurbs/internals/hull.cc' line='142' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Hull*' -->
          <parameter type-id='type-id-239' is-artificial='yes'/>
          <!-- parameter of type 'GridTrimVertex*' -->
          <parameter type-id='type-id-141'/>
          <!-- GridTrimVertex* -->
          <return type-id='type-id-141'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Hull::init() -->
        <function-decl name='init' mangled-name='_ZN4Hull4initEv' filepath='libnurbs/internals/hull.cc' line='63' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Hull*' -->
          <parameter type-id='type-id-239' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- Gridline* -->
    <pointer-type-def type-id='type-id-201' size-in-bits='64' id='type-id-238'/>
    <!-- Hull* -->
    <pointer-type-def type-id='type-id-236' size-in-bits='64' id='type-id-239'/>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/knotvector.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- Knotvector* -->
    <pointer-type-def type-id='type-id-219' size-in-bits='64' id='type-id-83'/>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/mapdesc.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/mapdescv.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/maplist.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- class Maplist -->
    <class-decl name='Maplist' size-in-bits='2688' visibility='default' filepath='libnurbs/internals/maplist.h' line='46' column='1' id='type-id-63'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- Pool Maplist::mapdescPool -->
        <var-decl name='mapdescPool' type-id='type-id-67' visibility='default' filepath='libnurbs/internals/maplist.h' line='58' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='2496'>
        <!-- Mapdesc* Maplist::maps -->
        <var-decl name='maps' type-id='type-id-163' visibility='default' filepath='libnurbs/internals/maplist.h' line='59' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='2560'>
        <!-- Mapdesc** Maplist::lastmap -->
        <var-decl name='lastmap' type-id='type-id-240' visibility='default' filepath='libnurbs/internals/maplist.h' line='60' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='2624'>
        <!-- Backend& Maplist::backend -->
        <var-decl name='backend' type-id='type-id-167' visibility='default' filepath='libnurbs/internals/maplist.h' line='61' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- Maplist::Maplist(Backend&) -->
        <function-decl name='Maplist' filepath='libnurbs/internals/maplist.h' line='48' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Maplist*' -->
          <parameter type-id='type-id-241' is-artificial='yes'/>
          <!-- parameter of type 'Backend&' -->
          <parameter type-id='type-id-167'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Mapdesc* Maplist::locate(long int) -->
        <function-decl name='locate' mangled-name='_ZN7Maplist6locateEl' filepath='libnurbs/internals/maplist.h' line='55' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Maplist*' -->
          <parameter type-id='type-id-241' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- Mapdesc* -->
          <return type-id='type-id-163'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Maplist::define(long int, int, int) -->
        <function-decl name='define' mangled-name='_ZN7Maplist6defineElii' filepath='libnurbs/internals/maplist.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Maplist*' -->
          <parameter type-id='type-id-241' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Mapdesc* Maplist::find(long int) -->
        <function-decl name='find' mangled-name='_ZN7Maplist4findEl' filepath='libnurbs/internals/maplist.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Maplist*' -->
          <parameter type-id='type-id-241' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- Mapdesc* -->
          <return type-id='type-id-163'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Maplist::freeMaps() -->
        <function-decl name='freeMaps' mangled-name='_ZN7Maplist8freeMapsEv' filepath='libnurbs/internals/maplist.h' line='65' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Maplist*' -->
          <parameter type-id='type-id-241' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Maplist::remove(Mapdesc*) -->
        <function-decl name='remove' mangled-name='_ZN7Maplist6removeEP7Mapdesc' filepath='libnurbs/internals/maplist.h' line='64' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Maplist*' -->
          <parameter type-id='type-id-241' is-artificial='yes'/>
          <!-- parameter of type 'Mapdesc*' -->
          <parameter type-id='type-id-163'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Maplist::add(long int, int, int) -->
        <function-decl name='add' mangled-name='_ZN7Maplist3addElii' filepath='libnurbs/internals/maplist.h' line='63' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Maplist*' -->
          <parameter type-id='type-id-241' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Maplist::initialize() -->
        <function-decl name='initialize' mangled-name='_ZN7Maplist10initializeEv' filepath='libnurbs/internals/maplist.h' line='53' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Maplist*' -->
          <parameter type-id='type-id-241' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- Mapdesc** -->
    <pointer-type-def type-id='type-id-163' size-in-bits='64' id='type-id-240'/>
    <!-- Maplist* -->
    <pointer-type-def type-id='type-id-63' size-in-bits='64' id='type-id-241'/>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/mesher.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- GridTrimVertex*[2] -->
    <array-type-def dimensions='1' type-id='type-id-141' size-in-bits='128' id='type-id-242'>
      <!-- <anonymous range>[2] -->
      <subrange length='2' type-id='type-id-3' id='type-id-87'/>
    </array-type-def>
    <!-- class Mesher -->
    <class-decl name='Mesher' size-in-bits='7680' visibility='default' filepath='libnurbs/internals/mesher.h' line='47' column='1' id='type-id-189'>
      <!-- class TrimRegion -->
      <base-class access='public' layout-offset-in-bits='192' is-virtual='yes' type-id='type-id-197'/>
      <!-- class Hull -->
      <base-class access='public' layout-offset-in-bits='0' type-id='type-id-236'/>
      <data-member access='private' static='yes'>
        <!-- static const float Mesher::ZERO -->
        <var-decl name='ZERO' type-id='type-id-243' mangled-name='_ZN6Mesher4ZEROE' visibility='default' filepath='libnurbs/internals/mesher.cc' line='53' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='2240'>
        <!-- Backend& Mesher::backend -->
        <var-decl name='backend' type-id='type-id-167' visibility='default' filepath='libnurbs/internals/mesher.h' line='56' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='2304'>
        <!-- Pool Mesher::p -->
        <var-decl name='p' type-id='type-id-67' visibility='default' filepath='libnurbs/internals/mesher.h' line='58' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='4800'>
        <!-- unsigned int Mesher::stacksize -->
        <var-decl name='stacksize' type-id='type-id-224' visibility='default' filepath='libnurbs/internals/mesher.h' line='59' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='4864'>
        <!-- GridTrimVertex** Mesher::vdata -->
        <var-decl name='vdata' type-id='type-id-244' visibility='default' filepath='libnurbs/internals/mesher.h' line='60' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='4928'>
        <!-- GridTrimVertex* Mesher::last[2] -->
        <var-decl name='last' type-id='type-id-242' visibility='default' filepath='libnurbs/internals/mesher.h' line='61' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='5056'>
        <!-- int Mesher::itop -->
        <var-decl name='itop' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/mesher.h' line='62' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='5088'>
        <!-- int Mesher::lastedge -->
        <var-decl name='lastedge' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/mesher.h' line='63' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- Mesher::Mesher(int, void**, Backend&) -->
        <function-decl name='Mesher' filepath='libnurbs/internals/mesher.cc' line='55' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mesher*' -->
          <parameter type-id='type-id-245' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- artificial parameter of type 'void**' -->
          <parameter type-id='type-id-191' is-artificial='yes'/>
          <!-- parameter of type 'Backend&' -->
          <parameter type-id='type-id-167'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes'>
        <!-- Mesher::~Mesher(int, void**) -->
        <function-decl name='~Mesher' filepath='libnurbs/internals/mesher.cc' line='67' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mesher*' -->
          <parameter type-id='type-id-245' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- artificial parameter of type 'void**' -->
          <parameter type-id='type-id-191' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int Mesher::equal(int, int) -->
        <function-decl name='equal' mangled-name='_ZN6Mesher5equalEii' filepath='libnurbs/internals/mesher.cc' line='240' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mesher*' -->
          <parameter type-id='type-id-245' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Mesher::swapMesh() -->
        <function-decl name='swapMesh' mangled-name='_ZN6Mesher8swapMeshEv' filepath='libnurbs/internals/mesher.cc' line='108' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mesher*' -->
          <parameter type-id='type-id-245' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Mesher::copy(int, int) -->
        <function-decl name='copy' mangled-name='_ZN6Mesher4copyEii' filepath='libnurbs/internals/mesher.cc' line='246' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mesher*' -->
          <parameter type-id='type-id-245' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Mesher::closeMesh() -->
        <function-decl name='closeMesh' mangled-name='_ZN6Mesher9closeMeshEv' filepath='libnurbs/internals/mesher.cc' line='102' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mesher*' -->
          <parameter type-id='type-id-245' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Mesher::openMesh() -->
        <function-decl name='openMesh' mangled-name='_ZN6Mesher8openMeshEv' filepath='libnurbs/internals/mesher.cc' line='96' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mesher*' -->
          <parameter type-id='type-id-245' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Mesher::move(int, int) -->
        <function-decl name='move' mangled-name='_ZN6Mesher4moveEii' filepath='libnurbs/internals/mesher.cc' line='252' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mesher*' -->
          <parameter type-id='type-id-245' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int Mesher::isCw(int) -->
        <function-decl name='isCw' mangled-name='_ZN6Mesher4isCwEi' filepath='libnurbs/internals/mesher.cc' line='233' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mesher*' -->
          <parameter type-id='type-id-245' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int Mesher::isCcw(int) -->
        <function-decl name='isCcw' mangled-name='_ZN6Mesher5isCcwEi' filepath='libnurbs/internals/mesher.cc' line='226' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mesher*' -->
          <parameter type-id='type-id-245' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Mesher::push(GridTrimVertex*) -->
        <function-decl name='push' mangled-name='_ZN6Mesher4pushEP14GridTrimVertex' filepath='libnurbs/internals/mesher.cc' line='84' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mesher*' -->
          <parameter type-id='type-id-245' is-artificial='yes'/>
          <!-- parameter of type 'GridTrimVertex*' -->
          <parameter type-id='type-id-141'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Mesher::clearStack() -->
        <function-decl name='clearStack' mangled-name='_ZN6Mesher10clearStackEv' filepath='libnurbs/internals/mesher.cc' line='114' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mesher*' -->
          <parameter type-id='type-id-245' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Mesher::init(unsigned int) -->
        <function-decl name='init' mangled-name='_ZN6Mesher4initEj' filepath='libnurbs/internals/mesher.cc' line='73' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mesher*' -->
          <parameter type-id='type-id-245' is-artificial='yes'/>
          <!-- parameter of type 'unsigned int' -->
          <parameter type-id='type-id-224'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Mesher::output(int) -->
        <function-decl name='output' mangled-name='_ZN6Mesher6outputEi' filepath='libnurbs/internals/mesher.cc' line='258' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mesher*' -->
          <parameter type-id='type-id-245' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Mesher::addLast() -->
        <function-decl name='addLast' mangled-name='_ZN6Mesher7addLastEv' filepath='libnurbs/internals/mesher.cc' line='277' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mesher*' -->
          <parameter type-id='type-id-245' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Mesher::addLower() -->
        <function-decl name='addLower' mangled-name='_ZN6Mesher8addLowerEv' filepath='libnurbs/internals/mesher.cc' line='415' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mesher*' -->
          <parameter type-id='type-id-245' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Mesher::finishLower(GridTrimVertex*) -->
        <function-decl name='finishLower' mangled-name='_ZN6Mesher11finishLowerEP14GridTrimVertex' filepath='libnurbs/internals/mesher.cc' line='121' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mesher*' -->
          <parameter type-id='type-id-245' is-artificial='yes'/>
          <!-- parameter of type 'GridTrimVertex*' -->
          <parameter type-id='type-id-141'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Mesher::addUpper() -->
        <function-decl name='addUpper' mangled-name='_ZN6Mesher8addUpperEv' filepath='libnurbs/internals/mesher.cc' line='341' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mesher*' -->
          <parameter type-id='type-id-245' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Mesher::finishUpper(GridTrimVertex*) -->
        <function-decl name='finishUpper' mangled-name='_ZN6Mesher11finishUpperEP14GridTrimVertex' filepath='libnurbs/internals/mesher.cc' line='131' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mesher*' -->
          <parameter type-id='type-id-245' is-artificial='yes'/>
          <!-- parameter of type 'GridTrimVertex*' -->
          <parameter type-id='type-id-141'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Mesher::mesh() -->
        <function-decl name='mesh' mangled-name='_ZN6Mesher4meshEv' filepath='libnurbs/internals/mesher.cc' line='141' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Mesher*' -->
          <parameter type-id='type-id-245' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- GridTrimVertex** -->
    <pointer-type-def type-id='type-id-141' size-in-bits='64' id='type-id-244'/>
    <!-- Mesher* -->
    <pointer-type-def type-id='type-id-189' size-in-bits='64' id='type-id-245'/>
    <!-- const float -->
    <qualified-type-def type-id='type-id-15' const='yes' id='type-id-243'/>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/monoTriangulationBackend.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- Real[2] -->
    <array-type-def dimensions='1' type-id='type-id-246' size-in-bits='64' id='type-id-247'>
      <!-- <anonymous range>[2] -->
      <subrange length='2' type-id='type-id-3' id='type-id-87'/>
    </array-type-def>
    <!-- typedef float Real -->
    <typedef-decl name='Real' type-id='type-id-15' filepath='libnurbs/nurbtess/definitions.h' line='36' column='1' id='type-id-246'/>
    <!-- typedef int Int -->
    <typedef-decl name='Int' type-id='type-id-8' filepath='libnurbs/nurbtess/definitions.h' line='37' column='1' id='type-id-248'/>
    <!-- typedef Real[2] Real2 -->
    <typedef-decl name='Real2' type-id='type-id-247' filepath='libnurbs/nurbtess/definitions.h' line='38' column='1' id='type-id-249'/>
    <!-- class reflexChain -->
    <class-decl name='reflexChain' size-in-bits='192' visibility='default' filepath='libnurbs/nurbtess/monoTriangulation.h' line='43' column='1' id='type-id-250'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- Real2* reflexChain::queue -->
        <var-decl name='queue' type-id='type-id-251' visibility='default' filepath='libnurbs/nurbtess/monoTriangulation.h' line='44' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- Int reflexChain::isIncreasing -->
        <var-decl name='isIncreasing' type-id='type-id-248' visibility='default' filepath='libnurbs/nurbtess/monoTriangulation.h' line='50' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='96'>
        <!-- Int reflexChain::index_queue -->
        <var-decl name='index_queue' type-id='type-id-248' visibility='default' filepath='libnurbs/nurbtess/monoTriangulation.h' line='51' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='128'>
        <!-- Int reflexChain::size_queue -->
        <var-decl name='size_queue' type-id='type-id-248' visibility='default' filepath='libnurbs/nurbtess/monoTriangulation.h' line='52' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- reflexChain::reflexChain(Int, Int) -->
        <function-decl name='reflexChain' filepath='libnurbs/nurbtess/monoTriangulation.h' line='55' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'reflexChain*' -->
          <parameter type-id='type-id-252' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes'>
        <!-- reflexChain::~reflexChain(int) -->
        <function-decl name='~reflexChain' filepath='libnurbs/nurbtess/monoTriangulation.h' line='56' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'reflexChain*' -->
          <parameter type-id='type-id-252' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void reflexChain::processNewVertex(Real*, Backend*) -->
        <function-decl name='processNewVertex' mangled-name='_ZN11reflexChain16processNewVertexEPfP7Backend' filepath='libnurbs/nurbtess/monoTriangulation.h' line='64' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'reflexChain*' -->
          <parameter type-id='type-id-252' is-artificial='yes'/>
          <!-- parameter of type 'Real*' -->
          <parameter type-id='type-id-253'/>
          <!-- parameter of type 'Backend*' -->
          <parameter type-id='type-id-139'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void reflexChain::outputFan(Real*, Backend*) -->
        <function-decl name='outputFan' mangled-name='_ZN11reflexChain9outputFanEPfP7Backend' filepath='libnurbs/nurbtess/monoTriangulation.h' line='65' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'reflexChain*' -->
          <parameter type-id='type-id-252' is-artificial='yes'/>
          <!-- parameter of type 'Real*' -->
          <parameter type-id='type-id-253'/>
          <!-- parameter of type 'Backend*' -->
          <parameter type-id='type-id-139'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void reflexChain::print() -->
        <function-decl name='print' mangled-name='_ZN11reflexChain5printEv' filepath='libnurbs/nurbtess/monoTriangulation.h' line='67' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'reflexChain*' -->
          <parameter type-id='type-id-252' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void reflexChain::insert(Real, Real) -->
        <function-decl name='insert' mangled-name='_ZN11reflexChain6insertEff' filepath='libnurbs/nurbtess/monoTriangulation.h' line='58' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'reflexChain*' -->
          <parameter type-id='type-id-252' is-artificial='yes'/>
          <!-- parameter of type 'typedef Real' -->
          <parameter type-id='type-id-246'/>
          <!-- parameter of type 'typedef Real' -->
          <parameter type-id='type-id-246'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void reflexChain::insert(Real*) -->
        <function-decl name='insert' mangled-name='_ZN11reflexChain6insertEPf' filepath='libnurbs/nurbtess/monoTriangulation.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'reflexChain*' -->
          <parameter type-id='type-id-252' is-artificial='yes'/>
          <!-- parameter of type 'Real*' -->
          <parameter type-id='type-id-253'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void reflexChain::outputFan(Real*, primStream*) -->
        <function-decl name='outputFan' mangled-name='_ZN11reflexChain9outputFanEPfP10primStream' filepath='libnurbs/nurbtess/monoTriangulation.h' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'reflexChain*' -->
          <parameter type-id='type-id-252' is-artificial='yes'/>
          <!-- parameter of type 'Real*' -->
          <parameter type-id='type-id-253'/>
          <!-- parameter of type 'primStream*' -->
          <parameter type-id='type-id-194'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void reflexChain::processNewVertex(Real*, primStream*) -->
        <function-decl name='processNewVertex' mangled-name='_ZN11reflexChain16processNewVertexEPfP10primStream' filepath='libnurbs/nurbtess/monoTriangulation.h' line='61' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'reflexChain*' -->
          <parameter type-id='type-id-252' is-artificial='yes'/>
          <!-- parameter of type 'Real*' -->
          <parameter type-id='type-id-253'/>
          <!-- parameter of type 'primStream*' -->
          <parameter type-id='type-id-194'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- class vertexArray -->
    <class-decl name='vertexArray' size-in-bits='128' visibility='default' filepath='libnurbs/nurbtess/monoTriangulation.h' line='77' column='1' id='type-id-254'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- Real** vertexArray::array -->
        <var-decl name='array' type-id='type-id-255' visibility='default' filepath='libnurbs/nurbtess/monoTriangulation.h' line='78' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- Int vertexArray::index -->
        <var-decl name='index' type-id='type-id-248' visibility='default' filepath='libnurbs/nurbtess/monoTriangulation.h' line='79' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='96'>
        <!-- Int vertexArray::size -->
        <var-decl name='size' type-id='type-id-248' visibility='default' filepath='libnurbs/nurbtess/monoTriangulation.h' line='80' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- vertexArray::vertexArray(Int) -->
        <function-decl name='vertexArray' filepath='libnurbs/nurbtess/monoTriangulation.h' line='82' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'vertexArray*' -->
          <parameter type-id='type-id-256' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' constructor='yes'>
        <!-- vertexArray::vertexArray(Real[2]*, Int) -->
        <function-decl name='vertexArray' filepath='libnurbs/nurbtess/monoTriangulation.h' line='83' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'vertexArray*' -->
          <parameter type-id='type-id-256' is-artificial='yes'/>
          <!-- parameter of type 'Real[2]*' -->
          <parameter type-id='type-id-257'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes'>
        <!-- vertexArray::~vertexArray(int) -->
        <function-decl name='~vertexArray' filepath='libnurbs/nurbtess/monoTriangulation.h' line='84' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'vertexArray*' -->
          <parameter type-id='type-id-256' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int vertexArray::getNumElements() -->
        <function-decl name='getNumElements' mangled-name='_ZN11vertexArray14getNumElementsEv' filepath='libnurbs/nurbtess/monoTriangulation.h' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'vertexArray*' -->
          <parameter type-id='type-id-256' is-artificial='yes'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Real** vertexArray::getArray() -->
        <function-decl name='getArray' mangled-name='_ZN11vertexArray8getArrayEv' filepath='libnurbs/nurbtess/monoTriangulation.h' line='87' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'vertexArray*' -->
          <parameter type-id='type-id-256' is-artificial='yes'/>
          <!-- Real** -->
          <return type-id='type-id-255'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Real* vertexArray::getVertex(Int) -->
        <function-decl name='getVertex' mangled-name='_ZN11vertexArray9getVertexEi' filepath='libnurbs/nurbtess/monoTriangulation.h' line='86' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'vertexArray*' -->
          <parameter type-id='type-id-256' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- Real* -->
          <return type-id='type-id-253'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int vertexArray::findIndexAbove(Real) -->
        <function-decl name='findIndexAbove' mangled-name='_ZN11vertexArray14findIndexAboveEf' filepath='libnurbs/nurbtess/monoTriangulation.h' line='89' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'vertexArray*' -->
          <parameter type-id='type-id-256' is-artificial='yes'/>
          <!-- parameter of type 'typedef Real' -->
          <parameter type-id='type-id-246'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int vertexArray::findIndexBelowGen(Real, Int, Int) -->
        <function-decl name='findIndexBelowGen' mangled-name='_ZN11vertexArray17findIndexBelowGenEfii' filepath='libnurbs/nurbtess/monoTriangulation.h' line='91' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'vertexArray*' -->
          <parameter type-id='type-id-256' is-artificial='yes'/>
          <!-- parameter of type 'typedef Real' -->
          <parameter type-id='type-id-246'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int vertexArray::findIndexStrictBelowGen(Real, Int, Int) -->
        <function-decl name='findIndexStrictBelowGen' mangled-name='_ZN11vertexArray23findIndexStrictBelowGenEfii' filepath='libnurbs/nurbtess/monoTriangulation.h' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'vertexArray*' -->
          <parameter type-id='type-id-256' is-artificial='yes'/>
          <!-- parameter of type 'typedef Real' -->
          <parameter type-id='type-id-246'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int vertexArray::findIndexFirstAboveEqualGen(Real, Int, Int) -->
        <function-decl name='findIndexFirstAboveEqualGen' mangled-name='_ZN11vertexArray27findIndexFirstAboveEqualGenEfii' filepath='libnurbs/nurbtess/monoTriangulation.h' line='93' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'vertexArray*' -->
          <parameter type-id='type-id-256' is-artificial='yes'/>
          <!-- parameter of type 'typedef Real' -->
          <parameter type-id='type-id-246'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int vertexArray::findIndexAboveGen(Real, Int, Int) -->
        <function-decl name='findIndexAboveGen' mangled-name='_ZN11vertexArray17findIndexAboveGenEfii' filepath='libnurbs/nurbtess/monoTriangulation.h' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'vertexArray*' -->
          <parameter type-id='type-id-256' is-artificial='yes'/>
          <!-- parameter of type 'typedef Real' -->
          <parameter type-id='type-id-246'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int vertexArray::findDecreaseChainFromEnd(Int, Int) -->
        <function-decl name='findDecreaseChainFromEnd' mangled-name='_ZN11vertexArray24findDecreaseChainFromEndEii' filepath='libnurbs/nurbtess/monoTriangulation.h' line='96' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'vertexArray*' -->
          <parameter type-id='type-id-256' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int vertexArray::skipEqualityFromStart(Real, Int, Int) -->
        <function-decl name='skipEqualityFromStart' mangled-name='_ZN11vertexArray21skipEqualityFromStartEfii' filepath='libnurbs/nurbtess/monoTriangulation.h' line='94' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'vertexArray*' -->
          <parameter type-id='type-id-256' is-artificial='yes'/>
          <!-- parameter of type 'typedef Real' -->
          <parameter type-id='type-id-246'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void vertexArray::print() -->
        <function-decl name='print' mangled-name='_ZN11vertexArray5printEv' filepath='libnurbs/nurbtess/monoTriangulation.h' line='97' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'vertexArray*' -->
          <parameter type-id='type-id-256' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void vertexArray::appendVertex(Real*) -->
        <function-decl name='appendVertex' mangled-name='_ZN11vertexArray12appendVertexEPf' filepath='libnurbs/nurbtess/monoTriangulation.h' line='85' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'vertexArray*' -->
          <parameter type-id='type-id-256' is-artificial='yes'/>
          <!-- parameter of type 'Real*' -->
          <parameter type-id='type-id-253'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- class primStream -->
    <class-decl name='primStream' size-in-bits='384' visibility='default' filepath='libnurbs/nurbtess/primitiveStream.h' line='44' column='1' id='type-id-258'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- Int* primStream::lengths -->
        <var-decl name='lengths' type-id='type-id-259' visibility='default' filepath='libnurbs/nurbtess/primitiveStream.h' line='45' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- Int* primStream::types -->
        <var-decl name='types' type-id='type-id-259' visibility='default' filepath='libnurbs/nurbtess/primitiveStream.h' line='46' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='128'>
        <!-- Real* primStream::vertices -->
        <var-decl name='vertices' type-id='type-id-253' visibility='default' filepath='libnurbs/nurbtess/primitiveStream.h' line='47' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='192'>
        <!-- Int primStream::index_lengths -->
        <var-decl name='index_lengths' type-id='type-id-248' visibility='default' filepath='libnurbs/nurbtess/primitiveStream.h' line='50' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='224'>
        <!-- Int primStream::size_lengths -->
        <var-decl name='size_lengths' type-id='type-id-248' visibility='default' filepath='libnurbs/nurbtess/primitiveStream.h' line='51' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='256'>
        <!-- Int primStream::index_vertices -->
        <var-decl name='index_vertices' type-id='type-id-248' visibility='default' filepath='libnurbs/nurbtess/primitiveStream.h' line='52' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='288'>
        <!-- Int primStream::size_vertices -->
        <var-decl name='size_vertices' type-id='type-id-248' visibility='default' filepath='libnurbs/nurbtess/primitiveStream.h' line='53' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='320'>
        <!-- Int primStream::counter -->
        <var-decl name='counter' type-id='type-id-248' visibility='default' filepath='libnurbs/nurbtess/primitiveStream.h' line='59' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- primStream::primStream(Int, Int) -->
        <function-decl name='primStream' filepath='libnurbs/nurbtess/primitiveStream.h' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'primStream*' -->
          <parameter type-id='type-id-194' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes'>
        <!-- primStream::~primStream(int) -->
        <function-decl name='~primStream' filepath='libnurbs/nurbtess/primitiveStream.h' line='63' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'primStream*' -->
          <parameter type-id='type-id-194' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Real* primStream::get_vertices() -->
        <function-decl name='get_vertices' mangled-name='_ZN10primStream12get_verticesEv' filepath='libnurbs/nurbtess/primitiveStream.h' line='77' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'primStream*' -->
          <parameter type-id='type-id-194' is-artificial='yes'/>
          <!-- Real* -->
          <return type-id='type-id-253'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int primStream::get_type(Int) -->
        <function-decl name='get_type' mangled-name='_ZN10primStream8get_typeEi' filepath='libnurbs/nurbtess/primitiveStream.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'primStream*' -->
          <parameter type-id='type-id-194' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int primStream::get_length(Int) -->
        <function-decl name='get_length' mangled-name='_ZN10primStream10get_lengthEi' filepath='libnurbs/nurbtess/primitiveStream.h' line='73' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'primStream*' -->
          <parameter type-id='type-id-194' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int primStream::get_n_prims() -->
        <function-decl name='get_n_prims' mangled-name='_ZN10primStream11get_n_primsEv' filepath='libnurbs/nurbtess/primitiveStream.h' line='65' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'primStream*' -->
          <parameter type-id='type-id-194' is-artificial='yes'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void primStream::insert(Real*) -->
        <function-decl name='insert' mangled-name='_ZN10primStream6insertEPf' filepath='libnurbs/nurbtess/primitiveStream.h' line='84' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'primStream*' -->
          <parameter type-id='type-id-194' is-artificial='yes'/>
          <!-- parameter of type 'Real*' -->
          <parameter type-id='type-id-253'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void primStream::triangle(Real*, Real*, Real*) -->
        <function-decl name='triangle' mangled-name='_ZN10primStream8triangleEPfS0_S0_' filepath='libnurbs/nurbtess/primitiveStream.h' line='89' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'primStream*' -->
          <parameter type-id='type-id-194' is-artificial='yes'/>
          <!-- parameter of type 'Real*' -->
          <parameter type-id='type-id-253'/>
          <!-- parameter of type 'Real*' -->
          <parameter type-id='type-id-253'/>
          <!-- parameter of type 'Real*' -->
          <parameter type-id='type-id-253'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int primStream::num_triangles() -->
        <function-decl name='num_triangles' mangled-name='_ZN10primStream13num_trianglesEv' filepath='libnurbs/nurbtess/primitiveStream.h' line='87' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'primStream*' -->
          <parameter type-id='type-id-194' is-artificial='yes'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void primStream::begin() -->
        <function-decl name='begin' mangled-name='_ZN10primStream5beginEv' filepath='libnurbs/nurbtess/primitiveStream.h' line='82' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'primStream*' -->
          <parameter type-id='type-id-194' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void primStream::draw() -->
        <function-decl name='draw' mangled-name='_ZN10primStream4drawEv' filepath='libnurbs/nurbtess/primitiveStream.h' line='98' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'primStream*' -->
          <parameter type-id='type-id-194' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void primStream::end(Int) -->
        <function-decl name='end' mangled-name='_ZN10primStream3endEi' filepath='libnurbs/nurbtess/primitiveStream.h' line='85' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'primStream*' -->
          <parameter type-id='type-id-194' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void primStream::insert(Real, Real) -->
        <function-decl name='insert' mangled-name='_ZN10primStream6insertEff' filepath='libnurbs/nurbtess/primitiveStream.h' line='83' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'primStream*' -->
          <parameter type-id='type-id-194' is-artificial='yes'/>
          <!-- parameter of type 'typedef Real' -->
          <parameter type-id='type-id-246'/>
          <!-- parameter of type 'typedef Real' -->
          <parameter type-id='type-id-246'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void primStream::print() -->
        <function-decl name='print' mangled-name='_ZN10primStream5printEv' filepath='libnurbs/nurbtess/primitiveStream.h' line='97' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'primStream*' -->
          <parameter type-id='type-id-194' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- Int* -->
    <pointer-type-def type-id='type-id-248' size-in-bits='64' id='type-id-259'/>
    <!-- Real* -->
    <pointer-type-def type-id='type-id-246' size-in-bits='64' id='type-id-253'/>
    <!-- Real** -->
    <pointer-type-def type-id='type-id-253' size-in-bits='64' id='type-id-255'/>
    <!-- Real2* -->
    <pointer-type-def type-id='type-id-249' size-in-bits='64' id='type-id-251'/>
    <!-- Real[2]* -->
    <pointer-type-def type-id='type-id-247' size-in-bits='64' id='type-id-257'/>
    <!-- primStream* -->
    <pointer-type-def type-id='type-id-258' size-in-bits='64' id='type-id-194'/>
    <!-- reflexChain* -->
    <pointer-type-def type-id='type-id-250' size-in-bits='64' id='type-id-252'/>
    <!-- vertexArray* -->
    <pointer-type-def type-id='type-id-254' size-in-bits='64' id='type-id-256'/>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/monotonizer.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/nurbsinterfac.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- enum Curvetype -->
    <enum-decl name='Curvetype' filepath='libnurbs/internals/reader.h' line='42' column='1' id='type-id-260'>
      <underlying-type type-id='type-id-12'/>
      <enumerator name='ct_nurbscurve' value='0'/>
      <enumerator name='ct_pwlcurve' value='1'/>
      <enumerator name='ct_none' value='2'/>
    </enum-decl>
    <!-- struct O_curve -->
    <class-decl name='O_curve' size-in-bits='384' is-struct='yes' visibility='default' filepath='libnurbs/internals/reader.h' line='55' column='1' id='type-id-261'>
      <!-- class PooledObj -->
      <base-class access='public' layout-offset-in-bits='0' type-id='type-id-115'/>
      <member-type access='public'>
        <!-- union {O_nurbscurve* o_nurbscurve; O_pwlcurve* o_pwlcurve;} -->
        <union-decl name='__anonymous_union__' size-in-bits='64' is-anonymous='yes' visibility='default' filepath='libnurbs/internals/reader.h' line='56' column='1' id='type-id-262'>
          <data-member access='public'>
            <!-- O_nurbscurve* o_nurbscurve -->
            <var-decl name='o_nurbscurve' type-id='type-id-86' visibility='default' filepath='libnurbs/internals/reader.h' line='57' column='1'/>
          </data-member>
          <data-member access='public'>
            <!-- O_pwlcurve* o_pwlcurve -->
            <var-decl name='o_pwlcurve' type-id='type-id-82' visibility='default' filepath='libnurbs/internals/reader.h' line='58' column='1'/>
          </data-member>
        </union-decl>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- union {O_nurbscurve* o_nurbscurve; O_pwlcurve* o_pwlcurve;} O_curve::curve -->
        <var-decl name='curve' type-id='type-id-262' visibility='default' filepath='libnurbs/internals/reader.h' line='59' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- Curvetype O_curve::curvetype -->
        <var-decl name='curvetype' type-id='type-id-260' visibility='default' filepath='libnurbs/internals/reader.h' line='60' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- O_curve* O_curve::next -->
        <var-decl name='next' type-id='type-id-76' visibility='default' filepath='libnurbs/internals/reader.h' line='61' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- O_surface* O_curve::owner -->
        <var-decl name='owner' type-id='type-id-74' visibility='default' filepath='libnurbs/internals/reader.h' line='62' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- int O_curve::used -->
        <var-decl name='used' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/reader.h' line='63' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='288'>
        <!-- int O_curve::save -->
        <var-decl name='save' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/reader.h' line='64' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- long int O_curve::nuid -->
        <var-decl name='nuid' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/reader.h' line='65' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- O_curve::O_curve() -->
        <function-decl name='O_curve' filepath='libnurbs/internals/reader.h' line='66' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'O_curve*' -->
          <parameter type-id='type-id-76' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct O_nurbscurve -->
    <class-decl name='O_nurbscurve' size-in-bits='384' is-struct='yes' visibility='default' filepath='libnurbs/internals/reader.h' line='70' column='1' id='type-id-263'>
      <!-- class PooledObj -->
      <base-class access='public' layout-offset-in-bits='0' type-id='type-id-115'/>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- Quilt* O_nurbscurve::bezier_curves -->
        <var-decl name='bezier_curves' type-id='type-id-148' visibility='default' filepath='libnurbs/internals/reader.h' line='71' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- long int O_nurbscurve::type -->
        <var-decl name='type' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/reader.h' line='72' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- REAL O_nurbscurve::tesselation -->
        <var-decl name='tesselation' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/reader.h' line='73' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='160'>
        <!-- int O_nurbscurve::method -->
        <var-decl name='method' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/reader.h' line='74' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- O_nurbscurve* O_nurbscurve::next -->
        <var-decl name='next' type-id='type-id-86' visibility='default' filepath='libnurbs/internals/reader.h' line='75' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- int O_nurbscurve::used -->
        <var-decl name='used' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/reader.h' line='76' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='288'>
        <!-- int O_nurbscurve::save -->
        <var-decl name='save' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/reader.h' line='77' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- O_curve* O_nurbscurve::owner -->
        <var-decl name='owner' type-id='type-id-76' visibility='default' filepath='libnurbs/internals/reader.h' line='78' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- O_nurbscurve::O_nurbscurve(long int) -->
        <function-decl name='O_nurbscurve' filepath='libnurbs/internals/reader.h' line='79' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'O_nurbscurve*' -->
          <parameter type-id='type-id-86' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct O_pwlcurve -->
    <class-decl name='O_pwlcurve' size-in-bits='320' is-struct='yes' visibility='default' filepath='libnurbs/internals/reader.h' line='83' column='1' id='type-id-264'>
      <!-- class PooledObj -->
      <base-class access='public' layout-offset-in-bits='0' type-id='type-id-115'/>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- TrimVertex* O_pwlcurve::pts -->
        <var-decl name='pts' type-id='type-id-127' visibility='default' filepath='libnurbs/internals/reader.h' line='85' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int O_pwlcurve::npts -->
        <var-decl name='npts' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/reader.h' line='86' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- O_pwlcurve* O_pwlcurve::next -->
        <var-decl name='next' type-id='type-id-82' visibility='default' filepath='libnurbs/internals/reader.h' line='87' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- int O_pwlcurve::used -->
        <var-decl name='used' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/reader.h' line='88' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='224'>
        <!-- int O_pwlcurve::save -->
        <var-decl name='save' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/reader.h' line='89' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- O_curve* O_pwlcurve::owner -->
        <var-decl name='owner' type-id='type-id-76' visibility='default' filepath='libnurbs/internals/reader.h' line='90' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- O_pwlcurve::O_pwlcurve(long int, long int, float*, long int, TrimVertex*) -->
        <function-decl name='O_pwlcurve' filepath='libnurbs/internals/reader.h' line='91' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'O_pwlcurve*' -->
          <parameter type-id='type-id-82' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'float*' -->
          <parameter type-id='type-id-49'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'TrimVertex*' -->
          <parameter type-id='type-id-127'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct O_trim -->
    <class-decl name='O_trim' size-in-bits='192' is-struct='yes' visibility='default' filepath='libnurbs/internals/reader.h' line='94' column='1' id='type-id-265'>
      <!-- class PooledObj -->
      <base-class access='public' layout-offset-in-bits='0' type-id='type-id-115'/>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- O_curve* O_trim::o_curve -->
        <var-decl name='o_curve' type-id='type-id-76' visibility='default' filepath='libnurbs/internals/reader.h' line='95' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- O_trim* O_trim::next -->
        <var-decl name='next' type-id='type-id-75' visibility='default' filepath='libnurbs/internals/reader.h' line='96' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- int O_trim::save -->
        <var-decl name='save' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/reader.h' line='97' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- O_trim::O_trim() -->
        <function-decl name='O_trim' filepath='libnurbs/internals/reader.h' line='98' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'O_trim*' -->
          <parameter type-id='type-id-75' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct O_nurbssurface -->
    <class-decl name='O_nurbssurface' size-in-bits='320' is-struct='yes' visibility='default' filepath='libnurbs/internals/reader.h' line='101' column='1' id='type-id-266'>
      <!-- class PooledObj -->
      <base-class access='public' layout-offset-in-bits='0' type-id='type-id-115'/>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- Quilt* O_nurbssurface::bezier_patches -->
        <var-decl name='bezier_patches' type-id='type-id-148' visibility='default' filepath='libnurbs/internals/reader.h' line='102' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- long int O_nurbssurface::type -->
        <var-decl name='type' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/reader.h' line='103' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- O_surface* O_nurbssurface::owner -->
        <var-decl name='owner' type-id='type-id-74' visibility='default' filepath='libnurbs/internals/reader.h' line='104' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- O_nurbssurface* O_nurbssurface::next -->
        <var-decl name='next' type-id='type-id-85' visibility='default' filepath='libnurbs/internals/reader.h' line='105' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- int O_nurbssurface::save -->
        <var-decl name='save' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/reader.h' line='106' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='288'>
        <!-- int O_nurbssurface::used -->
        <var-decl name='used' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/reader.h' line='107' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- O_nurbssurface::O_nurbssurface(long int) -->
        <function-decl name='O_nurbssurface' filepath='libnurbs/internals/reader.h' line='108' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'O_nurbssurface*' -->
          <parameter type-id='type-id-85' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct O_surface -->
    <class-decl name='O_surface' size-in-bits='256' is-struct='yes' visibility='default' filepath='libnurbs/internals/reader.h' line='112' column='1' id='type-id-267'>
      <!-- class PooledObj -->
      <base-class access='public' layout-offset-in-bits='0' type-id='type-id-115'/>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- O_nurbssurface* O_surface::o_nurbssurface -->
        <var-decl name='o_nurbssurface' type-id='type-id-85' visibility='default' filepath='libnurbs/internals/reader.h' line='113' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- O_trim* O_surface::o_trim -->
        <var-decl name='o_trim' type-id='type-id-75' visibility='default' filepath='libnurbs/internals/reader.h' line='114' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- int O_surface::save -->
        <var-decl name='save' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/reader.h' line='115' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- long int O_surface::nuid -->
        <var-decl name='nuid' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/reader.h' line='116' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- O_surface::O_surface() -->
        <function-decl name='O_surface' filepath='libnurbs/internals/reader.h' line='117' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'O_surface*' -->
          <parameter type-id='type-id-74' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct Property -->
    <class-decl name='Property' size-in-bits='192' is-struct='yes' visibility='default' filepath='libnurbs/internals/reader.h' line='120' column='1' id='type-id-268'>
      <!-- class PooledObj -->
      <base-class access='public' layout-offset-in-bits='0' type-id='type-id-115'/>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- long int Property::type -->
        <var-decl name='type' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/reader.h' line='121' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- long int Property::tag -->
        <var-decl name='tag' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/reader.h' line='122' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- REAL Property::value -->
        <var-decl name='value' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/reader.h' line='123' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='160'>
        <!-- int Property::save -->
        <var-decl name='save' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/reader.h' line='124' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- Property::Property(long int, long int, float) -->
        <function-decl name='Property' filepath='libnurbs/internals/reader.h' line='125' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Property*' -->
          <parameter type-id='type-id-81' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'float' -->
          <parameter type-id='type-id-15'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' constructor='yes'>
        <!-- Property::Property(long int, float) -->
        <function-decl name='Property' filepath='libnurbs/internals/reader.h' line='127' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Property*' -->
          <parameter type-id='type-id-81' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- parameter of type 'float' -->
          <parameter type-id='type-id-15'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- O_curve* -->
    <pointer-type-def type-id='type-id-261' size-in-bits='64' id='type-id-76'/>
    <!-- O_curve** -->
    <pointer-type-def type-id='type-id-76' size-in-bits='64' id='type-id-70'/>
    <!-- O_nurbscurve* -->
    <pointer-type-def type-id='type-id-263' size-in-bits='64' id='type-id-86'/>
    <!-- O_nurbscurve** -->
    <pointer-type-def type-id='type-id-86' size-in-bits='64' id='type-id-71'/>
    <!-- O_nurbssurface* -->
    <pointer-type-def type-id='type-id-266' size-in-bits='64' id='type-id-85'/>
    <!-- O_nurbssurface** -->
    <pointer-type-def type-id='type-id-85' size-in-bits='64' id='type-id-73'/>
    <!-- O_pwlcurve* -->
    <pointer-type-def type-id='type-id-264' size-in-bits='64' id='type-id-82'/>
    <!-- O_pwlcurve** -->
    <pointer-type-def type-id='type-id-82' size-in-bits='64' id='type-id-72'/>
    <!-- O_surface* -->
    <pointer-type-def type-id='type-id-267' size-in-bits='64' id='type-id-74'/>
    <!-- O_trim* -->
    <pointer-type-def type-id='type-id-265' size-in-bits='64' id='type-id-75'/>
    <!-- O_trim** -->
    <pointer-type-def type-id='type-id-75' size-in-bits='64' id='type-id-69'/>
    <!-- Property* -->
    <pointer-type-def type-id='type-id-268' size-in-bits='64' id='type-id-81'/>
    <!-- Renderhints* -->
    <pointer-type-def type-id='type-id-62' size-in-bits='64' id='type-id-169'/>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/patch.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- Patchspec[2] -->
    <array-type-def dimensions='1' type-id='type-id-269' size-in-bits='640' id='type-id-270'>
      <!-- <anonymous range>[2] -->
      <subrange length='2' type-id='type-id-3' id='type-id-87'/>
    </array-type-def>
    <!-- REAL[2880] -->
    <array-type-def dimensions='1' type-id='type-id-1' size-in-bits='92160' id='type-id-271'>
      <!-- <anonymous range>[2880] -->
      <subrange length='2880' type-id='type-id-3' id='type-id-272'/>
    </array-type-def>
    <!-- REAL[2][5] -->
    <array-type-def dimensions='2' type-id='type-id-1' size-in-bits='320' id='type-id-273'>
      <!-- <anonymous range>[2] -->
      <subrange length='2' type-id='type-id-3' id='type-id-87'/>
      <!-- <anonymous range>[5] -->
      <subrange length='5' type-id='type-id-3' id='type-id-213'/>
    </array-type-def>
    <!-- struct Pspec -->
    <class-decl name='Pspec' size-in-bits='256' is-struct='yes' visibility='default' filepath='libnurbs/internals/patch.h' line='46' column='1' id='type-id-274'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- REAL Pspec::range[3] -->
        <var-decl name='range' type-id='type-id-89' visibility='default' filepath='libnurbs/internals/patch.h' line='47' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- REAL Pspec::sidestep[2] -->
        <var-decl name='sidestep' type-id='type-id-88' visibility='default' filepath='libnurbs/internals/patch.h' line='48' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='160'>
        <!-- REAL Pspec::stepsize -->
        <var-decl name='stepsize' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/patch.h' line='49' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- REAL Pspec::minstepsize -->
        <var-decl name='minstepsize' type-id='type-id-1' visibility='default' filepath='libnurbs/internals/patch.h' line='50' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='224'>
        <!-- int Pspec::needsSubdivision -->
        <var-decl name='needsSubdivision' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/patch.h' line='51' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct Patchspec -->
    <class-decl name='Patchspec' size-in-bits='320' is-struct='yes' visibility='default' filepath='libnurbs/internals/patch.h' line='54' column='1' id='type-id-269'>
      <!-- struct Pspec -->
      <base-class access='public' layout-offset-in-bits='0' type-id='type-id-274'/>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- int Patchspec::order -->
        <var-decl name='order' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/patch.h' line='55' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='288'>
        <!-- int Patchspec::stride -->
        <var-decl name='stride' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/patch.h' line='56' column='1'/>
      </data-member>
      <member-function access='public'>
        <!-- void Patchspec::singleStep() -->
        <function-decl name='singleStep' mangled-name='_ZN9Patchspec10singleStepEv' filepath='libnurbs/internals/patch.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patchspec*' -->
          <parameter type-id='type-id-275' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Patchspec::clamp(REAL) -->
        <function-decl name='clamp' mangled-name='_ZN9Patchspec5clampEf' filepath='libnurbs/internals/patch.h' line='57' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patchspec*' -->
          <parameter type-id='type-id-275' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Patchspec::getstepsize(REAL) -->
        <function-decl name='getstepsize' mangled-name='_ZN9Patchspec11getstepsizeEf' filepath='libnurbs/internals/patch.h' line='58' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patchspec*' -->
          <parameter type-id='type-id-275' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- class Patch -->
    <class-decl name='Patch' size-in-bits='277696' visibility='default' filepath='libnurbs/internals/patch.h' line='62' column='1' id='type-id-276'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- Mapdesc* Patch::mapdesc -->
        <var-decl name='mapdesc' type-id='type-id-163' visibility='default' filepath='libnurbs/internals/patch.h' line='82' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- Patch* Patch::next -->
        <var-decl name='next' type-id='type-id-158' visibility='default' filepath='libnurbs/internals/patch.h' line='83' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='128'>
        <!-- int Patch::cullval -->
        <var-decl name='cullval' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/patch.h' line='84' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='160'>
        <!-- int Patch::notInBbox -->
        <var-decl name='notInBbox' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/patch.h' line='85' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='192'>
        <!-- int Patch::needsSampling -->
        <var-decl name='needsSampling' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/patch.h' line='86' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='224'>
        <!-- REAL Patch::cpts[2880] -->
        <var-decl name='cpts' type-id='type-id-271' visibility='default' filepath='libnurbs/internals/patch.h' line='87' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='92384'>
        <!-- REAL Patch::spts[2880] -->
        <var-decl name='spts' type-id='type-id-271' visibility='default' filepath='libnurbs/internals/patch.h' line='88' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='184544'>
        <!-- REAL Patch::bpts[2880] -->
        <var-decl name='bpts' type-id='type-id-271' visibility='default' filepath='libnurbs/internals/patch.h' line='89' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='276704'>
        <!-- Patchspec Patch::pspec[2] -->
        <var-decl name='pspec' type-id='type-id-270' visibility='default' filepath='libnurbs/internals/patch.h' line='90' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='277344'>
        <!-- REAL Patch::bb[2][5] -->
        <var-decl name='bb' type-id='type-id-273' visibility='default' filepath='libnurbs/internals/patch.h' line='92' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- Patch::Patch(Quilt*, REAL*, REAL*, Patch*) -->
        <function-decl name='Patch' filepath='libnurbs/internals/patch.h' line='67' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patch*' -->
          <parameter type-id='type-id-158' is-artificial='yes'/>
          <!-- parameter of type 'Quilt*' -->
          <parameter type-id='type-id-148'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'Patch*' -->
          <parameter type-id='type-id-158'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' constructor='yes'>
        <!-- Patch::Patch(Patch&, int, REAL, Patch*) -->
        <function-decl name='Patch' filepath='libnurbs/internals/patch.h' line='68' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patch*' -->
          <parameter type-id='type-id-158' is-artificial='yes'/>
          <!-- parameter of type 'Patch&' -->
          <parameter type-id='type-id-277'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'Patch*' -->
          <parameter type-id='type-id-158'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int Patch::needsSamplingSubdivision() -->
        <function-decl name='needsSamplingSubdivision' mangled-name='_ZN5Patch24needsSamplingSubdivisionEv' filepath='libnurbs/internals/patch.h' line='74' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patch*' -->
          <parameter type-id='type-id-158' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Patch::clamp() -->
        <function-decl name='clamp' mangled-name='_ZN5Patch5clampEv' filepath='libnurbs/internals/patch.h' line='70' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patch*' -->
          <parameter type-id='type-id-158' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int Patch::needsNonSamplingSubdivision() -->
        <function-decl name='needsNonSamplingSubdivision' mangled-name='_ZN5Patch27needsNonSamplingSubdivisionEv' filepath='libnurbs/internals/patch.h' line='75' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patch*' -->
          <parameter type-id='type-id-158' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int Patch::needsSubdivision(int) -->
        <function-decl name='needsSubdivision' mangled-name='_ZN5Patch16needsSubdivisionEi' filepath='libnurbs/internals/patch.h' line='73' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patch*' -->
          <parameter type-id='type-id-158' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int Patch::cullCheck() -->
        <function-decl name='cullCheck' mangled-name='_ZN5Patch9cullCheckEv' filepath='libnurbs/internals/patch.h' line='72' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patch*' -->
          <parameter type-id='type-id-158' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Patch::getstepsize() -->
        <function-decl name='getstepsize' mangled-name='_ZN5Patch11getstepsizeEv' filepath='libnurbs/internals/patch.h' line='71' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patch*' -->
          <parameter type-id='type-id-158' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Patch::bbox() -->
        <function-decl name='bbox' mangled-name='_ZN5Patch4bboxEv' filepath='libnurbs/internals/patch.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patch*' -->
          <parameter type-id='type-id-158' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Patch::checkBboxConstraint() -->
        <function-decl name='checkBboxConstraint' mangled-name='_ZN5Patch19checkBboxConstraintEv' filepath='libnurbs/internals/patch.h' line='91' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patch*' -->
          <parameter type-id='type-id-158' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int Patch::get_uorder() -->
        <function-decl name='get_uorder' mangled-name='_ZN5Patch10get_uorderEv' filepath='libnurbs/internals/patch.h' line='77' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patch*' -->
          <parameter type-id='type-id-158' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- int Patch::get_vorder() -->
        <function-decl name='get_vorder' mangled-name='_ZN5Patch10get_vorderEv' filepath='libnurbs/internals/patch.h' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Patch*' -->
          <parameter type-id='type-id-158' is-artificial='yes'/>
          <!-- int -->
          <return type-id='type-id-8'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- Patch& -->
    <reference-type-def kind='lvalue' type-id='type-id-276' size-in-bits='64' id='type-id-277'/>
    <!-- Patch* -->
    <pointer-type-def type-id='type-id-276' size-in-bits='64' id='type-id-158'/>
    <!-- Patchspec* -->
    <pointer-type-def type-id='type-id-269' size-in-bits='64' id='type-id-275'/>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/patchlist.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- Pspec[2] -->
    <array-type-def dimensions='1' type-id='type-id-274' size-in-bits='512' id='type-id-159'>
      <!-- <anonymous range>[2] -->
      <subrange length='2' type-id='type-id-3' id='type-id-87'/>
    </array-type-def>
    <!-- Patchlist* -->
    <pointer-type-def type-id='type-id-157' size-in-bits='64' id='type-id-160'/>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/quilt.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/slicer.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- class gridWrap -->
    <class-decl name='gridWrap' size-in-bits='384' visibility='default' filepath='libnurbs/nurbtess/gridWrap.h' line='42' column='1' id='type-id-278'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- Int gridWrap::n_ulines -->
        <var-decl name='n_ulines' type-id='type-id-248' visibility='default' filepath='libnurbs/nurbtess/gridWrap.h' line='43' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='32'>
        <!-- Int gridWrap::n_vlines -->
        <var-decl name='n_vlines' type-id='type-id-248' visibility='default' filepath='libnurbs/nurbtess/gridWrap.h' line='44' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- Real gridWrap::u_min -->
        <var-decl name='u_min' type-id='type-id-246' visibility='default' filepath='libnurbs/nurbtess/gridWrap.h' line='45' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='96'>
        <!-- Real gridWrap::u_max -->
        <var-decl name='u_max' type-id='type-id-246' visibility='default' filepath='libnurbs/nurbtess/gridWrap.h' line='45' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='128'>
        <!-- Real gridWrap::v_min -->
        <var-decl name='v_min' type-id='type-id-246' visibility='default' filepath='libnurbs/nurbtess/gridWrap.h' line='46' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='160'>
        <!-- Real gridWrap::v_max -->
        <var-decl name='v_max' type-id='type-id-246' visibility='default' filepath='libnurbs/nurbtess/gridWrap.h' line='46' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='192'>
        <!-- Real* gridWrap::u_values -->
        <var-decl name='u_values' type-id='type-id-253' visibility='default' filepath='libnurbs/nurbtess/gridWrap.h' line='52' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='256'>
        <!-- Real* gridWrap::v_values -->
        <var-decl name='v_values' type-id='type-id-253' visibility='default' filepath='libnurbs/nurbtess/gridWrap.h' line='53' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='320'>
        <!-- Int gridWrap::is_uniform -->
        <var-decl name='is_uniform' type-id='type-id-248' visibility='default' filepath='libnurbs/nurbtess/gridWrap.h' line='55' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- gridWrap::gridWrap(Int, Int, Real, Real, Real, Real) -->
        <function-decl name='gridWrap' filepath='libnurbs/nurbtess/gridWrap.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridWrap*' -->
          <parameter type-id='type-id-193' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- parameter of type 'typedef Real' -->
          <parameter type-id='type-id-246'/>
          <!-- parameter of type 'typedef Real' -->
          <parameter type-id='type-id-246'/>
          <!-- parameter of type 'typedef Real' -->
          <parameter type-id='type-id-246'/>
          <!-- parameter of type 'typedef Real' -->
          <parameter type-id='type-id-246'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' constructor='yes'>
        <!-- gridWrap::gridWrap(Int, Real*, Int, Real*) -->
        <function-decl name='gridWrap' filepath='libnurbs/nurbtess/gridWrap.h' line='65' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridWrap*' -->
          <parameter type-id='type-id-193' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- parameter of type 'Real*' -->
          <parameter type-id='type-id-253'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- parameter of type 'Real*' -->
          <parameter type-id='type-id-253'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes'>
        <!-- gridWrap::~gridWrap(int) -->
        <function-decl name='~gridWrap' filepath='libnurbs/nurbtess/gridWrap.h' line='68' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridWrap*' -->
          <parameter type-id='type-id-193' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int gridWrap::get_n_vlines() -->
        <function-decl name='get_n_vlines' mangled-name='_ZN8gridWrap12get_n_vlinesEv' filepath='libnurbs/nurbtess/gridWrap.h' line='72' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridWrap*' -->
          <parameter type-id='type-id-193' is-artificial='yes'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Real gridWrap::get_v_min() -->
        <function-decl name='get_v_min' mangled-name='_ZN8gridWrap9get_v_minEv' filepath='libnurbs/nurbtess/gridWrap.h' line='75' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridWrap*' -->
          <parameter type-id='type-id-193' is-artificial='yes'/>
          <!-- typedef Real -->
          <return type-id='type-id-246'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Real gridWrap::get_v_max() -->
        <function-decl name='get_v_max' mangled-name='_ZN8gridWrap9get_v_maxEv' filepath='libnurbs/nurbtess/gridWrap.h' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridWrap*' -->
          <parameter type-id='type-id-193' is-artificial='yes'/>
          <!-- typedef Real -->
          <return type-id='type-id-246'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int gridWrap::get_n_ulines() -->
        <function-decl name='get_n_ulines' mangled-name='_ZN8gridWrap12get_n_ulinesEv' filepath='libnurbs/nurbtess/gridWrap.h' line='71' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridWrap*' -->
          <parameter type-id='type-id-193' is-artificial='yes'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Real gridWrap::get_u_max() -->
        <function-decl name='get_u_max' mangled-name='_ZN8gridWrap9get_u_maxEv' filepath='libnurbs/nurbtess/gridWrap.h' line='74' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridWrap*' -->
          <parameter type-id='type-id-193' is-artificial='yes'/>
          <!-- typedef Real -->
          <return type-id='type-id-246'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Real gridWrap::get_u_min() -->
        <function-decl name='get_u_min' mangled-name='_ZN8gridWrap9get_u_minEv' filepath='libnurbs/nurbtess/gridWrap.h' line='73' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridWrap*' -->
          <parameter type-id='type-id-193' is-artificial='yes'/>
          <!-- typedef Real -->
          <return type-id='type-id-246'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Real gridWrap::get_u_value(Int) -->
        <function-decl name='get_u_value' mangled-name='_ZN8gridWrap11get_u_valueEi' filepath='libnurbs/nurbtess/gridWrap.h' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridWrap*' -->
          <parameter type-id='type-id-193' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- typedef Real -->
          <return type-id='type-id-246'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Real gridWrap::get_v_value(Int) -->
        <function-decl name='get_v_value' mangled-name='_ZN8gridWrap11get_v_valueEi' filepath='libnurbs/nurbtess/gridWrap.h' line='83' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridWrap*' -->
          <parameter type-id='type-id-193' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- typedef Real -->
          <return type-id='type-id-246'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void gridWrap::outputFanWithPoint(Int, Int, Int, Real*, primStream*) -->
        <function-decl name='outputFanWithPoint' mangled-name='_ZN8gridWrap18outputFanWithPointEiiiPfP10primStream' filepath='libnurbs/nurbtess/gridWrap.h' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridWrap*' -->
          <parameter type-id='type-id-193' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- parameter of type 'Real*' -->
          <parameter type-id='type-id-253'/>
          <!-- parameter of type 'primStream*' -->
          <parameter type-id='type-id-194'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void gridWrap::draw() -->
        <function-decl name='draw' mangled-name='_ZN8gridWrap4drawEv' filepath='libnurbs/nurbtess/gridWrap.h' line='91' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridWrap*' -->
          <parameter type-id='type-id-193' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void gridWrap::print() -->
        <function-decl name='print' mangled-name='_ZN8gridWrap5printEv' filepath='libnurbs/nurbtess/gridWrap.h' line='70' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridWrap*' -->
          <parameter type-id='type-id-193' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- class gridBoundaryChain -->
    <class-decl name='gridBoundaryChain' size-in-bits='320' visibility='default' filepath='libnurbs/nurbtess/gridWrap.h' line='96' column='1' id='type-id-279'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- gridWrap* gridBoundaryChain::grid -->
        <var-decl name='grid' type-id='type-id-193' visibility='default' filepath='libnurbs/nurbtess/gridWrap.h' line='97' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- Int gridBoundaryChain::firstVlineIndex -->
        <var-decl name='firstVlineIndex' type-id='type-id-248' visibility='default' filepath='libnurbs/nurbtess/gridWrap.h' line='98' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='96'>
        <!-- Int gridBoundaryChain::nVlines -->
        <var-decl name='nVlines' type-id='type-id-248' visibility='default' filepath='libnurbs/nurbtess/gridWrap.h' line='99' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='128'>
        <!-- Int* gridBoundaryChain::ulineIndices -->
        <var-decl name='ulineIndices' type-id='type-id-259' visibility='default' filepath='libnurbs/nurbtess/gridWrap.h' line='100' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='192'>
        <!-- Int* gridBoundaryChain::innerIndices -->
        <var-decl name='innerIndices' type-id='type-id-259' visibility='default' filepath='libnurbs/nurbtess/gridWrap.h' line='101' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='256'>
        <!-- Real2* gridBoundaryChain::vertices -->
        <var-decl name='vertices' type-id='type-id-251' visibility='default' filepath='libnurbs/nurbtess/gridWrap.h' line='105' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- gridBoundaryChain::gridBoundaryChain(gridWrap*, Int, Int, Int*, Int*) -->
        <function-decl name='gridBoundaryChain' filepath='libnurbs/nurbtess/gridWrap.h' line='108' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridBoundaryChain*' -->
          <parameter type-id='type-id-280' is-artificial='yes'/>
          <!-- parameter of type 'gridWrap*' -->
          <parameter type-id='type-id-193'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- parameter of type 'Int*' -->
          <parameter type-id='type-id-259'/>
          <!-- parameter of type 'Int*' -->
          <parameter type-id='type-id-259'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes'>
        <!-- gridBoundaryChain::~gridBoundaryChain(int) -->
        <function-decl name='~gridBoundaryChain' filepath='libnurbs/nurbtess/gridWrap.h' line='110' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridBoundaryChain*' -->
          <parameter type-id='type-id-280' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int gridBoundaryChain::getUlineIndex(Int) -->
        <function-decl name='getUlineIndex' mangled-name='_ZN17gridBoundaryChain13getUlineIndexEi' filepath='libnurbs/nurbtess/gridWrap.h' line='120' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridBoundaryChain*' -->
          <parameter type-id='type-id-280' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Real* gridBoundaryChain::get_vertex(Int) -->
        <function-decl name='get_vertex' mangled-name='_ZN17gridBoundaryChain10get_vertexEi' filepath='libnurbs/nurbtess/gridWrap.h' line='127' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridBoundaryChain*' -->
          <parameter type-id='type-id-280' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- Real* -->
          <return type-id='type-id-253'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Real gridBoundaryChain::get_v_value(Int) -->
        <function-decl name='get_v_value' mangled-name='_ZN17gridBoundaryChain11get_v_valueEi' filepath='libnurbs/nurbtess/gridWrap.h' line='122' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridBoundaryChain*' -->
          <parameter type-id='type-id-280' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- typedef Real -->
          <return type-id='type-id-246'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int gridBoundaryChain::lookfor(Real, Int, Int) -->
        <function-decl name='lookfor' mangled-name='_ZN17gridBoundaryChain7lookforEfii' filepath='libnurbs/nurbtess/gridWrap.h' line='132' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridBoundaryChain*' -->
          <parameter type-id='type-id-280' is-artificial='yes'/>
          <!-- parameter of type 'typedef Real' -->
          <parameter type-id='type-id-246'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void gridBoundaryChain::leftEndFan(Int, primStream*) -->
        <function-decl name='leftEndFan' mangled-name='_ZN17gridBoundaryChain10leftEndFanEiP10primStream' filepath='libnurbs/nurbtess/gridWrap.h' line='129' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridBoundaryChain*' -->
          <parameter type-id='type-id-280' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- parameter of type 'primStream*' -->
          <parameter type-id='type-id-194'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void gridBoundaryChain::rightEndFan(Int, primStream*) -->
        <function-decl name='rightEndFan' mangled-name='_ZN17gridBoundaryChain11rightEndFanEiP10primStream' filepath='libnurbs/nurbtess/gridWrap.h' line='130' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridBoundaryChain*' -->
          <parameter type-id='type-id-280' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- parameter of type 'primStream*' -->
          <parameter type-id='type-id-194'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void gridBoundaryChain::drawInner() -->
        <function-decl name='drawInner' mangled-name='_ZN17gridBoundaryChain9drawInnerEv' filepath='libnurbs/nurbtess/gridWrap.h' line='134' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridBoundaryChain*' -->
          <parameter type-id='type-id-280' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void gridBoundaryChain::draw() -->
        <function-decl name='draw' mangled-name='_ZN17gridBoundaryChain4drawEv' filepath='libnurbs/nurbtess/gridWrap.h' line='133' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridBoundaryChain*' -->
          <parameter type-id='type-id-280' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int gridBoundaryChain::getVlineIndex(Int) -->
        <function-decl name='getVlineIndex' mangled-name='_ZN17gridBoundaryChain13getVlineIndexEi' filepath='libnurbs/nurbtess/gridWrap.h' line='119' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridBoundaryChain*' -->
          <parameter type-id='type-id-280' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int gridBoundaryChain::getInnerIndex(Int) -->
        <function-decl name='getInnerIndex' mangled-name='_ZN17gridBoundaryChain13getInnerIndexEi' filepath='libnurbs/nurbtess/gridWrap.h' line='124' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridBoundaryChain*' -->
          <parameter type-id='type-id-280' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- gridWrap* gridBoundaryChain::getGrid() -->
        <function-decl name='getGrid' mangled-name='_ZN17gridBoundaryChain7getGridEv' filepath='libnurbs/nurbtess/gridWrap.h' line='128' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridBoundaryChain*' -->
          <parameter type-id='type-id-280' is-artificial='yes'/>
          <!-- gridWrap* -->
          <return type-id='type-id-193'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int gridBoundaryChain::get_nVlines() -->
        <function-decl name='get_nVlines' mangled-name='_ZN17gridBoundaryChain11get_nVlinesEv' filepath='libnurbs/nurbtess/gridWrap.h' line='123' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridBoundaryChain*' -->
          <parameter type-id='type-id-280' is-artificial='yes'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Real gridBoundaryChain::get_u_value(Int) -->
        <function-decl name='get_u_value' mangled-name='_ZN17gridBoundaryChain11get_u_valueEi' filepath='libnurbs/nurbtess/gridWrap.h' line='121' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'gridBoundaryChain*' -->
          <parameter type-id='type-id-280' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- typedef Real -->
          <return type-id='type-id-246'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- class rectBlock -->
    <class-decl name='rectBlock' size-in-bits='192' visibility='default' filepath='libnurbs/nurbtess/rectBlock.h' line='39' column='1' id='type-id-281'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- Int rectBlock::upGridLineIndex -->
        <var-decl name='upGridLineIndex' type-id='type-id-248' visibility='default' filepath='libnurbs/nurbtess/rectBlock.h' line='40' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='32'>
        <!-- Int rectBlock::lowGridLineIndex -->
        <var-decl name='lowGridLineIndex' type-id='type-id-248' visibility='default' filepath='libnurbs/nurbtess/rectBlock.h' line='41' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- Int* rectBlock::leftIndices -->
        <var-decl name='leftIndices' type-id='type-id-259' visibility='default' filepath='libnurbs/nurbtess/rectBlock.h' line='42' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='128'>
        <!-- Int* rectBlock::rightIndices -->
        <var-decl name='rightIndices' type-id='type-id-259' visibility='default' filepath='libnurbs/nurbtess/rectBlock.h' line='43' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- rectBlock::rectBlock(gridBoundaryChain*, gridBoundaryChain*, Int, Int) -->
        <function-decl name='rectBlock' filepath='libnurbs/nurbtess/rectBlock.h' line='46' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'rectBlock*' -->
          <parameter type-id='type-id-282' is-artificial='yes'/>
          <!-- parameter of type 'gridBoundaryChain*' -->
          <parameter type-id='type-id-280'/>
          <!-- parameter of type 'gridBoundaryChain*' -->
          <parameter type-id='type-id-280'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes'>
        <!-- rectBlock::~rectBlock(int) -->
        <function-decl name='~rectBlock' filepath='libnurbs/nurbtess/rectBlock.h' line='47' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'rectBlock*' -->
          <parameter type-id='type-id-282' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int rectBlock::get_lowGridLineIndex() -->
        <function-decl name='get_lowGridLineIndex' mangled-name='_ZN9rectBlock20get_lowGridLineIndexEv' filepath='libnurbs/nurbtess/rectBlock.h' line='50' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'rectBlock*' -->
          <parameter type-id='type-id-282' is-artificial='yes'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int rectBlock::get_upGridLineIndex() -->
        <function-decl name='get_upGridLineIndex' mangled-name='_ZN9rectBlock19get_upGridLineIndexEv' filepath='libnurbs/nurbtess/rectBlock.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'rectBlock*' -->
          <parameter type-id='type-id-282' is-artificial='yes'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int* rectBlock::get_rightIndices() -->
        <function-decl name='get_rightIndices' mangled-name='_ZN9rectBlock16get_rightIndicesEv' filepath='libnurbs/nurbtess/rectBlock.h' line='52' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'rectBlock*' -->
          <parameter type-id='type-id-282' is-artificial='yes'/>
          <!-- Int* -->
          <return type-id='type-id-259'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int* rectBlock::get_leftIndices() -->
        <function-decl name='get_leftIndices' mangled-name='_ZN9rectBlock15get_leftIndicesEv' filepath='libnurbs/nurbtess/rectBlock.h' line='51' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'rectBlock*' -->
          <parameter type-id='type-id-282' is-artificial='yes'/>
          <!-- Int* -->
          <return type-id='type-id-259'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int rectBlock::num_quads() -->
        <function-decl name='num_quads' mangled-name='_ZN9rectBlock9num_quadsEv' filepath='libnurbs/nurbtess/rectBlock.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'rectBlock*' -->
          <parameter type-id='type-id-282' is-artificial='yes'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void rectBlock::draw(Real*, Real*) -->
        <function-decl name='draw' mangled-name='_ZN9rectBlock4drawEPfS0_' filepath='libnurbs/nurbtess/rectBlock.h' line='57' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'rectBlock*' -->
          <parameter type-id='type-id-282' is-artificial='yes'/>
          <!-- parameter of type 'Real*' -->
          <parameter type-id='type-id-253'/>
          <!-- parameter of type 'Real*' -->
          <parameter type-id='type-id-253'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void rectBlock::print() -->
        <function-decl name='print' mangled-name='_ZN9rectBlock5printEv' filepath='libnurbs/nurbtess/rectBlock.h' line='56' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'rectBlock*' -->
          <parameter type-id='type-id-282' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- class rectBlockArray -->
    <class-decl name='rectBlockArray' size-in-bits='128' visibility='default' filepath='libnurbs/nurbtess/rectBlock.h' line='61' column='1' id='type-id-283'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- rectBlock** rectBlockArray::array -->
        <var-decl name='array' type-id='type-id-284' visibility='default' filepath='libnurbs/nurbtess/rectBlock.h' line='62' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- Int rectBlockArray::n_elements -->
        <var-decl name='n_elements' type-id='type-id-248' visibility='default' filepath='libnurbs/nurbtess/rectBlock.h' line='63' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='96'>
        <!-- Int rectBlockArray::size -->
        <var-decl name='size' type-id='type-id-248' visibility='default' filepath='libnurbs/nurbtess/rectBlock.h' line='64' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- rectBlockArray::rectBlockArray(Int) -->
        <function-decl name='rectBlockArray' filepath='libnurbs/nurbtess/rectBlock.h' line='66' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'rectBlockArray*' -->
          <parameter type-id='type-id-192' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes'>
        <!-- rectBlockArray::~rectBlockArray(int) -->
        <function-decl name='~rectBlockArray' filepath='libnurbs/nurbtess/rectBlock.h' line='67' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'rectBlockArray*' -->
          <parameter type-id='type-id-192' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- rectBlock* rectBlockArray::get_element(Int) -->
        <function-decl name='get_element' mangled-name='_ZN14rectBlockArray11get_elementEi' filepath='libnurbs/nurbtess/rectBlock.h' line='70' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'rectBlockArray*' -->
          <parameter type-id='type-id-192' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- rectBlock* -->
          <return type-id='type-id-282'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int rectBlockArray::get_n_elements() -->
        <function-decl name='get_n_elements' mangled-name='_ZN14rectBlockArray14get_n_elementsEv' filepath='libnurbs/nurbtess/rectBlock.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'rectBlockArray*' -->
          <parameter type-id='type-id-192' is-artificial='yes'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int rectBlockArray::num_quads() -->
        <function-decl name='num_quads' mangled-name='_ZN14rectBlockArray9num_quadsEv' filepath='libnurbs/nurbtess/rectBlock.h' line='73' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'rectBlockArray*' -->
          <parameter type-id='type-id-192' is-artificial='yes'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void rectBlockArray::insert(rectBlock*) -->
        <function-decl name='insert' mangled-name='_ZN14rectBlockArray6insertEP9rectBlock' filepath='libnurbs/nurbtess/rectBlock.h' line='71' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'rectBlockArray*' -->
          <parameter type-id='type-id-192' is-artificial='yes'/>
          <!-- parameter of type 'rectBlock*' -->
          <parameter type-id='type-id-282'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void rectBlockArray::draw(Real*, Real*) -->
        <function-decl name='draw' mangled-name='_ZN14rectBlockArray4drawEPfS0_' filepath='libnurbs/nurbtess/rectBlock.h' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'rectBlockArray*' -->
          <parameter type-id='type-id-192' is-artificial='yes'/>
          <!-- parameter of type 'Real*' -->
          <parameter type-id='type-id-253'/>
          <!-- parameter of type 'Real*' -->
          <parameter type-id='type-id-253'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void rectBlockArray::print() -->
        <function-decl name='print' mangled-name='_ZN14rectBlockArray5printEv' filepath='libnurbs/nurbtess/rectBlock.h' line='75' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'rectBlockArray*' -->
          <parameter type-id='type-id-192' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- Slicer* -->
    <pointer-type-def type-id='type-id-171' size-in-bits='64' id='type-id-190'/>
    <!-- gridBoundaryChain* -->
    <pointer-type-def type-id='type-id-279' size-in-bits='64' id='type-id-280'/>
    <!-- gridWrap* -->
    <pointer-type-def type-id='type-id-278' size-in-bits='64' id='type-id-193'/>
    <!-- rectBlock* -->
    <pointer-type-def type-id='type-id-281' size-in-bits='64' id='type-id-282'/>
    <!-- rectBlock** -->
    <pointer-type-def type-id='type-id-282' size-in-bits='64' id='type-id-284'/>
    <!-- rectBlockArray* -->
    <pointer-type-def type-id='type-id-283' size-in-bits='64' id='type-id-192'/>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/tobezier.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- typedef Quilt* Quilt_ptr -->
    <typedef-decl name='Quilt_ptr' type-id='type-id-148' filepath='libnurbs/internals/quilt.h' line='90' column='1' id='type-id-285'/>
    <!-- struct Breakpt -->
    <class-decl name='Breakpt' size-in-bits='96' is-struct='yes' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='48' column='1' id='type-id-286'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- Knot Breakpt::value -->
        <var-decl name='value' type-id='type-id-226' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='49' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- int Breakpt::multi -->
        <var-decl name='multi' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='50' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int Breakpt::def -->
        <var-decl name='def' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='51' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct Knotspec -->
    <class-decl name='Knotspec' size-in-bits='1152' is-struct='yes' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='54' column='1' id='type-id-287'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- long int Knotspec::order -->
        <var-decl name='order' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='55' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- Knot_ptr Knotspec::inkbegin -->
        <var-decl name='inkbegin' type-id='type-id-288' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='56' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- Knot_ptr Knotspec::inkend -->
        <var-decl name='inkend' type-id='type-id-288' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='57' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- Knot_ptr Knotspec::outkbegin -->
        <var-decl name='outkbegin' type-id='type-id-288' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='58' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- Knot_ptr Knotspec::outkend -->
        <var-decl name='outkend' type-id='type-id-288' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='59' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- Knot_ptr Knotspec::kleft -->
        <var-decl name='kleft' type-id='type-id-288' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='60' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- Knot_ptr Knotspec::kright -->
        <var-decl name='kright' type-id='type-id-288' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='61' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- Knot_ptr Knotspec::kfirst -->
        <var-decl name='kfirst' type-id='type-id-288' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='62' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- Knot_ptr Knotspec::klast -->
        <var-decl name='klast' type-id='type-id-288' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='63' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- Knot_ptr Knotspec::sbegin -->
        <var-decl name='sbegin' type-id='type-id-288' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='64' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- Breakpt* Knotspec::bbegin -->
        <var-decl name='bbegin' type-id='type-id-289' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='65' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='704'>
        <!-- Breakpt* Knotspec::bend -->
        <var-decl name='bend' type-id='type-id-289' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='66' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='768'>
        <!-- int Knotspec::ncoords -->
        <var-decl name='ncoords' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='67' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='800'>
        <!-- int Knotspec::prestride -->
        <var-decl name='prestride' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='68' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='832'>
        <!-- int Knotspec::poststride -->
        <var-decl name='poststride' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='69' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='864'>
        <!-- int Knotspec::preoffset -->
        <var-decl name='preoffset' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='70' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='896'>
        <!-- int Knotspec::postoffset -->
        <var-decl name='postoffset' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='71' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='928'>
        <!-- int Knotspec::prewidth -->
        <var-decl name='prewidth' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='72' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='960'>
        <!-- int Knotspec::postwidth -->
        <var-decl name='postwidth' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='73' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='992'>
        <!-- int Knotspec::istransformed -->
        <var-decl name='istransformed' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='74' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1024'>
        <!-- Knotspec* Knotspec::next -->
        <var-decl name='next' type-id='type-id-290' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='75' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1088'>
        <!-- Knotspec* Knotspec::kspectotrans -->
        <var-decl name='kspectotrans' type-id='type-id-290' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='76' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- Knotspec::Knotspec() -->
        <function-decl name='Knotspec' filepath='libnurbs/internals/tobezier.cc' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Knotspec*' -->
          <parameter type-id='type-id-290' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' destructor='yes'>
        <!-- Knotspec::~Knotspec(int) -->
        <function-decl name='~Knotspec' filepath='libnurbs/internals/tobezier.cc' line='79' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Knotspec*' -->
          <parameter type-id='type-id-290' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Knotspec::showpts(REAL*) -->
        <function-decl name='showpts' mangled-name='_ZN8Knotspec7showptsEPf' filepath='libnurbs/internals/tobezier.cc' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Knotspec*' -->
          <parameter type-id='type-id-290' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Knotspec::factors() -->
        <function-decl name='factors' mangled-name='_ZN8Knotspec7factorsEv' filepath='libnurbs/internals/tobezier.cc' line='80' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Knotspec*' -->
          <parameter type-id='type-id-290' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Knotspec::pt_io_copy(REAL*, float*) -->
        <function-decl name='pt_io_copy' mangled-name='_ZN8Knotspec10pt_io_copyEPfS0_' filepath='libnurbs/internals/tobezier.cc' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Knotspec*' -->
          <parameter type-id='type-id-290' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'float*' -->
          <parameter type-id='type-id-49'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Knotspec::copy(float*, REAL*) -->
        <function-decl name='copy' mangled-name='_ZN8Knotspec4copyEPfS0_' filepath='libnurbs/internals/tobezier.cc' line='84' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Knotspec*' -->
          <parameter type-id='type-id-290' is-artificial='yes'/>
          <!-- parameter of type 'float*' -->
          <parameter type-id='type-id-49'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Knotspec::pt_oo_sum(REAL*, REAL*, REAL*, Knot, Knot) -->
        <function-decl name='pt_oo_sum' mangled-name='_ZN8Knotspec9pt_oo_sumEPfS0_S0_ff' filepath='libnurbs/internals/tobezier.cc' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Knotspec*' -->
          <parameter type-id='type-id-290' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'typedef Knot' -->
          <parameter type-id='type-id-226'/>
          <!-- parameter of type 'typedef Knot' -->
          <parameter type-id='type-id-226'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Knotspec::pt_oo_copy(REAL*, REAL*) -->
        <function-decl name='pt_oo_copy' mangled-name='_ZN8Knotspec10pt_oo_copyEPfS0_' filepath='libnurbs/internals/tobezier.cc' line='91' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Knotspec*' -->
          <parameter type-id='type-id-290' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Knotspec::insert(REAL*) -->
        <function-decl name='insert' mangled-name='_ZN8Knotspec6insertEPf' filepath='libnurbs/internals/tobezier.cc' line='81' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Knotspec*' -->
          <parameter type-id='type-id-290' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Knotspec::transform(REAL*) -->
        <function-decl name='transform' mangled-name='_ZN8Knotspec9transformEPf' filepath='libnurbs/internals/tobezier.cc' line='87' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Knotspec*' -->
          <parameter type-id='type-id-290' is-artificial='yes'/>
          <!-- parameter of type 'REAL*' -->
          <parameter type-id='type-id-22'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Knotspec::knots() -->
        <function-decl name='knots' mangled-name='_ZN8Knotspec5knotsEv' filepath='libnurbs/internals/tobezier.cc' line='86' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Knotspec*' -->
          <parameter type-id='type-id-290' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Knotspec::breakpoints() -->
        <function-decl name='breakpoints' mangled-name='_ZN8Knotspec11breakpointsEv' filepath='libnurbs/internals/tobezier.cc' line='85' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Knotspec*' -->
          <parameter type-id='type-id-290' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Knotspec::select() -->
        <function-decl name='select' mangled-name='_ZN8Knotspec6selectEv' filepath='libnurbs/internals/tobezier.cc' line='83' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Knotspec*' -->
          <parameter type-id='type-id-290' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Knotspec::preselect() -->
        <function-decl name='preselect' mangled-name='_ZN8Knotspec9preselectEv' filepath='libnurbs/internals/tobezier.cc' line='82' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Knotspec*' -->
          <parameter type-id='type-id-290' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- struct Splinespec -->
    <class-decl name='Splinespec' size-in-bits='192' is-struct='yes' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='95' column='1' id='type-id-291'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- Knotspec* Splinespec::kspec -->
        <var-decl name='kspec' type-id='type-id-290' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='98' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int Splinespec::dim -->
        <var-decl name='dim' type-id='type-id-8' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='99' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- REAL* Splinespec::outcpts -->
        <var-decl name='outcpts' type-id='type-id-22' visibility='default' filepath='libnurbs/internals/tobezier.cc' line='100' column='1'/>
      </data-member>
      <member-function access='public' constructor='yes'>
        <!-- Splinespec::Splinespec(int) -->
        <function-decl name='Splinespec' filepath='libnurbs/internals/tobezier.cc' line='96' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Splinespec*' -->
          <parameter type-id='type-id-292' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public' destructor='yes'>
        <!-- Splinespec::~Splinespec(int) -->
        <function-decl name='~Splinespec' filepath='libnurbs/internals/tobezier.cc' line='97' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Splinespec*' -->
          <parameter type-id='type-id-292' is-artificial='yes'/>
          <!-- parameter of type 'int' -->
          <parameter type-id='type-id-8'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Splinespec::copy(float*) -->
        <function-decl name='copy' mangled-name='_ZN10Splinespec4copyEPf' filepath='libnurbs/internals/tobezier.cc' line='107' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Splinespec*' -->
          <parameter type-id='type-id-292' is-artificial='yes'/>
          <!-- parameter of type 'float*' -->
          <parameter type-id='type-id-49'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Splinespec::transform() -->
        <function-decl name='transform' mangled-name='_ZN10Splinespec9transformEv' filepath='libnurbs/internals/tobezier.cc' line='108' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Splinespec*' -->
          <parameter type-id='type-id-292' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Splinespec::select() -->
        <function-decl name='select' mangled-name='_ZN10Splinespec6selectEv' filepath='libnurbs/internals/tobezier.cc' line='104' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Splinespec*' -->
          <parameter type-id='type-id-292' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Splinespec::setupquilt(Quilt_ptr) -->
        <function-decl name='setupquilt' mangled-name='_ZN10Splinespec10setupquiltEP5Quilt' filepath='libnurbs/internals/tobezier.cc' line='106' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Splinespec*' -->
          <parameter type-id='type-id-292' is-artificial='yes'/>
          <!-- parameter of type 'typedef Quilt_ptr' -->
          <parameter type-id='type-id-285'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Splinespec::layout(long int) -->
        <function-decl name='layout' mangled-name='_ZN10Splinespec6layoutEl' filepath='libnurbs/internals/tobezier.cc' line='105' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Splinespec*' -->
          <parameter type-id='type-id-292' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Splinespec::kspecinit(Knotvector&, Knotvector&) -->
        <function-decl name='kspecinit' mangled-name='_ZN10Splinespec9kspecinitER10KnotvectorS1_' filepath='libnurbs/internals/tobezier.cc' line='103' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Splinespec*' -->
          <parameter type-id='type-id-292' is-artificial='yes'/>
          <!-- parameter of type 'Knotvector&' -->
          <parameter type-id='type-id-168'/>
          <!-- parameter of type 'Knotvector&' -->
          <parameter type-id='type-id-168'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='public'>
        <!-- void Splinespec::kspecinit(Knotvector&) -->
        <function-decl name='kspecinit' mangled-name='_ZN10Splinespec9kspecinitER10Knotvector' filepath='libnurbs/internals/tobezier.cc' line='102' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Splinespec*' -->
          <parameter type-id='type-id-292' is-artificial='yes'/>
          <!-- parameter of type 'Knotvector&' -->
          <parameter type-id='type-id-168'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- typedef REAL* Knot_ptr -->
    <typedef-decl name='Knot_ptr' type-id='type-id-22' filepath='libnurbs/internals/types.h' line='45' column='1' id='type-id-288'/>
    <!-- Breakpt* -->
    <pointer-type-def type-id='type-id-286' size-in-bits='64' id='type-id-289'/>
    <!-- Knotspec* -->
    <pointer-type-def type-id='type-id-287' size-in-bits='64' id='type-id-290'/>
    <!-- Splinespec* -->
    <pointer-type-def type-id='type-id-291' size-in-bits='64' id='type-id-292'/>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/internals/varray.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- REAL[1000] -->
    <array-type-def dimensions='1' type-id='type-id-1' size-in-bits='32000' id='type-id-293'>
      <!-- <anonymous range>[1000] -->
      <subrange length='1000' type-id='type-id-3' id='type-id-294'/>
    </array-type-def>
    <!-- long int[1000] -->
    <array-type-def dimensions='1' type-id='type-id-38' size-in-bits='64000' id='type-id-295'>
      <!-- <anonymous range>[1000] -->
      <subrange length='1000' type-id='type-id-3' id='type-id-294'/>
    </array-type-def>
    <!-- class Varray -->
    <class-decl name='Varray' size-in-bits='96192' visibility='default' filepath='libnurbs/internals/varray.h' line='43' column='1' id='type-id-296'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- REAL* Varray::varray -->
        <var-decl name='varray' type-id='type-id-22' visibility='default' filepath='libnurbs/internals/varray.h' line='48' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- REAL Varray::vval[1000] -->
        <var-decl name='vval' type-id='type-id-293' visibility='default' filepath='libnurbs/internals/varray.h' line='49' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='32064'>
        <!-- long int Varray::voffset[1000] -->
        <var-decl name='voffset' type-id='type-id-295' visibility='default' filepath='libnurbs/internals/varray.h' line='50' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='96064'>
        <!-- long int Varray::numquads -->
        <var-decl name='numquads' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/varray.h' line='51' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='96128'>
        <!-- long int Varray::size -->
        <var-decl name='size' type-id='type-id-38' visibility='default' filepath='libnurbs/internals/varray.h' line='54' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- Varray::Varray() -->
        <function-decl name='Varray' filepath='libnurbs/internals/varray.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Varray*' -->
          <parameter type-id='type-id-297' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes'>
        <!-- Varray::~Varray(int) -->
        <function-decl name='~Varray' filepath='libnurbs/internals/varray.h' line='46' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Varray*' -->
          <parameter type-id='type-id-297' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Varray::append(REAL) -->
        <function-decl name='append' mangled-name='_ZN6Varray6appendEf' filepath='libnurbs/internals/varray.h' line='57' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Varray*' -->
          <parameter type-id='type-id-297' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Varray::update(Arc*, long int*, REAL) -->
        <function-decl name='update' mangled-name='_ZN6Varray6updateEP3ArcPlf' filepath='libnurbs/internals/varray.h' line='55' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Varray*' -->
          <parameter type-id='type-id-297' is-artificial='yes'/>
          <!-- parameter of type 'Arc*' -->
          <parameter type-id='type-id-111'/>
          <!-- parameter of type 'long int*' -->
          <parameter type-id='type-id-298'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void Varray::grow(long int) -->
        <function-decl name='grow' mangled-name='_ZN6Varray4growEl' filepath='libnurbs/internals/varray.h' line='56' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Varray*' -->
          <parameter type-id='type-id-297' is-artificial='yes'/>
          <!-- parameter of type 'long int' -->
          <parameter type-id='type-id-38'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- long int Varray::init(REAL, Arc*, Arc*) -->
        <function-decl name='init' mangled-name='_ZN6Varray4initEfP3ArcS1_' filepath='libnurbs/internals/varray.h' line='47' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'Varray*' -->
          <parameter type-id='type-id-297' is-artificial='yes'/>
          <!-- parameter of type 'typedef REAL' -->
          <parameter type-id='type-id-1'/>
          <!-- parameter of type 'Arc*' -->
          <parameter type-id='type-id-111'/>
          <!-- parameter of type 'Arc*' -->
          <parameter type-id='type-id-111'/>
          <!-- long int -->
          <return type-id='type-id-38'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- Varray* -->
    <pointer-type-def type-id='type-id-296' size-in-bits='64' id='type-id-297'/>
    <!-- long int* -->
    <pointer-type-def type-id='type-id-38' size-in-bits='64' id='type-id-298'/>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/nurbtess/directedLine.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- short int -->
    <type-decl name='short int' size-in-bits='16' id='type-id-299'/>
    <!-- class directedLine -->
    <class-decl name='directedLine' size-in-bits='448' visibility='default' filepath='libnurbs/nurbtess/directedLine.h' line='41' column='1' id='type-id-300'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- short int directedLine::direction -->
        <var-decl name='direction' type-id='type-id-299' visibility='default' filepath='libnurbs/nurbtess/directedLine.h' line='42' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- sampledLine* directedLine::sline -->
        <var-decl name='sline' type-id='type-id-301' visibility='default' filepath='libnurbs/nurbtess/directedLine.h' line='43' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='128'>
        <!-- directedLine* directedLine::next -->
        <var-decl name='next' type-id='type-id-302' visibility='default' filepath='libnurbs/nurbtess/directedLine.h' line='44' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='192'>
        <!-- directedLine* directedLine::prev -->
        <var-decl name='prev' type-id='type-id-302' visibility='default' filepath='libnurbs/nurbtess/directedLine.h' line='45' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='256'>
        <!-- directedLine* directedLine::nextPolygon -->
        <var-decl name='nextPolygon' type-id='type-id-302' visibility='default' filepath='libnurbs/nurbtess/directedLine.h' line='50' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='320'>
        <!-- Int directedLine::rootBit -->
        <var-decl name='rootBit' type-id='type-id-248' visibility='default' filepath='libnurbs/nurbtess/directedLine.h' line='55' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='384'>
        <!-- directedLine* directedLine::rootLink -->
        <var-decl name='rootLink' type-id='type-id-302' visibility='default' filepath='libnurbs/nurbtess/directedLine.h' line='58' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- directedLine::directedLine(short int, sampledLine*) -->
        <function-decl name='directedLine' filepath='libnurbs/nurbtess/directedLine.h' line='63' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- parameter of type 'short int' -->
          <parameter type-id='type-id-299'/>
          <!-- parameter of type 'sampledLine*' -->
          <parameter type-id='type-id-301'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' constructor='yes'>
        <!-- directedLine::directedLine() -->
        <function-decl name='directedLine' filepath='libnurbs/nurbtess/directedLine.h' line='64' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes'>
        <!-- directedLine::~directedLine(int) -->
        <function-decl name='~directedLine' filepath='libnurbs/nurbtess/directedLine.h' line='65' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int directedLine::numEdges() -->
        <function-decl name='numEdges' mangled-name='_ZN12directedLine8numEdgesEv' filepath='libnurbs/nurbtess/directedLine.h' line='114' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Real* directedLine::head() -->
        <function-decl name='head' mangled-name='_ZN12directedLine4headEv' filepath='libnurbs/nurbtess/directedLine.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- Real* -->
          <return type-id='type-id-253'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Real* directedLine::tail() -->
        <function-decl name='tail' mangled-name='_ZN12directedLine4tailEv' filepath='libnurbs/nurbtess/directedLine.h' line='70' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- Real* -->
          <return type-id='type-id-253'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void directedLine::setRootBit() -->
        <function-decl name='setRootBit' mangled-name='_ZN12directedLine10setRootBitEv' filepath='libnurbs/nurbtess/directedLine.h' line='151' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void directedLine::rootLinkSet(directedLine*) -->
        <function-decl name='rootLinkSet' mangled-name='_ZN12directedLine11rootLinkSetEPS_' filepath='libnurbs/nurbtess/directedLine.h' line='155' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void directedLine::insert(directedLine*) -->
        <function-decl name='insert' mangled-name='_ZN12directedLine6insertEPS_' filepath='libnurbs/nurbtess/directedLine.h' line='84' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- directedLine* directedLine::insertPolygon(directedLine*) -->
        <function-decl name='insertPolygon' mangled-name='_ZN12directedLine13insertPolygonEPS_' filepath='libnurbs/nurbtess/directedLine.h' line='132' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302'/>
          <!-- directedLine* -->
          <return type-id='type-id-302'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int directedLine::numPolygons() -->
        <function-decl name='numPolygons' mangled-name='_ZN12directedLine11numPolygonsEv' filepath='libnurbs/nurbtess/directedLine.h' line='116' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int directedLine::get_npoints() -->
        <function-decl name='get_npoints' mangled-name='_ZN12directedLine11get_npointsEv' filepath='libnurbs/nurbtess/directedLine.h' line='72' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Real* directedLine::getVertex(Int) -->
        <function-decl name='getVertex' mangled-name='_ZN12directedLine9getVertexEi' filepath='libnurbs/nurbtess/directedLine.h' line='71' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- Real* -->
          <return type-id='type-id-253'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int directedLine::numEdgesAllPolygons() -->
        <function-decl name='numEdgesAllPolygons' mangled-name='_ZN12directedLine19numEdgesAllPolygonsEv' filepath='libnurbs/nurbtess/directedLine.h' line='115' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int directedLine::toArraySinglePolygon(directedLine**, Int) -->
        <function-decl name='toArraySinglePolygon' mangled-name='_ZN12directedLine20toArraySinglePolygonEPPS_i' filepath='libnurbs/nurbtess/directedLine.h' line='135' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- parameter of type 'directedLine**' -->
          <parameter type-id='type-id-303'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void directedLine::resetRootBit() -->
        <function-decl name='resetRootBit' mangled-name='_ZN12directedLine12resetRootBitEv' filepath='libnurbs/nurbtess/directedLine.h' line='152' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- directedLine* directedLine::getNext() -->
        <function-decl name='getNext' mangled-name='_ZN12directedLine7getNextEv' filepath='libnurbs/nurbtess/directedLine.h' line='74' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- directedLine* -->
          <return type-id='type-id-302'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void directedLine::init(short int, sampledLine*) -->
        <function-decl name='init' mangled-name='_ZN12directedLine4initEsP11sampledLine' filepath='libnurbs/nurbtess/directedLine.h' line='67' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- parameter of type 'short int' -->
          <parameter type-id='type-id-299'/>
          <!-- parameter of type 'sampledLine*' -->
          <parameter type-id='type-id-301'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- short int directedLine::isConnected() -->
        <function-decl name='isConnected' mangled-name='_ZN12directedLine11isConnectedEv' filepath='libnurbs/nurbtess/directedLine.h' line='121' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- short int -->
          <return type-id='type-id-299'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- short int directedLine::isPolygon() -->
        <function-decl name='isPolygon' mangled-name='_ZN12directedLine9isPolygonEv' filepath='libnurbs/nurbtess/directedLine.h' line='104' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- short int -->
          <return type-id='type-id-299'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int directedLine::compInY(directedLine*) -->
        <function-decl name='compInY' mangled-name='_ZN12directedLine7compInYEPS_' filepath='libnurbs/nurbtess/directedLine.h' line='106' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int directedLine::compInX(directedLine*) -->
        <function-decl name='compInX' mangled-name='_ZN12directedLine7compInXEPS_' filepath='libnurbs/nurbtess/directedLine.h' line='107' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Real directedLine::polyArea() -->
        <function-decl name='polyArea' mangled-name='_ZN12directedLine8polyAreaEv' filepath='libnurbs/nurbtess/directedLine.h' line='123' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- typedef Real -->
          <return type-id='type-id-246'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int directedLine::samePolygon(directedLine*, directedLine*) -->
        <function-decl name='samePolygon' mangled-name='_ZN12directedLine11samePolygonEPS_S0_' filepath='libnurbs/nurbtess/directedLine.h' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302'/>
          <!-- parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- directedLine* directedLine::findRoot() -->
        <function-decl name='findRoot' mangled-name='_ZN12directedLine8findRootEv' filepath='libnurbs/nurbtess/directedLine.h' line='153' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- directedLine* -->
          <return type-id='type-id-302'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- directedLine* directedLine::rootLinkFindRoot() -->
        <function-decl name='rootLinkFindRoot' mangled-name='_ZN12directedLine16rootLinkFindRootEv' filepath='libnurbs/nurbtess/directedLine.h' line='156' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- directedLine* -->
          <return type-id='type-id-302'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void directedLine::deleteSinglePolygon() -->
        <function-decl name='deleteSinglePolygon' mangled-name='_ZN12directedLine19deleteSinglePolygonEv' filepath='libnurbs/nurbtess/directedLine.h' line='91' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void directedLine::deletePolygonList() -->
        <function-decl name='deletePolygonList' mangled-name='_ZN12directedLine17deletePolygonListEv' filepath='libnurbs/nurbtess/directedLine.h' line='90' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void directedLine::deleteSingleLine(directedLine*) -->
        <function-decl name='deleteSingleLine' mangled-name='_ZN12directedLine16deleteSingleLineEPS_' filepath='libnurbs/nurbtess/directedLine.h' line='96' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void directedLine::writeAllPolygons(char*) -->
        <function-decl name='writeAllPolygons' mangled-name='_ZN12directedLine16writeAllPolygonsEPc' filepath='libnurbs/nurbtess/directedLine.h' line='128' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- parameter of type 'char*' -->
          <parameter type-id='type-id-107'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void directedLine::connectDiagonal_2slines(directedLine*, directedLine*, directedLine**, directedLine**, directedLine*) -->
        <function-decl name='connectDiagonal_2slines' mangled-name='_ZN12directedLine23connectDiagonal_2slinesEPS_S0_PS0_S1_S0_' filepath='libnurbs/nurbtess/directedLine.h' line='145' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302'/>
          <!-- parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302'/>
          <!-- parameter of type 'directedLine**' -->
          <parameter type-id='type-id-303'/>
          <!-- parameter of type 'directedLine**' -->
          <parameter type-id='type-id-303'/>
          <!-- parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void directedLine::connectDiagonal(directedLine*, directedLine*, directedLine**, directedLine**, sampledLine**, directedLine*) -->
        <function-decl name='connectDiagonal' mangled-name='_ZN12directedLine15connectDiagonalEPS_S0_PS0_S1_PP11sampledLineS0_' filepath='libnurbs/nurbtess/directedLine.h' line='138' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302'/>
          <!-- parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302'/>
          <!-- parameter of type 'directedLine**' -->
          <parameter type-id='type-id-303'/>
          <!-- parameter of type 'directedLine**' -->
          <parameter type-id='type-id-303'/>
          <!-- parameter of type 'sampledLine**' -->
          <parameter type-id='type-id-304'/>
          <!-- parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- directedLine** directedLine::toArrayAllPolygons(Int&) -->
        <function-decl name='toArrayAllPolygons' mangled-name='_ZN12directedLine18toArrayAllPolygonsERi' filepath='libnurbs/nurbtess/directedLine.h' line='136' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- parameter of type 'Int&' -->
          <parameter type-id='type-id-305'/>
          <!-- directedLine** -->
          <return type-id='type-id-303'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- directedLine* directedLine::cutoffPolygon(directedLine*) -->
        <function-decl name='cutoffPolygon' mangled-name='_ZN12directedLine13cutoffPolygonEPS_' filepath='libnurbs/nurbtess/directedLine.h' line='133' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302'/>
          <!-- directedLine* -->
          <return type-id='type-id-302'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void directedLine::printSingle() -->
        <function-decl name='printSingle' mangled-name='_ZN12directedLine11printSingleEv' filepath='libnurbs/nurbtess/directedLine.h' line='125' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void directedLine::printList() -->
        <function-decl name='printList' mangled-name='_ZN12directedLine9printListEv' filepath='libnurbs/nurbtess/directedLine.h' line='126' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void directedLine::printAllPolygons() -->
        <function-decl name='printAllPolygons' mangled-name='_ZN12directedLine16printAllPolygonsEv' filepath='libnurbs/nurbtess/directedLine.h' line='127' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- directedLine** directedLine::sortAllPolygons() -->
        <function-decl name='sortAllPolygons' mangled-name='_ZN12directedLine15sortAllPolygonsEv' filepath='libnurbs/nurbtess/directedLine.h' line='112' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- directedLine** -->
          <return type-id='type-id-303'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void directedLine::deleteSinglePolygonWithSline() -->
        <function-decl name='deleteSinglePolygonWithSline' mangled-name='_ZN12directedLine28deleteSinglePolygonWithSlineEv' filepath='libnurbs/nurbtess/directedLine.h' line='93' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void directedLine::deletePolygonListWithSline() -->
        <function-decl name='deletePolygonListWithSline' mangled-name='_ZN12directedLine26deletePolygonListWithSlineEv' filepath='libnurbs/nurbtess/directedLine.h' line='94' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- directedLine* directedLine::deleteDegenerateLines() -->
        <function-decl name='deleteDegenerateLines' mangled-name='_ZN12directedLine21deleteDegenerateLinesEv' filepath='libnurbs/nurbtess/directedLine.h' line='97' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- directedLine* -->
          <return type-id='type-id-302'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- directedLine* directedLine::deleteDegenerateLinesAllPolygons() -->
        <function-decl name='deleteDegenerateLinesAllPolygons' mangled-name='_ZN12directedLine32deleteDegenerateLinesAllPolygonsEv' filepath='libnurbs/nurbtess/directedLine.h' line='98' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- directedLine* -->
          <return type-id='type-id-302'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- directedLine* directedLine::cutIntersectionAllPoly(int&) -->
        <function-decl name='cutIntersectionAllPoly' mangled-name='_ZN12directedLine22cutIntersectionAllPolyERi' filepath='libnurbs/nurbtess/directedLine.h' line='99' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- parameter of type 'int&' -->
          <parameter type-id='type-id-306'/>
          <!-- directedLine* -->
          <return type-id='type-id-302'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- directedLine* directedLine::deleteChain(directedLine*, directedLine*) -->
        <function-decl name='deleteChain' mangled-name='_ZN12directedLine11deleteChainEPS_S0_' filepath='libnurbs/nurbtess/directedLine.h' line='162' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302'/>
          <!-- parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302'/>
          <!-- directedLine* -->
          <return type-id='type-id-302'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- directedLine* directedLine::getPrev() -->
        <function-decl name='getPrev' mangled-name='_ZN12directedLine7getPrevEv' filepath='libnurbs/nurbtess/directedLine.h' line='73' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- directedLine* -->
          <return type-id='type-id-302'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- directedLine* directedLine::getNextPolygon() -->
        <function-decl name='getNextPolygon' mangled-name='_ZN12directedLine14getNextPolygonEv' filepath='libnurbs/nurbtess/directedLine.h' line='75' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- directedLine* -->
          <return type-id='type-id-302'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- sampledLine* directedLine::getSampledLine() -->
        <function-decl name='getSampledLine' mangled-name='_ZN12directedLine14getSampledLineEv' filepath='libnurbs/nurbtess/directedLine.h' line='76' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- sampledLine* -->
          <return type-id='type-id-301'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- short int directedLine::getDirection() -->
        <function-decl name='getDirection' mangled-name='_ZN12directedLine12getDirectionEv' filepath='libnurbs/nurbtess/directedLine.h' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- short int -->
          <return type-id='type-id-299'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void directedLine::putDirection(short int) -->
        <function-decl name='putDirection' mangled-name='_ZN12directedLine12putDirectionEs' filepath='libnurbs/nurbtess/directedLine.h' line='79' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- parameter of type 'short int' -->
          <parameter type-id='type-id-299'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void directedLine::putNext(directedLine*) -->
        <function-decl name='putNext' mangled-name='_ZN12directedLine7putNextEPS_' filepath='libnurbs/nurbtess/directedLine.h' line='81' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void directedLine::putPrev(directedLine*) -->
        <function-decl name='putPrev' mangled-name='_ZN12directedLine7putPrevEPS_' filepath='libnurbs/nurbtess/directedLine.h' line='80' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302' is-artificial='yes'/>
          <!-- parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- class sampledLine -->
    <class-decl name='sampledLine' size-in-bits='192' visibility='default' filepath='libnurbs/nurbtess/sampledLine.h' line='38' column='1' id='type-id-307'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- Int sampledLine::npoints -->
        <var-decl name='npoints' type-id='type-id-248' visibility='default' filepath='libnurbs/nurbtess/sampledLine.h' line='39' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- Real2* sampledLine::points -->
        <var-decl name='points' type-id='type-id-251' visibility='default' filepath='libnurbs/nurbtess/sampledLine.h' line='40' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='128'>
        <!-- sampledLine* sampledLine::next -->
        <var-decl name='next' type-id='type-id-301' visibility='default' filepath='libnurbs/nurbtess/sampledLine.h' line='65' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- sampledLine::sampledLine(Int) -->
        <function-decl name='sampledLine' filepath='libnurbs/nurbtess/sampledLine.h' line='43' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'sampledLine*' -->
          <parameter type-id='type-id-301' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' constructor='yes'>
        <!-- sampledLine::sampledLine(Int, Real[2]*) -->
        <function-decl name='sampledLine' filepath='libnurbs/nurbtess/sampledLine.h' line='44' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'sampledLine*' -->
          <parameter type-id='type-id-301' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- parameter of type 'Real[2]*' -->
          <parameter type-id='type-id-257'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' constructor='yes'>
        <!-- sampledLine::sampledLine(Real*, Real*) -->
        <function-decl name='sampledLine' filepath='libnurbs/nurbtess/sampledLine.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'sampledLine*' -->
          <parameter type-id='type-id-301' is-artificial='yes'/>
          <!-- parameter of type 'Real*' -->
          <parameter type-id='type-id-253'/>
          <!-- parameter of type 'Real*' -->
          <parameter type-id='type-id-253'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' constructor='yes'>
        <!-- sampledLine::sampledLine() -->
        <function-decl name='sampledLine' filepath='libnurbs/nurbtess/sampledLine.h' line='46' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'sampledLine*' -->
          <parameter type-id='type-id-301' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes'>
        <!-- sampledLine::~sampledLine(int) -->
        <function-decl name='~sampledLine' filepath='libnurbs/nurbtess/sampledLine.h' line='47' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'sampledLine*' -->
          <parameter type-id='type-id-301' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int sampledLine::get_npoints() -->
        <function-decl name='get_npoints' mangled-name='_ZN11sampledLine11get_npointsEv' filepath='libnurbs/nurbtess/sampledLine.h' line='56' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'sampledLine*' -->
          <parameter type-id='type-id-301' is-artificial='yes'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Real2* sampledLine::get_points() -->
        <function-decl name='get_points' mangled-name='_ZN11sampledLine10get_pointsEv' filepath='libnurbs/nurbtess/sampledLine.h' line='57' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'sampledLine*' -->
          <parameter type-id='type-id-301' is-artificial='yes'/>
          <!-- Real2* -->
          <return type-id='type-id-251'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void sampledLine::setPoint(Int, Real*) -->
        <function-decl name='setPoint' mangled-name='_ZN11sampledLine8setPointEiPf' filepath='libnurbs/nurbtess/sampledLine.h' line='51' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'sampledLine*' -->
          <parameter type-id='type-id-301' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- parameter of type 'Real*' -->
          <parameter type-id='type-id-253'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- sampledLine* sampledLine::insert(sampledLine*) -->
        <function-decl name='insert' mangled-name='_ZN11sampledLine6insertEPS_' filepath='libnurbs/nurbtess/sampledLine.h' line='53' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'sampledLine*' -->
          <parameter type-id='type-id-301' is-artificial='yes'/>
          <!-- parameter of type 'sampledLine*' -->
          <parameter type-id='type-id-301'/>
          <!-- sampledLine* -->
          <return type-id='type-id-301'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void sampledLine::init(Int, Real2*) -->
        <function-decl name='init' mangled-name='_ZN11sampledLine4initEiPA2_f' filepath='libnurbs/nurbtess/sampledLine.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'sampledLine*' -->
          <parameter type-id='type-id-301' is-artificial='yes'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- parameter of type 'Real2*' -->
          <parameter type-id='type-id-251'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void sampledLine::tessellate(Real, Real) -->
        <function-decl name='tessellate' mangled-name='_ZN11sampledLine10tessellateEff' filepath='libnurbs/nurbtess/sampledLine.h' line='60' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'sampledLine*' -->
          <parameter type-id='type-id-301' is-artificial='yes'/>
          <!-- parameter of type 'typedef Real' -->
          <parameter type-id='type-id-246'/>
          <!-- parameter of type 'typedef Real' -->
          <parameter type-id='type-id-246'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void sampledLine::tessellateAll(Real, Real) -->
        <function-decl name='tessellateAll' mangled-name='_ZN11sampledLine13tessellateAllEff' filepath='libnurbs/nurbtess/sampledLine.h' line='61' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'sampledLine*' -->
          <parameter type-id='type-id-301' is-artificial='yes'/>
          <!-- parameter of type 'typedef Real' -->
          <parameter type-id='type-id-246'/>
          <!-- parameter of type 'typedef Real' -->
          <parameter type-id='type-id-246'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void sampledLine::print() -->
        <function-decl name='print' mangled-name='_ZN11sampledLine5printEv' filepath='libnurbs/nurbtess/sampledLine.h' line='63' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'sampledLine*' -->
          <parameter type-id='type-id-301' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void sampledLine::deleteList() -->
        <function-decl name='deleteList' mangled-name='_ZN11sampledLine10deleteListEv' filepath='libnurbs/nurbtess/sampledLine.h' line='54' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'sampledLine*' -->
          <parameter type-id='type-id-301' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- Int& -->
    <reference-type-def kind='lvalue' type-id='type-id-248' size-in-bits='64' id='type-id-305'/>
    <!-- directedLine* -->
    <pointer-type-def type-id='type-id-300' size-in-bits='64' id='type-id-302'/>
    <!-- directedLine** -->
    <pointer-type-def type-id='type-id-302' size-in-bits='64' id='type-id-303'/>
    <!-- int& -->
    <reference-type-def kind='lvalue' type-id='type-id-8' size-in-bits='64' id='type-id-306'/>
    <!-- sampledLine* -->
    <pointer-type-def type-id='type-id-307' size-in-bits='64' id='type-id-301'/>
    <!-- sampledLine** -->
    <pointer-type-def type-id='type-id-301' size-in-bits='64' id='type-id-304'/>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/nurbtess/monoChain.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
    <!-- class monoChain -->
    <class-decl name='monoChain' size-in-bits='640' visibility='default' filepath='libnurbs/nurbtess/monoChain.h' line='41' column='1' id='type-id-308'>
      <data-member access='private' layout-offset-in-bits='0'>
        <!-- directedLine* monoChain::chainHead -->
        <var-decl name='chainHead' type-id='type-id-302' visibility='default' filepath='libnurbs/nurbtess/monoChain.h' line='42' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='64'>
        <!-- directedLine* monoChain::chainTail -->
        <var-decl name='chainTail' type-id='type-id-302' visibility='default' filepath='libnurbs/nurbtess/monoChain.h' line='43' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='128'>
        <!-- monoChain* monoChain::next -->
        <var-decl name='next' type-id='type-id-309' visibility='default' filepath='libnurbs/nurbtess/monoChain.h' line='44' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='192'>
        <!-- monoChain* monoChain::prev -->
        <var-decl name='prev' type-id='type-id-309' visibility='default' filepath='libnurbs/nurbtess/monoChain.h' line='45' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='256'>
        <!-- monoChain* monoChain::nextPolygon -->
        <var-decl name='nextPolygon' type-id='type-id-309' visibility='default' filepath='libnurbs/nurbtess/monoChain.h' line='46' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='320'>
        <!-- Real monoChain::minX -->
        <var-decl name='minX' type-id='type-id-246' visibility='default' filepath='libnurbs/nurbtess/monoChain.h' line='50' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='352'>
        <!-- Real monoChain::maxX -->
        <var-decl name='maxX' type-id='type-id-246' visibility='default' filepath='libnurbs/nurbtess/monoChain.h' line='50' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='384'>
        <!-- Real monoChain::minY -->
        <var-decl name='minY' type-id='type-id-246' visibility='default' filepath='libnurbs/nurbtess/monoChain.h' line='50' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='416'>
        <!-- Real monoChain::maxY -->
        <var-decl name='maxY' type-id='type-id-246' visibility='default' filepath='libnurbs/nurbtess/monoChain.h' line='50' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='448'>
        <!-- Int monoChain::isIncrease -->
        <var-decl name='isIncrease' type-id='type-id-248' visibility='default' filepath='libnurbs/nurbtess/monoChain.h' line='51' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='512'>
        <!-- directedLine* monoChain::current -->
        <var-decl name='current' type-id='type-id-302' visibility='default' filepath='libnurbs/nurbtess/monoChain.h' line='55' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='576'>
        <!-- Int monoChain::isKey -->
        <var-decl name='isKey' type-id='type-id-248' visibility='default' filepath='libnurbs/nurbtess/monoChain.h' line='82' column='1'/>
      </data-member>
      <data-member access='private' layout-offset-in-bits='608'>
        <!-- Real monoChain::keyY -->
        <var-decl name='keyY' type-id='type-id-246' visibility='default' filepath='libnurbs/nurbtess/monoChain.h' line='83' column='1'/>
      </data-member>
      <member-function access='private' constructor='yes'>
        <!-- monoChain::monoChain(directedLine*, directedLine*) -->
        <function-decl name='monoChain' filepath='libnurbs/nurbtess/monoChain.h' line='58' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'monoChain*' -->
          <parameter type-id='type-id-309' is-artificial='yes'/>
          <!-- parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302'/>
          <!-- parameter of type 'directedLine*' -->
          <parameter type-id='type-id-302'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private' destructor='yes'>
        <!-- monoChain::~monoChain(int) -->
        <function-decl name='~monoChain' filepath='libnurbs/nurbtess/monoChain.h' line='59' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'monoChain*' -->
          <parameter type-id='type-id-309' is-artificial='yes'/>
          <!-- artificial parameter of type 'int' -->
          <parameter type-id='type-id-8' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int monoChain::numChainsSingleLoop() -->
        <function-decl name='numChainsSingleLoop' mangled-name='_ZN9monoChain19numChainsSingleLoopEv' filepath='libnurbs/nurbtess/monoChain.h' line='77' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'monoChain*' -->
          <parameter type-id='type-id-309' is-artificial='yes'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int monoChain::numChainsAllLoops() -->
        <function-decl name='numChainsAllLoops' mangled-name='_ZN9monoChain17numChainsAllLoopsEv' filepath='libnurbs/nurbtess/monoChain.h' line='78' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'monoChain*' -->
          <parameter type-id='type-id-309' is-artificial='yes'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Int monoChain::toArraySingleLoop(monoChain**, Int) -->
        <function-decl name='toArraySingleLoop' mangled-name='_ZN9monoChain17toArraySingleLoopEPPS_i' filepath='libnurbs/nurbtess/monoChain.h' line='80' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'monoChain*' -->
          <parameter type-id='type-id-309' is-artificial='yes'/>
          <!-- parameter of type 'monoChain**' -->
          <parameter type-id='type-id-310'/>
          <!-- parameter of type 'typedef Int' -->
          <parameter type-id='type-id-248'/>
          <!-- typedef Int -->
          <return type-id='type-id-248'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- directedLine* monoChain::getHead() -->
        <function-decl name='getHead' mangled-name='_ZN9monoChain7getHeadEv' filepath='libnurbs/nurbtess/monoChain.h' line='66' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'monoChain*' -->
          <parameter type-id='type-id-309' is-artificial='yes'/>
          <!-- directedLine* -->
          <return type-id='type-id-302'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void monoChain::resetCurrent() -->
        <function-decl name='resetCurrent' mangled-name='_ZN9monoChain12resetCurrentEv' filepath='libnurbs/nurbtess/monoChain.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'monoChain*' -->
          <parameter type-id='type-id-309' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- monoChain* monoChain::getPrev() -->
        <function-decl name='getPrev' mangled-name='_ZN9monoChain7getPrevEv' filepath='libnurbs/nurbtess/monoChain.h' line='65' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'monoChain*' -->
          <parameter type-id='type-id-309' is-artificial='yes'/>
          <!-- monoChain* -->
          <return type-id='type-id-309'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void monoChain::insert(monoChain*) -->
        <function-decl name='insert' mangled-name='_ZN9monoChain6insertEPS_' filepath='libnurbs/nurbtess/monoChain.h' line='75' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'monoChain*' -->
          <parameter type-id='type-id-309' is-artificial='yes'/>
          <!-- parameter of type 'monoChain*' -->
          <parameter type-id='type-id-309'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void monoChain::setNextPolygon(monoChain*) -->
        <function-decl name='setNextPolygon' mangled-name='_ZN9monoChain14setNextPolygonEPS_' filepath='libnurbs/nurbtess/monoChain.h' line='63' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'monoChain*' -->
          <parameter type-id='type-id-309' is-artificial='yes'/>
          <!-- parameter of type 'monoChain*' -->
          <parameter type-id='type-id-309'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- monoChain** monoChain::toArrayAllLoops(Int&) -->
        <function-decl name='toArrayAllLoops' mangled-name='_ZN9monoChain15toArrayAllLoopsERi' filepath='libnurbs/nurbtess/monoChain.h' line='79' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'monoChain*' -->
          <parameter type-id='type-id-309' is-artificial='yes'/>
          <!-- parameter of type 'Int&' -->
          <parameter type-id='type-id-305'/>
          <!-- monoChain** -->
          <return type-id='type-id-310'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- directedLine* monoChain::find(Real) -->
        <function-decl name='find' mangled-name='_ZN9monoChain4findEf' filepath='libnurbs/nurbtess/monoChain.h' line='85' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'monoChain*' -->
          <parameter type-id='type-id-309' is-artificial='yes'/>
          <!-- parameter of type 'typedef Real' -->
          <parameter type-id='type-id-246'/>
          <!-- directedLine* -->
          <return type-id='type-id-302'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- Real monoChain::chainIntersectHoriz(Real) -->
        <function-decl name='chainIntersectHoriz' mangled-name='_ZN9monoChain19chainIntersectHorizEf' filepath='libnurbs/nurbtess/monoChain.h' line='84' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'monoChain*' -->
          <parameter type-id='type-id-309' is-artificial='yes'/>
          <!-- parameter of type 'typedef Real' -->
          <parameter type-id='type-id-246'/>
          <!-- typedef Real -->
          <return type-id='type-id-246'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void monoChain::printOneChain() -->
        <function-decl name='printOneChain' mangled-name='_ZN9monoChain13printOneChainEv' filepath='libnurbs/nurbtess/monoChain.h' line='87' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'monoChain*' -->
          <parameter type-id='type-id-309' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void monoChain::printChainLoop() -->
        <function-decl name='printChainLoop' mangled-name='_ZN9monoChain14printChainLoopEv' filepath='libnurbs/nurbtess/monoChain.h' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'monoChain*' -->
          <parameter type-id='type-id-309' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void monoChain::printAllLoops() -->
        <function-decl name='printAllLoops' mangled-name='_ZN9monoChain13printAllLoopsEv' filepath='libnurbs/nurbtess/monoChain.h' line='89' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'monoChain*' -->
          <parameter type-id='type-id-309' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void monoChain::deleteLoop() -->
        <function-decl name='deleteLoop' mangled-name='_ZN9monoChain10deleteLoopEv' filepath='libnurbs/nurbtess/monoChain.h' line='71' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'monoChain*' -->
          <parameter type-id='type-id-309' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
      <member-function access='private'>
        <!-- void monoChain::deleteLoopList() -->
        <function-decl name='deleteLoopList' mangled-name='_ZN9monoChain14deleteLoopListEv' filepath='libnurbs/nurbtess/monoChain.h' line='72' column='1' visibility='default' binding='global' size-in-bits='64'>
          <!-- implicit parameter of type 'monoChain*' -->
          <parameter type-id='type-id-309' is-artificial='yes'/>
          <!-- void -->
          <return type-id='type-id-14'/>
        </function-decl>
      </member-function>
    </class-decl>
    <!-- monoChain* -->
    <pointer-type-def type-id='type-id-308' size-in-bits='64' id='type-id-309'/>
    <!-- monoChain** -->
    <pointer-type-def type-id='type-id-309' size-in-bits='64' id='type-id-310'/>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/nurbtess/monoTriangulation.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/nurbtess/polyDBG.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/nurbtess/sampleComp.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/nurbtess/sampleCompBot.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/nurbtess/sampleCompRight.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/nurbtess/sampleCompTop.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/nurbtess/sampleMonoPoly.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='libnurbs/nurbtess/sampledLine.cc' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='libtess/tess.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C99'>
    <!-- CachedVertex[100] -->
    <array-type-def dimensions='1' type-id='type-id-311' size-in-bits='25600' id='type-id-312'>
      <!-- <anonymous range>[100] -->
      <subrange length='100' type-id='type-id-3' id='type-id-313'/>
    </array-type-def>
    <!-- GLdouble[3] -->
    <array-type-def dimensions='1' type-id='type-id-314' size-in-bits='192' id='type-id-315'>
      <!-- <anonymous range>[3] -->
      <subrange length='3' type-id='type-id-3' id='type-id-90'/>
    </array-type-def>
    <!-- __jmp_buf_tag[1] -->
    <array-type-def dimensions='1' type-id='type-id-316' size-in-bits='1600' id='type-id-317'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' type-id='type-id-3' id='type-id-318'/>
    </array-type-def>
    <!-- float -->
    <type-decl name='float' size-in-bits='32' id='type-id-15'/>
    <!-- long int -->
    <type-decl name='long int' size-in-bits='64' id='type-id-38'/>
    <!-- long int[8] -->
    <array-type-def dimensions='1' type-id='type-id-38' size-in-bits='512' id='type-id-319'>
      <!-- <anonymous range>[8] -->
      <subrange length='8' type-id='type-id-3' id='type-id-320'/>
    </array-type-def>
    <!-- unnamed&#45;enum&#45;underlying&#45;type&#45;32 -->
    <type-decl name='unnamed-enum-underlying-type-32' is-anonymous='yes' size-in-bits='32' alignment-in-bits='32' id='type-id-12'/>
    <!-- unsigned long int -->
    <type-decl name='unsigned long int' size-in-bits='64' id='type-id-3'/>
    <!-- unsigned long int[16] -->
    <array-type-def dimensions='1' type-id='type-id-3' size-in-bits='1024' id='type-id-321'>
      <!-- <anonymous range>[16] -->
      <subrange length='16' type-id='type-id-3' id='type-id-322'/>
    </array-type-def>
    <!-- typedef float GLfloat -->
    <typedef-decl name='GLfloat' type-id='type-id-15' filepath='../../../include/GL/gl.h' line='160' column='1' id='type-id-23'/>
    <!-- typedef GLUtesselator GLUtesselator -->
    <typedef-decl name='GLUtesselator' type-id='type-id-323' filepath='../../../include/GL/glu.h' line='276' column='1' id='type-id-324'/>
    <!-- typedef long int[8] __jmp_buf -->
    <typedef-decl name='__jmp_buf' type-id='type-id-319' filepath='/usr/include/bits/setjmp.h' line='32' column='1' id='type-id-325'/>
    <!-- struct __sigset_t -->
    <class-decl name='__sigset_t' size-in-bits='1024' is-struct='yes' naming-typedef-id='type-id-326' visibility='default' filepath='/usr/include/bits/sigset.h' line='30' column='1' id='type-id-327'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned long int __sigset_t::__val[16] -->
        <var-decl name='__val' type-id='type-id-321' visibility='default' filepath='/usr/include/bits/sigset.h' line='31' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef __sigset_t __sigset_t -->
    <typedef-decl name='__sigset_t' type-id='type-id-327' filepath='/usr/include/bits/sigset.h' line='32' column='1' id='type-id-326'/>
    <!-- struct __jmp_buf_tag -->
    <class-decl name='__jmp_buf_tag' size-in-bits='1600' is-struct='yes' visibility='default' filepath='/usr/include/setjmp.h' line='36' column='1' id='type-id-316'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- __jmp_buf __jmp_buf_tag::__jmpbuf -->
        <var-decl name='__jmpbuf' type-id='type-id-325' visibility='default' filepath='/usr/include/setjmp.h' line='41' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- int __jmp_buf_tag::__mask_was_saved -->
        <var-decl name='__mask_was_saved' type-id='type-id-8' visibility='default' filepath='/usr/include/setjmp.h' line='42' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- __sigset_t __jmp_buf_tag::__saved_mask -->
        <var-decl name='__saved_mask' type-id='type-id-326' visibility='default' filepath='/usr/include/setjmp.h' line='43' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef __jmp_buf_tag[1] jmp_buf -->
    <typedef-decl name='jmp_buf' type-id='type-id-317' filepath='/usr/include/setjmp.h' line='49' column='1' id='type-id-156'/>
    <!-- typedef void* DictListKey -->
    <typedef-decl name='DictListKey' type-id='type-id-35' filepath='libtess/dict.h' line='60' column='1' id='type-id-328'/>
    <!-- typedef DictList DictList -->
    <typedef-decl name='DictList' type-id='type-id-329' filepath='libtess/dict.h' line='61' column='1' id='type-id-330'/>
    <!-- typedef DictListNode DictListNode -->
    <typedef-decl name='DictListNode' type-id='type-id-331' filepath='libtess/dict.h' line='62' column='1' id='type-id-332'/>
    <!-- struct DictListNode -->
    <class-decl name='DictListNode' size-in-bits='192' is-struct='yes' visibility='default' filepath='libtess/dict.h' line='88' column='1' id='type-id-331'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- DictListKey DictListNode::key -->
        <var-decl name='key' type-id='type-id-328' visibility='default' filepath='libtess/dict.h' line='89' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- DictListNode* DictListNode::next -->
        <var-decl name='next' type-id='type-id-333' visibility='default' filepath='libtess/dict.h' line='90' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- DictListNode* DictListNode::prev -->
        <var-decl name='prev' type-id='type-id-333' visibility='default' filepath='libtess/dict.h' line='91' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct DictList -->
    <class-decl name='DictList' size-in-bits='320' is-struct='yes' visibility='default' filepath='libtess/dict.h' line='94' column='1' id='type-id-329'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- DictListNode DictList::head -->
        <var-decl name='head' type-id='type-id-332' visibility='default' filepath='libtess/dict.h' line='95' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- void* DictList::frame -->
        <var-decl name='frame' type-id='type-id-35' visibility='default' filepath='libtess/dict.h' line='96' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- int (void*, typedef DictListKey, typedef DictListKey)* DictList::leq -->
        <var-decl name='leq' type-id='type-id-334' visibility='default' filepath='libtess/dict.h' line='97' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef GLUmesh GLUmesh -->
    <typedef-decl name='GLUmesh' type-id='type-id-335' filepath='libtess/mesh.h' line='40' column='1' id='type-id-336'/>
    <!-- typedef GLUvertex GLUvertex -->
    <typedef-decl name='GLUvertex' type-id='type-id-337' filepath='libtess/mesh.h' line='42' column='1' id='type-id-338'/>
    <!-- typedef GLUface GLUface -->
    <typedef-decl name='GLUface' type-id='type-id-339' filepath='libtess/mesh.h' line='43' column='1' id='type-id-340'/>
    <!-- typedef GLUhalfEdge GLUhalfEdge -->
    <typedef-decl name='GLUhalfEdge' type-id='type-id-341' filepath='libtess/mesh.h' line='44' column='1' id='type-id-342'/>
    <!-- typedef ActiveRegion ActiveRegion -->
    <typedef-decl name='ActiveRegion' type-id='type-id-343' filepath='libtess/mesh.h' line='46' column='1' id='type-id-344'/>
    <!-- struct GLUvertex -->
    <class-decl name='GLUvertex' size-in-bits='640' is-struct='yes' visibility='default' filepath='libtess/mesh.h' line='114' column='1' id='type-id-337'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- GLUvertex* GLUvertex::next -->
        <var-decl name='next' type-id='type-id-345' visibility='default' filepath='libtess/mesh.h' line='115' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- GLUvertex* GLUvertex::prev -->
        <var-decl name='prev' type-id='type-id-345' visibility='default' filepath='libtess/mesh.h' line='116' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- GLUhalfEdge* GLUvertex::anEdge -->
        <var-decl name='anEdge' type-id='type-id-346' visibility='default' filepath='libtess/mesh.h' line='117' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- void* GLUvertex::data -->
        <var-decl name='data' type-id='type-id-35' visibility='default' filepath='libtess/mesh.h' line='118' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- GLdouble GLUvertex::coords[3] -->
        <var-decl name='coords' type-id='type-id-315' visibility='default' filepath='libtess/mesh.h' line='121' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- GLdouble GLUvertex::s -->
        <var-decl name='s' type-id='type-id-314' visibility='default' filepath='libtess/mesh.h' line='122' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- GLdouble GLUvertex::t -->
        <var-decl name='t' type-id='type-id-314' visibility='default' filepath='libtess/mesh.h' line='122' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- long int GLUvertex::pqHandle -->
        <var-decl name='pqHandle' type-id='type-id-38' visibility='default' filepath='libtess/mesh.h' line='123' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct GLUface -->
    <class-decl name='GLUface' size-in-bits='384' is-struct='yes' visibility='default' filepath='libtess/mesh.h' line='126' column='1' id='type-id-339'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- GLUface* GLUface::next -->
        <var-decl name='next' type-id='type-id-347' visibility='default' filepath='libtess/mesh.h' line='127' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- GLUface* GLUface::prev -->
        <var-decl name='prev' type-id='type-id-347' visibility='default' filepath='libtess/mesh.h' line='128' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- GLUhalfEdge* GLUface::anEdge -->
        <var-decl name='anEdge' type-id='type-id-346' visibility='default' filepath='libtess/mesh.h' line='129' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- void* GLUface::data -->
        <var-decl name='data' type-id='type-id-35' visibility='default' filepath='libtess/mesh.h' line='130' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- GLUface* GLUface::trail -->
        <var-decl name='trail' type-id='type-id-347' visibility='default' filepath='libtess/mesh.h' line='133' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- GLboolean GLUface::marked -->
        <var-decl name='marked' type-id='type-id-42' visibility='default' filepath='libtess/mesh.h' line='134' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='328'>
        <!-- GLboolean GLUface::inside -->
        <var-decl name='inside' type-id='type-id-42' visibility='default' filepath='libtess/mesh.h' line='135' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct GLUhalfEdge -->
    <class-decl name='GLUhalfEdge' size-in-bits='512' is-struct='yes' visibility='default' filepath='libtess/mesh.h' line='138' column='1' id='type-id-341'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- GLUhalfEdge* GLUhalfEdge::next -->
        <var-decl name='next' type-id='type-id-346' visibility='default' filepath='libtess/mesh.h' line='139' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- GLUhalfEdge* GLUhalfEdge::Sym -->
        <var-decl name='Sym' type-id='type-id-346' visibility='default' filepath='libtess/mesh.h' line='140' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- GLUhalfEdge* GLUhalfEdge::Onext -->
        <var-decl name='Onext' type-id='type-id-346' visibility='default' filepath='libtess/mesh.h' line='141' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- GLUhalfEdge* GLUhalfEdge::Lnext -->
        <var-decl name='Lnext' type-id='type-id-346' visibility='default' filepath='libtess/mesh.h' line='142' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- GLUvertex* GLUhalfEdge::Org -->
        <var-decl name='Org' type-id='type-id-345' visibility='default' filepath='libtess/mesh.h' line='143' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- GLUface* GLUhalfEdge::Lface -->
        <var-decl name='Lface' type-id='type-id-347' visibility='default' filepath='libtess/mesh.h' line='144' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- ActiveRegion* GLUhalfEdge::activeRegion -->
        <var-decl name='activeRegion' type-id='type-id-348' visibility='default' filepath='libtess/mesh.h' line='147' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- int GLUhalfEdge::winding -->
        <var-decl name='winding' type-id='type-id-8' visibility='default' filepath='libtess/mesh.h' line='148' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct GLUmesh -->
    <class-decl name='GLUmesh' size-in-bits='2048' is-struct='yes' visibility='default' filepath='libtess/mesh.h' line='163' column='1' id='type-id-335'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- GLUvertex GLUmesh::vHead -->
        <var-decl name='vHead' type-id='type-id-338' visibility='default' filepath='libtess/mesh.h' line='164' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- GLUface GLUmesh::fHead -->
        <var-decl name='fHead' type-id='type-id-340' visibility='default' filepath='libtess/mesh.h' line='165' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1024'>
        <!-- GLUhalfEdge GLUmesh::eHead -->
        <var-decl name='eHead' type-id='type-id-342' visibility='default' filepath='libtess/mesh.h' line='166' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1536'>
        <!-- GLUhalfEdge GLUmesh::eHeadSym -->
        <var-decl name='eHeadSym' type-id='type-id-342' visibility='default' filepath='libtess/mesh.h' line='167' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef void* PQHeapKey -->
    <typedef-decl name='PQHeapKey' type-id='type-id-35' filepath='libtess/priorityq-heap.h' line='79' column='1' id='type-id-349'/>
    <!-- typedef long int PQHeapHandle -->
    <typedef-decl name='PQHeapHandle' type-id='type-id-38' filepath='libtess/priorityq-heap.h' line='80' column='1' id='type-id-350'/>
    <!-- typedef PriorityQHeap PriorityQHeap -->
    <typedef-decl name='PriorityQHeap' type-id='type-id-351' filepath='libtess/priorityq-heap.h' line='81' column='1' id='type-id-352'/>
    <!-- struct PQnode -->
    <class-decl name='PQnode' size-in-bits='64' is-struct='yes' naming-typedef-id='type-id-353' visibility='default' filepath='libtess/priorityq-heap.h' line='83' column='1' id='type-id-354'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- PQHeapHandle PQnode::handle -->
        <var-decl name='handle' type-id='type-id-350' visibility='default' filepath='libtess/priorityq-heap.h' line='83' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef PQnode PQnode -->
    <typedef-decl name='PQnode' type-id='type-id-354' filepath='libtess/priorityq-heap.h' line='83' column='1' id='type-id-353'/>
    <!-- struct PQhandleElem -->
    <class-decl name='PQhandleElem' size-in-bits='128' is-struct='yes' naming-typedef-id='type-id-355' visibility='default' filepath='libtess/priorityq-heap.h' line='84' column='1' id='type-id-356'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- PQHeapKey PQhandleElem::key -->
        <var-decl name='key' type-id='type-id-349' visibility='default' filepath='libtess/priorityq-heap.h' line='84' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- PQHeapHandle PQhandleElem::node -->
        <var-decl name='node' type-id='type-id-350' visibility='default' filepath='libtess/priorityq-heap.h' line='84' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef PQhandleElem PQhandleElem -->
    <typedef-decl name='PQhandleElem' type-id='type-id-356' filepath='libtess/priorityq-heap.h' line='84' column='1' id='type-id-355'/>
    <!-- struct PriorityQHeap -->
    <class-decl name='PriorityQHeap' size-in-bits='448' is-struct='yes' visibility='default' filepath='libtess/priorityq-heap.h' line='86' column='1' id='type-id-351'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- PQnode* PriorityQHeap::nodes -->
        <var-decl name='nodes' type-id='type-id-357' visibility='default' filepath='libtess/priorityq-heap.h' line='87' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- PQhandleElem* PriorityQHeap::handles -->
        <var-decl name='handles' type-id='type-id-358' visibility='default' filepath='libtess/priorityq-heap.h' line='88' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- long int PriorityQHeap::size -->
        <var-decl name='size' type-id='type-id-38' visibility='default' filepath='libtess/priorityq-heap.h' line='89' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- long int PriorityQHeap::max -->
        <var-decl name='max' type-id='type-id-38' visibility='default' filepath='libtess/priorityq-heap.h' line='89' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- PQHeapHandle PriorityQHeap::freeList -->
        <var-decl name='freeList' type-id='type-id-350' visibility='default' filepath='libtess/priorityq-heap.h' line='90' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- int PriorityQHeap::initialized -->
        <var-decl name='initialized' type-id='type-id-8' visibility='default' filepath='libtess/priorityq-heap.h' line='91' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- int (typedef PQHeapKey, typedef PQHeapKey)* PriorityQHeap::leq -->
        <var-decl name='leq' type-id='type-id-359' visibility='default' filepath='libtess/priorityq-heap.h' line='92' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef PQHeapKey PQSortKey -->
    <typedef-decl name='PQSortKey' type-id='type-id-349' filepath='libtess/priorityq.h' line='93' column='1' id='type-id-360'/>
    <!-- typedef PQHeapHandle PQSortHandle -->
    <typedef-decl name='PQSortHandle' type-id='type-id-350' filepath='libtess/priorityq.h' line='94' column='1' id='type-id-361'/>
    <!-- typedef PriorityQSort PriorityQSort -->
    <typedef-decl name='PriorityQSort' type-id='type-id-362' filepath='libtess/priorityq.h' line='95' column='1' id='type-id-363'/>
    <!-- struct PriorityQSort -->
    <class-decl name='PriorityQSort' size-in-bits='448' is-struct='yes' visibility='default' filepath='libtess/priorityq.h' line='97' column='1' id='type-id-362'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- PriorityQHeap* PriorityQSort::heap -->
        <var-decl name='heap' type-id='type-id-364' visibility='default' filepath='libtess/priorityq.h' line='98' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- PQSortKey* PriorityQSort::keys -->
        <var-decl name='keys' type-id='type-id-365' visibility='default' filepath='libtess/priorityq.h' line='99' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- PQSortKey** PriorityQSort::order -->
        <var-decl name='order' type-id='type-id-366' visibility='default' filepath='libtess/priorityq.h' line='100' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- PQSortHandle PriorityQSort::size -->
        <var-decl name='size' type-id='type-id-361' visibility='default' filepath='libtess/priorityq.h' line='101' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- PQSortHandle PriorityQSort::max -->
        <var-decl name='max' type-id='type-id-361' visibility='default' filepath='libtess/priorityq.h' line='101' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- int PriorityQSort::initialized -->
        <var-decl name='initialized' type-id='type-id-8' visibility='default' filepath='libtess/priorityq.h' line='102' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- int (typedef PQSortKey, typedef PQSortKey)* PriorityQSort::leq -->
        <var-decl name='leq' type-id='type-id-367' visibility='default' filepath='libtess/priorityq.h' line='103' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct ActiveRegion -->
    <class-decl name='ActiveRegion' size-in-bits='192' is-struct='yes' visibility='default' filepath='libtess/sweep.h' line='59' column='1' id='type-id-343'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- GLUhalfEdge* ActiveRegion::eUp -->
        <var-decl name='eUp' type-id='type-id-346' visibility='default' filepath='libtess/sweep.h' line='60' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- DictListNode* ActiveRegion::nodeUp -->
        <var-decl name='nodeUp' type-id='type-id-333' visibility='default' filepath='libtess/sweep.h' line='61' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- int ActiveRegion::windingNumber -->
        <var-decl name='windingNumber' type-id='type-id-8' visibility='default' filepath='libtess/sweep.h' line='62' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='160'>
        <!-- GLboolean ActiveRegion::inside -->
        <var-decl name='inside' type-id='type-id-42' visibility='default' filepath='libtess/sweep.h' line='64' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='168'>
        <!-- GLboolean ActiveRegion::sentinel -->
        <var-decl name='sentinel' type-id='type-id-42' visibility='default' filepath='libtess/sweep.h' line='65' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='176'>
        <!-- GLboolean ActiveRegion::dirty -->
        <var-decl name='dirty' type-id='type-id-42' visibility='default' filepath='libtess/sweep.h' line='66' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='184'>
        <!-- GLboolean ActiveRegion::fixUpperEdge -->
        <var-decl name='fixUpperEdge' type-id='type-id-42' visibility='default' filepath='libtess/sweep.h' line='69' column='1'/>
      </data-member>
    </class-decl>
    <!-- enum TessState -->
    <enum-decl name='TessState' filepath='libtess/tess.h' line='47' column='1' id='type-id-368'>
      <underlying-type type-id='type-id-12'/>
      <enumerator name='T_DORMANT' value='0'/>
      <enumerator name='T_IN_POLYGON' value='1'/>
      <enumerator name='T_IN_CONTOUR' value='2'/>
    </enum-decl>
    <!-- struct CachedVertex -->
    <class-decl name='CachedVertex' size-in-bits='256' is-struct='yes' visibility='default' filepath='libtess/tess.h' line='54' column='1' id='type-id-369'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- GLdouble CachedVertex::coords[3] -->
        <var-decl name='coords' type-id='type-id-315' visibility='default' filepath='libtess/tess.h' line='55' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- void* CachedVertex::data -->
        <var-decl name='data' type-id='type-id-35' visibility='default' filepath='libtess/tess.h' line='56' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef CachedVertex CachedVertex -->
    <typedef-decl name='CachedVertex' type-id='type-id-369' filepath='libtess/tess.h' line='57' column='1' id='type-id-311'/>
    <!-- struct GLUtesselator -->
    <class-decl name='GLUtesselator' size-in-bits='29376' is-struct='yes' visibility='default' filepath='libtess/tess.h' line='59' column='1' id='type-id-323'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- TessState GLUtesselator::state -->
        <var-decl name='state' type-id='type-id-368' visibility='default' filepath='libtess/tess.h' line='63' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- GLUhalfEdge* GLUtesselator::lastEdge -->
        <var-decl name='lastEdge' type-id='type-id-346' visibility='default' filepath='libtess/tess.h' line='65' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- GLUmesh* GLUtesselator::mesh -->
        <var-decl name='mesh' type-id='type-id-370' visibility='default' filepath='libtess/tess.h' line='66' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- void (typedef GLenum)* GLUtesselator::callError -->
        <var-decl name='callError' type-id='type-id-31' visibility='default' filepath='libtess/tess.h' line='69' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- GLdouble GLUtesselator::normal[3] -->
        <var-decl name='normal' type-id='type-id-315' visibility='default' filepath='libtess/tess.h' line='73' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- GLdouble GLUtesselator::sUnit[3] -->
        <var-decl name='sUnit' type-id='type-id-315' visibility='default' filepath='libtess/tess.h' line='74' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- GLdouble GLUtesselator::tUnit[3] -->
        <var-decl name='tUnit' type-id='type-id-315' visibility='default' filepath='libtess/tess.h' line='75' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='832'>
        <!-- GLdouble GLUtesselator::relTolerance -->
        <var-decl name='relTolerance' type-id='type-id-314' visibility='default' filepath='libtess/tess.h' line='79' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='896'>
        <!-- GLenum GLUtesselator::windingRule -->
        <var-decl name='windingRule' type-id='type-id-36' visibility='default' filepath='libtess/tess.h' line='80' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='928'>
        <!-- GLboolean GLUtesselator::fatalError -->
        <var-decl name='fatalError' type-id='type-id-42' visibility='default' filepath='libtess/tess.h' line='81' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='960'>
        <!-- DictList* GLUtesselator::dict -->
        <var-decl name='dict' type-id='type-id-371' visibility='default' filepath='libtess/tess.h' line='83' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1024'>
        <!-- PriorityQSort* GLUtesselator::pq -->
        <var-decl name='pq' type-id='type-id-372' visibility='default' filepath='libtess/tess.h' line='84' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1088'>
        <!-- GLUvertex* GLUtesselator::event -->
        <var-decl name='event' type-id='type-id-345' visibility='default' filepath='libtess/tess.h' line='85' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1152'>
        <!-- void (GLdouble*, void**, GLfloat*, void**)* GLUtesselator::callCombine -->
        <var-decl name='callCombine' type-id='type-id-373' visibility='default' filepath='libtess/tess.h' line='87' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1216'>
        <!-- GLboolean GLUtesselator::flagBoundary -->
        <var-decl name='flagBoundary' type-id='type-id-42' visibility='default' filepath='libtess/tess.h' line='92' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1224'>
        <!-- GLboolean GLUtesselator::boundaryOnly -->
        <var-decl name='boundaryOnly' type-id='type-id-42' visibility='default' filepath='libtess/tess.h' line='93' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1280'>
        <!-- GLUface* GLUtesselator::lonelyTriList -->
        <var-decl name='lonelyTriList' type-id='type-id-347' visibility='default' filepath='libtess/tess.h' line='94' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1344'>
        <!-- void (typedef GLenum)* GLUtesselator::callBegin -->
        <var-decl name='callBegin' type-id='type-id-31' visibility='default' filepath='libtess/tess.h' line='97' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1408'>
        <!-- void (typedef GLboolean)* GLUtesselator::callEdgeFlag -->
        <var-decl name='callEdgeFlag' type-id='type-id-374' visibility='default' filepath='libtess/tess.h' line='98' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1472'>
        <!-- void (void*)* GLUtesselator::callVertex -->
        <var-decl name='callVertex' type-id='type-id-34' visibility='default' filepath='libtess/tess.h' line='99' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1536'>
        <!-- void ()* GLUtesselator::callEnd -->
        <var-decl name='callEnd' type-id='type-id-32' visibility='default' filepath='libtess/tess.h' line='100' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1600'>
        <!-- void (GLUmesh*)* GLUtesselator::callMesh -->
        <var-decl name='callMesh' type-id='type-id-375' visibility='default' filepath='libtess/tess.h' line='101' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1664'>
        <!-- GLboolean GLUtesselator::emptyCache -->
        <var-decl name='emptyCache' type-id='type-id-42' visibility='default' filepath='libtess/tess.h' line='106' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1696'>
        <!-- int GLUtesselator::cacheCount -->
        <var-decl name='cacheCount' type-id='type-id-8' visibility='default' filepath='libtess/tess.h' line='107' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1728'>
        <!-- CachedVertex GLUtesselator::cache[100] -->
        <var-decl name='cache' type-id='type-id-312' visibility='default' filepath='libtess/tess.h' line='108' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='27328'>
        <!-- void (typedef GLenum, void*)* GLUtesselator::callBeginData -->
        <var-decl name='callBeginData' type-id='type-id-33' visibility='default' filepath='libtess/tess.h' line='111' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='27392'>
        <!-- void (typedef GLboolean, void*)* GLUtesselator::callEdgeFlagData -->
        <var-decl name='callEdgeFlagData' type-id='type-id-376' visibility='default' filepath='libtess/tess.h' line='112' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='27456'>
        <!-- void (void*, void*)* GLUtesselator::callVertexData -->
        <var-decl name='callVertexData' type-id='type-id-377' visibility='default' filepath='libtess/tess.h' line='114' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='27520'>
        <!-- void (void*)* GLUtesselator::callEndData -->
        <var-decl name='callEndData' type-id='type-id-34' visibility='default' filepath='libtess/tess.h' line='115' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='27584'>
        <!-- void (typedef GLenum, void*)* GLUtesselator::callErrorData -->
        <var-decl name='callErrorData' type-id='type-id-33' visibility='default' filepath='libtess/tess.h' line='116' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='27648'>
        <!-- void (GLdouble*, void**, GLfloat*, void**, void*)* GLUtesselator::callCombineData -->
        <var-decl name='callCombineData' type-id='type-id-378' visibility='default' filepath='libtess/tess.h' line='117' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='27712'>
        <!-- jmp_buf GLUtesselator::env -->
        <var-decl name='env' type-id='type-id-156' visibility='default' filepath='libtess/tess.h' line='121' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='29312'>
        <!-- void* GLUtesselator::polygonData -->
        <var-decl name='polygonData' type-id='type-id-35' visibility='default' filepath='libtess/tess.h' line='123' column='1'/>
      </data-member>
    </class-decl>
    <!-- ActiveRegion* -->
    <pointer-type-def type-id='type-id-344' size-in-bits='64' id='type-id-348'/>
    <!-- DictList* -->
    <pointer-type-def type-id='type-id-330' size-in-bits='64' id='type-id-371'/>
    <!-- DictListNode* -->
    <pointer-type-def type-id='type-id-332' size-in-bits='64' id='type-id-333'/>
    <!-- GLUface* -->
    <pointer-type-def type-id='type-id-340' size-in-bits='64' id='type-id-347'/>
    <!-- GLUhalfEdge* -->
    <pointer-type-def type-id='type-id-342' size-in-bits='64' id='type-id-346'/>
    <!-- GLUmesh* -->
    <pointer-type-def type-id='type-id-336' size-in-bits='64' id='type-id-370'/>
    <!-- GLUtesselator* -->
    <pointer-type-def type-id='type-id-324' size-in-bits='64' id='type-id-379'/>
    <!-- GLUvertex* -->
    <pointer-type-def type-id='type-id-338' size-in-bits='64' id='type-id-345'/>
    <!-- GLfloat* -->
    <pointer-type-def type-id='type-id-23' size-in-bits='64' id='type-id-45'/>
    <!-- PQSortKey* -->
    <pointer-type-def type-id='type-id-360' size-in-bits='64' id='type-id-365'/>
    <!-- PQSortKey** -->
    <pointer-type-def type-id='type-id-365' size-in-bits='64' id='type-id-366'/>
    <!-- PQhandleElem* -->
    <pointer-type-def type-id='type-id-355' size-in-bits='64' id='type-id-358'/>
    <!-- PQnode* -->
    <pointer-type-def type-id='type-id-353' size-in-bits='64' id='type-id-357'/>
    <!-- PriorityQHeap* -->
    <pointer-type-def type-id='type-id-352' size-in-bits='64' id='type-id-364'/>
    <!-- PriorityQSort* -->
    <pointer-type-def type-id='type-id-363' size-in-bits='64' id='type-id-372'/>
    <!-- int (typedef PQHeapKey, typedef PQHeapKey)* -->
    <pointer-type-def type-id='type-id-380' size-in-bits='64' id='type-id-359'/>
    <!-- int (typedef PQSortKey, typedef PQSortKey)* -->
    <pointer-type-def type-id='type-id-381' size-in-bits='64' id='type-id-367'/>
    <!-- int (void*, typedef DictListKey, typedef DictListKey)* -->
    <pointer-type-def type-id='type-id-382' size-in-bits='64' id='type-id-334'/>
    <!-- void (GLUmesh*)* -->
    <pointer-type-def type-id='type-id-383' size-in-bits='64' id='type-id-375'/>
    <!-- void (GLdouble*, void**, GLfloat*, void**)* -->
    <pointer-type-def type-id='type-id-384' size-in-bits='64' id='type-id-373'/>
    <!-- void (GLdouble*, void**, GLfloat*, void**, void*)* -->
    <pointer-type-def type-id='type-id-385' size-in-bits='64' id='type-id-378'/>
    <!-- void (typedef GLboolean)* -->
    <pointer-type-def type-id='type-id-386' size-in-bits='64' id='type-id-374'/>
    <!-- void (typedef GLboolean, void*)* -->
    <pointer-type-def type-id='type-id-387' size-in-bits='64' id='type-id-376'/>
    <!-- void (typedef GLenum)* -->
    <pointer-type-def type-id='type-id-388' size-in-bits='64' id='type-id-31'/>
    <!-- void (typedef GLenum, void*)* -->
    <pointer-type-def type-id='type-id-389' size-in-bits='64' id='type-id-33'/>
    <!-- void (void*)* -->
    <pointer-type-def type-id='type-id-390' size-in-bits='64' id='type-id-34'/>
    <!-- void (void*, void*)* -->
    <pointer-type-def type-id='type-id-391' size-in-bits='64' id='type-id-377'/>
    <!-- void** -->
    <pointer-type-def type-id='type-id-35' size-in-bits='64' id='type-id-191'/>
    <!-- GLUtesselator* gluNewTess() -->
    <function-decl name='gluNewTess' mangled-name='gluNewTess' filepath='libtess/tess.c' line='92' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluNewTess'>
      <!-- GLUtesselator* -->
      <return type-id='type-id-379'/>
    </function-decl>
    <!-- void gluDeleteTess(GLUtesselator*) -->
    <function-decl name='gluDeleteTess' mangled-name='gluDeleteTess' filepath='libtess/tess.c' line='193' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluDeleteTess'>
      <!-- parameter of type 'GLUtesselator*' -->
      <parameter type-id='type-id-379' name='tess' filepath='libtess/tess.c' line='193' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluTessProperty(GLUtesselator*, GLenum, GLdouble) -->
    <function-decl name='gluTessProperty' mangled-name='gluTessProperty' filepath='libtess/tess.c' line='201' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluTessProperty'>
      <!-- parameter of type 'GLUtesselator*' -->
      <parameter type-id='type-id-379' name='tess' filepath='libtess/tess.c' line='201' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='which' filepath='libtess/tess.c' line='201' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='value' filepath='libtess/tess.c' line='201' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluGetTessProperty(GLUtesselator*, GLenum, GLdouble*) -->
    <function-decl name='gluGetTessProperty' mangled-name='gluGetTessProperty' filepath='libtess/tess.c' line='240' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluGetTessProperty'>
      <!-- parameter of type 'GLUtesselator*' -->
      <parameter type-id='type-id-379' name='tess' filepath='libtess/tess.c' line='240' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='which' filepath='libtess/tess.c' line='240' column='1'/>
      <!-- parameter of type 'GLdouble*' -->
      <parameter type-id='type-id-392' name='value' filepath='libtess/tess.c' line='240' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluTessNormal(GLUtesselator*, GLdouble, GLdouble, GLdouble) -->
    <function-decl name='gluTessNormal' mangled-name='gluTessNormal' filepath='libtess/tess.c' line='268' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluTessNormal'>
      <!-- parameter of type 'GLUtesselator*' -->
      <parameter type-id='type-id-379' name='tess' filepath='libtess/tess.c' line='268' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='x' filepath='libtess/tess.c' line='268' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='y' filepath='libtess/tess.c' line='268' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='z' filepath='libtess/tess.c' line='268' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluTessCallback(GLUtesselator*, GLenum, _GLUfuncptr) -->
    <function-decl name='gluTessCallback' mangled-name='gluTessCallback' filepath='libtess/tess.c' line='276' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluTessCallback'>
      <!-- parameter of type 'GLUtesselator*' -->
      <parameter type-id='type-id-379' name='tess' filepath='libtess/tess.c' line='276' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='which' filepath='libtess/tess.c' line='276' column='1'/>
      <!-- parameter of type 'typedef _GLUfuncptr' -->
      <parameter type-id='type-id-37' name='fn' filepath='libtess/tess.c' line='276' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluTessVertex(GLUtesselator*, GLdouble*, void*) -->
    <function-decl name='gluTessVertex' mangled-name='gluTessVertex' filepath='libtess/tess.c' line='415' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluTessVertex'>
      <!-- parameter of type 'GLUtesselator*' -->
      <parameter type-id='type-id-379' name='tess' filepath='libtess/tess.c' line='415' column='1'/>
      <!-- parameter of type 'GLdouble*' -->
      <parameter type-id='type-id-392' name='coords' filepath='libtess/tess.c' line='415' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-35' name='data' filepath='libtess/tess.c' line='415' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluTessBeginPolygon(GLUtesselator*, void*) -->
    <function-decl name='gluTessBeginPolygon' mangled-name='gluTessBeginPolygon' filepath='libtess/tess.c' line='462' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluTessBeginPolygon'>
      <!-- parameter of type 'GLUtesselator*' -->
      <parameter type-id='type-id-379' name='tess' filepath='libtess/tess.c' line='462' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-35' name='data' filepath='libtess/tess.c' line='462' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluTessBeginContour(GLUtesselator*) -->
    <function-decl name='gluTessBeginContour' mangled-name='gluTessBeginContour' filepath='libtess/tess.c' line='476' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluTessBeginContour'>
      <!-- parameter of type 'GLUtesselator*' -->
      <parameter type-id='type-id-379' name='tess' filepath='libtess/tess.c' line='476' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluTessEndContour(GLUtesselator*) -->
    <function-decl name='gluTessEndContour' mangled-name='gluTessEndContour' filepath='libtess/tess.c' line='493' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluTessEndContour'>
      <!-- parameter of type 'GLUtesselator*' -->
      <parameter type-id='type-id-379' name='tess' filepath='libtess/tess.c' line='493' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluTessEndPolygon(GLUtesselator*) -->
    <function-decl name='gluTessEndPolygon' mangled-name='gluTessEndPolygon' filepath='libtess/tess.c' line='500' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluTessEndPolygon'>
      <!-- parameter of type 'GLUtesselator*' -->
      <parameter type-id='type-id-379' name='tess' filepath='libtess/tess.c' line='500' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluBeginPolygon(GLUtesselator*) -->
    <function-decl name='gluBeginPolygon' mangled-name='gluBeginPolygon' filepath='libtess/tess.c' line='611' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluBeginPolygon'>
      <!-- parameter of type 'GLUtesselator*' -->
      <parameter type-id='type-id-379' name='tess' filepath='libtess/tess.c' line='611' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluNextContour(GLUtesselator*, GLenum) -->
    <function-decl name='gluNextContour' mangled-name='gluNextContour' filepath='libtess/tess.c' line='620' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluNextContour'>
      <!-- parameter of type 'GLUtesselator*' -->
      <parameter type-id='type-id-379' name='tess' filepath='libtess/tess.c' line='620' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='type' filepath='libtess/tess.c' line='620' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluEndPolygon(GLUtesselator*) -->
    <function-decl name='gluEndPolygon' mangled-name='gluEndPolygon' filepath='libtess/tess.c' line='628' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluEndPolygon'>
      <!-- parameter of type 'GLUtesselator*' -->
      <parameter type-id='type-id-379' name='tess' filepath='libtess/tess.c' line='628' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- int (PQHeapKey, PQHeapKey) -->
    <function-type size-in-bits='64' id='type-id-380'>
      <!-- parameter of type 'typedef PQHeapKey' -->
      <parameter type-id='type-id-349'/>
      <!-- parameter of type 'typedef PQHeapKey' -->
      <parameter type-id='type-id-349'/>
      <!-- int -->
      <return type-id='type-id-8'/>
    </function-type>
    <!-- int (PQSortKey, PQSortKey) -->
    <function-type size-in-bits='64' id='type-id-381'>
      <!-- parameter of type 'typedef PQSortKey' -->
      <parameter type-id='type-id-360'/>
      <!-- parameter of type 'typedef PQSortKey' -->
      <parameter type-id='type-id-360'/>
      <!-- int -->
      <return type-id='type-id-8'/>
    </function-type>
    <!-- int (void*, DictListKey, DictListKey) -->
    <function-type size-in-bits='64' id='type-id-382'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-35'/>
      <!-- parameter of type 'typedef DictListKey' -->
      <parameter type-id='type-id-328'/>
      <!-- parameter of type 'typedef DictListKey' -->
      <parameter type-id='type-id-328'/>
      <!-- int -->
      <return type-id='type-id-8'/>
    </function-type>
    <!-- void (GLUmesh*) -->
    <function-type size-in-bits='64' id='type-id-383'>
      <!-- parameter of type 'GLUmesh*' -->
      <parameter type-id='type-id-370'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-type>
    <!-- void (GLdouble*, void**, GLfloat*, void**) -->
    <function-type size-in-bits='64' id='type-id-384'>
      <!-- parameter of type 'GLdouble*' -->
      <parameter type-id='type-id-392'/>
      <!-- parameter of type 'void**' -->
      <parameter type-id='type-id-191'/>
      <!-- parameter of type 'GLfloat*' -->
      <parameter type-id='type-id-45'/>
      <!-- parameter of type 'void**' -->
      <parameter type-id='type-id-191'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-type>
    <!-- void (GLdouble*, void**, GLfloat*, void**, void*) -->
    <function-type size-in-bits='64' id='type-id-385'>
      <!-- parameter of type 'GLdouble*' -->
      <parameter type-id='type-id-392'/>
      <!-- parameter of type 'void**' -->
      <parameter type-id='type-id-191'/>
      <!-- parameter of type 'GLfloat*' -->
      <parameter type-id='type-id-45'/>
      <!-- parameter of type 'void**' -->
      <parameter type-id='type-id-191'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-35'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-type>
    <!-- void (GLboolean) -->
    <function-type size-in-bits='64' id='type-id-386'>
      <!-- parameter of type 'typedef GLboolean' -->
      <parameter type-id='type-id-42'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-type>
    <!-- void (GLboolean, void*) -->
    <function-type size-in-bits='64' id='type-id-387'>
      <!-- parameter of type 'typedef GLboolean' -->
      <parameter type-id='type-id-42'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-35'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-type>
    <!-- void (GLenum) -->
    <function-type size-in-bits='64' id='type-id-388'>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-type>
    <!-- void (GLenum, void*) -->
    <function-type size-in-bits='64' id='type-id-389'>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-35'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-type>
    <!-- void (void*) -->
    <function-type size-in-bits='64' id='type-id-390'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-35'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-type>
    <!-- void (void*, void*) -->
    <function-type size-in-bits='64' id='type-id-391'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-35'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-35'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-type>
    <!-- void () -->
    <function-type size-in-bits='64' id='type-id-393'>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='libutil/error.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C99'>
    <!-- unsigned char -->
    <type-decl name='unsigned char' size-in-bits='8' id='type-id-394'/>
    <!-- unsigned int -->
    <type-decl name='unsigned int' size-in-bits='32' id='type-id-224'/>
    <!-- typedef unsigned int GLenum -->
    <typedef-decl name='GLenum' type-id='type-id-224' filepath='../../../include/GL/gl.h' line='149' column='1' id='type-id-36'/>
    <!-- typedef unsigned char GLubyte -->
    <typedef-decl name='GLubyte' type-id='type-id-394' filepath='../../../include/GL/gl.h' line='156' column='1' id='type-id-395'/>
    <!-- const GLubyte -->
    <qualified-type-def type-id='type-id-395' const='yes' id='type-id-396'/>
    <!-- const GLubyte* -->
    <pointer-type-def type-id='type-id-396' size-in-bits='64' id='type-id-397'/>
    <!-- const GLubyte* gluErrorString(GLenum) -->
    <function-decl name='gluErrorString' mangled-name='gluErrorString' filepath='libutil/error.c' line='66' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluErrorString'>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='errorCode' filepath='libutil/error.c' line='66' column='1'/>
      <!-- const GLubyte* -->
      <return type-id='type-id-397'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='libutil/mipmap.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C99'>
    <!-- int -->
    <type-decl name='int' size-in-bits='32' id='type-id-8'/>
    <!-- typedef int GLint -->
    <typedef-decl name='GLint' type-id='type-id-8' filepath='../../../include/GL/gl.h' line='155' column='1' id='type-id-50'/>
    <!-- typedef int GLsizei -->
    <typedef-decl name='GLsizei' type-id='type-id-8' filepath='../../../include/GL/gl.h' line='159' column='1' id='type-id-398'/>
    <!-- void* -->
    <pointer-type-def type-id='type-id-14' size-in-bits='64' id='type-id-35'/>
    <!-- GLint gluScaleImage(GLenum, GLsizei, GLsizei, GLenum, void*, GLsizei, GLsizei, GLenum, void*) -->
    <function-decl name='gluScaleImage' mangled-name='gluScaleImage' filepath='libutil/mipmap.c' line='3498' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluScaleImage'>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='format' filepath='libutil/mipmap.c' line='3498' column='1'/>
      <!-- parameter of type 'typedef GLsizei' -->
      <parameter type-id='type-id-398' name='widthin' filepath='libutil/mipmap.c' line='3498' column='1'/>
      <!-- parameter of type 'typedef GLsizei' -->
      <parameter type-id='type-id-398' name='heightin' filepath='libutil/mipmap.c' line='3498' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='typein' filepath='libutil/mipmap.c' line='3499' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-35' name='datain' filepath='libutil/mipmap.c' line='3499' column='1'/>
      <!-- parameter of type 'typedef GLsizei' -->
      <parameter type-id='type-id-398' name='widthout' filepath='libutil/mipmap.c' line='3500' column='1'/>
      <!-- parameter of type 'typedef GLsizei' -->
      <parameter type-id='type-id-398' name='heightout' filepath='libutil/mipmap.c' line='3500' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='typeout' filepath='libutil/mipmap.c' line='3500' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-35' name='dataout' filepath='libutil/mipmap.c' line='3501' column='1'/>
      <!-- typedef GLint -->
      <return type-id='type-id-50'/>
    </function-decl>
    <!-- GLint gluBuild1DMipmapLevels(GLenum, GLint, GLsizei, GLenum, GLenum, GLint, GLint, GLint, void*) -->
    <function-decl name='gluBuild1DMipmapLevels' mangled-name='gluBuild1DMipmapLevels' filepath='libutil/mipmap.c' line='3643' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluBuild1DMipmapLevels'>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='target' filepath='libutil/mipmap.c' line='3643' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='internalFormat' filepath='libutil/mipmap.c' line='3643' column='1'/>
      <!-- parameter of type 'typedef GLsizei' -->
      <parameter type-id='type-id-398' name='width' filepath='libutil/mipmap.c' line='3644' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='format' filepath='libutil/mipmap.c' line='3645' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='type' filepath='libutil/mipmap.c' line='3645' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='userLevel' filepath='libutil/mipmap.c' line='3646' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='baseLevel' filepath='libutil/mipmap.c' line='3646' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='maxLevel' filepath='libutil/mipmap.c' line='3646' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-35' name='data' filepath='libutil/mipmap.c' line='3647' column='1'/>
      <!-- typedef GLint -->
      <return type-id='type-id-50'/>
    </function-decl>
    <!-- GLint gluBuild1DMipmaps(GLenum, GLint, GLsizei, GLenum, GLenum, void*) -->
    <function-decl name='gluBuild1DMipmaps' mangled-name='gluBuild1DMipmaps' filepath='libutil/mipmap.c' line='3672' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluBuild1DMipmaps'>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='target' filepath='libutil/mipmap.c' line='3672' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='internalFormat' filepath='libutil/mipmap.c' line='3672' column='1'/>
      <!-- parameter of type 'typedef GLsizei' -->
      <parameter type-id='type-id-398' name='width' filepath='libutil/mipmap.c' line='3672' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='format' filepath='libutil/mipmap.c' line='3673' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='type' filepath='libutil/mipmap.c' line='3673' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-35' name='data' filepath='libutil/mipmap.c' line='3674' column='1'/>
      <!-- typedef GLint -->
      <return type-id='type-id-50'/>
    </function-decl>
    <!-- GLint gluBuild2DMipmapLevels(GLenum, GLint, GLsizei, GLsizei, GLenum, GLenum, GLint, GLint, GLint, void*) -->
    <function-decl name='gluBuild2DMipmapLevels' mangled-name='gluBuild2DMipmapLevels' filepath='libutil/mipmap.c' line='4552' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluBuild2DMipmapLevels'>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='target' filepath='libutil/mipmap.c' line='4552' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='internalFormat' filepath='libutil/mipmap.c' line='4552' column='1'/>
      <!-- parameter of type 'typedef GLsizei' -->
      <parameter type-id='type-id-398' name='width' filepath='libutil/mipmap.c' line='4553' column='1'/>
      <!-- parameter of type 'typedef GLsizei' -->
      <parameter type-id='type-id-398' name='height' filepath='libutil/mipmap.c' line='4553' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='format' filepath='libutil/mipmap.c' line='4554' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='type' filepath='libutil/mipmap.c' line='4554' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='userLevel' filepath='libutil/mipmap.c' line='4555' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='baseLevel' filepath='libutil/mipmap.c' line='4555' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='maxLevel' filepath='libutil/mipmap.c' line='4555' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-35' name='data' filepath='libutil/mipmap.c' line='4556' column='1'/>
      <!-- typedef GLint -->
      <return type-id='type-id-50'/>
    </function-decl>
    <!-- GLint gluBuild2DMipmaps(GLenum, GLint, GLsizei, GLsizei, GLenum, GLenum, void*) -->
    <function-decl name='gluBuild2DMipmaps' mangled-name='gluBuild2DMipmaps' filepath='libutil/mipmap.c' line='4584' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluBuild2DMipmaps'>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='target' filepath='libutil/mipmap.c' line='4584' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='internalFormat' filepath='libutil/mipmap.c' line='4584' column='1'/>
      <!-- parameter of type 'typedef GLsizei' -->
      <parameter type-id='type-id-398' name='width' filepath='libutil/mipmap.c' line='4585' column='1'/>
      <!-- parameter of type 'typedef GLsizei' -->
      <parameter type-id='type-id-398' name='height' filepath='libutil/mipmap.c' line='4585' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='format' filepath='libutil/mipmap.c' line='4586' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='type' filepath='libutil/mipmap.c' line='4586' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-35' name='data' filepath='libutil/mipmap.c' line='4587' column='1'/>
      <!-- typedef GLint -->
      <return type-id='type-id-50'/>
    </function-decl>
    <!-- GLint gluBuild3DMipmapLevels(GLenum, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLint, GLint, GLint, void*) -->
    <function-decl name='gluBuild3DMipmapLevels' mangled-name='gluBuild3DMipmapLevels' filepath='libutil/mipmap.c' line='8444' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluBuild3DMipmapLevels'>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='target' filepath='libutil/mipmap.c' line='8444' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='internalFormat' filepath='libutil/mipmap.c' line='8444' column='1'/>
      <!-- parameter of type 'typedef GLsizei' -->
      <parameter type-id='type-id-398' name='width' filepath='libutil/mipmap.c' line='8445' column='1'/>
      <!-- parameter of type 'typedef GLsizei' -->
      <parameter type-id='type-id-398' name='height' filepath='libutil/mipmap.c' line='8445' column='1'/>
      <!-- parameter of type 'typedef GLsizei' -->
      <parameter type-id='type-id-398' name='depth' filepath='libutil/mipmap.c' line='8445' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='format' filepath='libutil/mipmap.c' line='8446' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='type' filepath='libutil/mipmap.c' line='8446' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='userLevel' filepath='libutil/mipmap.c' line='8447' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='baseLevel' filepath='libutil/mipmap.c' line='8447' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='maxLevel' filepath='libutil/mipmap.c' line='8447' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-35' name='data' filepath='libutil/mipmap.c' line='8448' column='1'/>
      <!-- typedef GLint -->
      <return type-id='type-id-50'/>
    </function-decl>
    <!-- GLint gluBuild3DMipmaps(GLenum, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void*) -->
    <function-decl name='gluBuild3DMipmaps' mangled-name='gluBuild3DMipmaps' filepath='libutil/mipmap.c' line='8482' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluBuild3DMipmaps'>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='target' filepath='libutil/mipmap.c' line='8482' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='internalFormat' filepath='libutil/mipmap.c' line='8482' column='1'/>
      <!-- parameter of type 'typedef GLsizei' -->
      <parameter type-id='type-id-398' name='width' filepath='libutil/mipmap.c' line='8483' column='1'/>
      <!-- parameter of type 'typedef GLsizei' -->
      <parameter type-id='type-id-398' name='height' filepath='libutil/mipmap.c' line='8483' column='1'/>
      <!-- parameter of type 'typedef GLsizei' -->
      <parameter type-id='type-id-398' name='depth' filepath='libutil/mipmap.c' line='8483' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='format' filepath='libutil/mipmap.c' line='8484' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='type' filepath='libutil/mipmap.c' line='8484' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-35' name='data' filepath='libutil/mipmap.c' line='8484' column='1'/>
      <!-- typedef GLint -->
      <return type-id='type-id-50'/>
    </function-decl>
    <!-- void -->
    <type-decl name='void' id='type-id-14'/>
  </abi-instr>
  <abi-instr address-size='64' path='libutil/project.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C99'>
    <!-- double -->
    <type-decl name='double' size-in-bits='64' id='type-id-399'/>
    <!-- typedef double GLdouble -->
    <typedef-decl name='GLdouble' type-id='type-id-399' filepath='../../../include/GL/gl.h' line='162' column='1' id='type-id-314'/>
    <!-- typedef double GLclampd -->
    <typedef-decl name='GLclampd' type-id='type-id-399' filepath='../../../include/GL/gl.h' line='163' column='1' id='type-id-400'/>
    <!-- GLdouble* -->
    <pointer-type-def type-id='type-id-314' size-in-bits='64' id='type-id-392'/>
    <!-- GLint* -->
    <pointer-type-def type-id='type-id-50' size-in-bits='64' id='type-id-401'/>
    <!-- const GLdouble -->
    <qualified-type-def type-id='type-id-314' const='yes' id='type-id-402'/>
    <!-- const GLdouble* -->
    <pointer-type-def type-id='type-id-402' size-in-bits='64' id='type-id-403'/>
    <!-- const GLint -->
    <qualified-type-def type-id='type-id-50' const='yes' id='type-id-404'/>
    <!-- const GLint* -->
    <pointer-type-def type-id='type-id-404' size-in-bits='64' id='type-id-47'/>
    <!-- void gluOrtho2D(GLdouble, GLdouble, GLdouble, GLdouble) -->
    <function-decl name='gluOrtho2D' mangled-name='gluOrtho2D' filepath='libutil/project.c' line='57' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluOrtho2D'>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='left' filepath='libutil/project.c' line='57' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='right' filepath='libutil/project.c' line='57' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='bottom' filepath='libutil/project.c' line='57' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='top' filepath='libutil/project.c' line='57' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluPerspective(GLdouble, GLdouble, GLdouble, GLdouble) -->
    <function-decl name='gluPerspective' mangled-name='gluPerspective' filepath='libutil/project.c' line='65' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluPerspective'>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='fovy' filepath='libutil/project.c' line='65' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='aspect' filepath='libutil/project.c' line='65' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='zNear' filepath='libutil/project.c' line='65' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='zFar' filepath='libutil/project.c' line='65' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluLookAt(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) -->
    <function-decl name='gluLookAt' mangled-name='gluLookAt' filepath='libutil/project.c' line='108' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluLookAt'>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='eyex' filepath='libutil/project.c' line='108' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='eyey' filepath='libutil/project.c' line='108' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='eyez' filepath='libutil/project.c' line='108' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='centerx' filepath='libutil/project.c' line='108' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='centery' filepath='libutil/project.c' line='109' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='centerz' filepath='libutil/project.c' line='109' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='upx' filepath='libutil/project.c' line='109' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='upy' filepath='libutil/project.c' line='109' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='upz' filepath='libutil/project.c' line='110' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- GLint gluProject(GLdouble, GLdouble, GLdouble, const GLdouble*, const GLdouble*, const GLint*, GLdouble*, GLdouble*, GLdouble*) -->
    <function-decl name='gluProject' mangled-name='gluProject' filepath='libutil/project.c' line='234' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluProject'>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='objx' filepath='libutil/project.c' line='234' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='objy' filepath='libutil/project.c' line='234' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='objz' filepath='libutil/project.c' line='234' column='1'/>
      <!-- parameter of type 'const GLdouble*' -->
      <parameter type-id='type-id-403' name='modelMatrix' filepath='libutil/project.c' line='235' column='1'/>
      <!-- parameter of type 'const GLdouble*' -->
      <parameter type-id='type-id-403' name='projMatrix' filepath='libutil/project.c' line='236' column='1'/>
      <!-- parameter of type 'const GLint*' -->
      <parameter type-id='type-id-47' name='viewport' filepath='libutil/project.c' line='237' column='1'/>
      <!-- parameter of type 'GLdouble*' -->
      <parameter type-id='type-id-392' name='winx' filepath='libutil/project.c' line='238' column='1'/>
      <!-- parameter of type 'GLdouble*' -->
      <parameter type-id='type-id-392' name='winy' filepath='libutil/project.c' line='238' column='1'/>
      <!-- parameter of type 'GLdouble*' -->
      <parameter type-id='type-id-392' name='winz' filepath='libutil/project.c' line='238' column='1'/>
      <!-- typedef GLint -->
      <return type-id='type-id-50'/>
    </function-decl>
    <!-- GLint gluUnProject(GLdouble, GLdouble, GLdouble, const GLdouble*, const GLdouble*, const GLint*, GLdouble*, GLdouble*, GLdouble*) -->
    <function-decl name='gluUnProject' mangled-name='gluUnProject' filepath='libutil/project.c' line='269' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluUnProject'>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='winx' filepath='libutil/project.c' line='269' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='winy' filepath='libutil/project.c' line='269' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='winz' filepath='libutil/project.c' line='269' column='1'/>
      <!-- parameter of type 'const GLdouble*' -->
      <parameter type-id='type-id-403' name='modelMatrix' filepath='libutil/project.c' line='270' column='1'/>
      <!-- parameter of type 'const GLdouble*' -->
      <parameter type-id='type-id-403' name='projMatrix' filepath='libutil/project.c' line='271' column='1'/>
      <!-- parameter of type 'const GLint*' -->
      <parameter type-id='type-id-47' name='viewport' filepath='libutil/project.c' line='272' column='1'/>
      <!-- parameter of type 'GLdouble*' -->
      <parameter type-id='type-id-392' name='objx' filepath='libutil/project.c' line='273' column='1'/>
      <!-- parameter of type 'GLdouble*' -->
      <parameter type-id='type-id-392' name='objy' filepath='libutil/project.c' line='273' column='1'/>
      <!-- parameter of type 'GLdouble*' -->
      <parameter type-id='type-id-392' name='objz' filepath='libutil/project.c' line='273' column='1'/>
      <!-- typedef GLint -->
      <return type-id='type-id-50'/>
    </function-decl>
    <!-- GLint gluUnProject4(GLdouble, GLdouble, GLdouble, GLdouble, const GLdouble*, const GLdouble*, const GLint*, GLclampd, GLclampd, GLdouble*, GLdouble*, GLdouble*, GLdouble*) -->
    <function-decl name='gluUnProject4' mangled-name='gluUnProject4' filepath='libutil/project.c' line='308' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluUnProject4'>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='winx' filepath='libutil/project.c' line='308' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='winy' filepath='libutil/project.c' line='308' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='winz' filepath='libutil/project.c' line='308' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='clipw' filepath='libutil/project.c' line='308' column='1'/>
      <!-- parameter of type 'const GLdouble*' -->
      <parameter type-id='type-id-403' name='modelMatrix' filepath='libutil/project.c' line='309' column='1'/>
      <!-- parameter of type 'const GLdouble*' -->
      <parameter type-id='type-id-403' name='projMatrix' filepath='libutil/project.c' line='310' column='1'/>
      <!-- parameter of type 'const GLint*' -->
      <parameter type-id='type-id-47' name='viewport' filepath='libutil/project.c' line='311' column='1'/>
      <!-- parameter of type 'typedef GLclampd' -->
      <parameter type-id='type-id-400' name='nearVal' filepath='libutil/project.c' line='312' column='1'/>
      <!-- parameter of type 'typedef GLclampd' -->
      <parameter type-id='type-id-400' name='farVal' filepath='libutil/project.c' line='312' column='1'/>
      <!-- parameter of type 'GLdouble*' -->
      <parameter type-id='type-id-392' name='objx' filepath='libutil/project.c' line='313' column='1'/>
      <!-- parameter of type 'GLdouble*' -->
      <parameter type-id='type-id-392' name='objy' filepath='libutil/project.c' line='313' column='1'/>
      <!-- parameter of type 'GLdouble*' -->
      <parameter type-id='type-id-392' name='objz' filepath='libutil/project.c' line='313' column='1'/>
      <!-- parameter of type 'GLdouble*' -->
      <parameter type-id='type-id-392' name='objw' filepath='libutil/project.c' line='314' column='1'/>
      <!-- typedef GLint -->
      <return type-id='type-id-50'/>
    </function-decl>
    <!-- void gluPickMatrix(GLdouble, GLdouble, GLdouble, GLdouble, GLint*) -->
    <function-decl name='gluPickMatrix' mangled-name='gluPickMatrix' filepath='libutil/project.c' line='348' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluPickMatrix'>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='x' filepath='libutil/project.c' line='348' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='y' filepath='libutil/project.c' line='348' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='deltax' filepath='libutil/project.c' line='348' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='deltay' filepath='libutil/project.c' line='348' column='1'/>
      <!-- parameter of type 'GLint*' -->
      <parameter type-id='type-id-401' name='viewport' filepath='libutil/project.c' line='349' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='libutil/quad.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C99'>
    <!-- typedef unsigned char GLboolean -->
    <typedef-decl name='GLboolean' type-id='type-id-394' filepath='../../../include/GL/gl.h' line='150' column='1' id='type-id-42'/>
    <!-- typedef GLUquadric GLUquadric -->
    <typedef-decl name='GLUquadric' type-id='type-id-405' filepath='../../../include/GL/glu.h' line='275' column='1' id='type-id-406'/>
    <!-- typedef void ()* _GLUfuncptr -->
    <typedef-decl name='_GLUfuncptr' type-id='type-id-32' filepath='../../../include/GL/glu.h' line='287' column='1' id='type-id-37'/>
    <!-- struct GLUquadric -->
    <class-decl name='GLUquadric' size-in-bits='192' is-struct='yes' visibility='default' filepath='libutil/quad.c' line='45' column='1' id='type-id-405'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- GLint GLUquadric::normals -->
        <var-decl name='normals' type-id='type-id-50' visibility='default' filepath='libutil/quad.c' line='46' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- GLboolean GLUquadric::textureCoords -->
        <var-decl name='textureCoords' type-id='type-id-42' visibility='default' filepath='libutil/quad.c' line='47' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- GLint GLUquadric::orientation -->
        <var-decl name='orientation' type-id='type-id-50' visibility='default' filepath='libutil/quad.c' line='48' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- GLint GLUquadric::drawStyle -->
        <var-decl name='drawStyle' type-id='type-id-50' visibility='default' filepath='libutil/quad.c' line='49' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- void (typedef GLint)* GLUquadric::errorCallback -->
        <var-decl name='errorCallback' type-id='type-id-407' visibility='default' filepath='libutil/quad.c' line='50' column='1'/>
      </data-member>
    </class-decl>
    <!-- GLUquadric* -->
    <pointer-type-def type-id='type-id-406' size-in-bits='64' id='type-id-408'/>
    <!-- void ()* -->
    <pointer-type-def type-id='type-id-393' size-in-bits='64' id='type-id-32'/>
    <!-- void (typedef GLint)* -->
    <pointer-type-def type-id='type-id-409' size-in-bits='64' id='type-id-407'/>
    <!-- GLUquadric* gluNewQuadric() -->
    <function-decl name='gluNewQuadric' mangled-name='gluNewQuadric' filepath='libutil/quad.c' line='54' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluNewQuadric'>
      <!-- GLUquadric* -->
      <return type-id='type-id-408'/>
    </function-decl>
    <!-- void gluDeleteQuadric(GLUquadric*) -->
    <function-decl name='gluDeleteQuadric' mangled-name='gluDeleteQuadric' filepath='libutil/quad.c' line='73' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluDeleteQuadric'>
      <!-- parameter of type 'GLUquadric*' -->
      <parameter type-id='type-id-408' name='state' filepath='libutil/quad.c' line='73' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluQuadricCallback(GLUquadric*, GLenum, _GLUfuncptr) -->
    <function-decl name='gluQuadricCallback' mangled-name='gluQuadricCallback' filepath='libutil/quad.c' line='86' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluQuadricCallback'>
      <!-- parameter of type 'GLUquadric*' -->
      <parameter type-id='type-id-408' name='qobj' filepath='libutil/quad.c' line='86' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='which' filepath='libutil/quad.c' line='86' column='1'/>
      <!-- parameter of type 'typedef _GLUfuncptr' -->
      <parameter type-id='type-id-37' name='fn' filepath='libutil/quad.c' line='86' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluQuadricNormals(GLUquadric*, GLenum) -->
    <function-decl name='gluQuadricNormals' mangled-name='gluQuadricNormals' filepath='libutil/quad.c' line='99' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluQuadricNormals'>
      <!-- parameter of type 'GLUquadric*' -->
      <parameter type-id='type-id-408' name='qobj' filepath='libutil/quad.c' line='99' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='normals' filepath='libutil/quad.c' line='99' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluQuadricTexture(GLUquadric*, GLboolean) -->
    <function-decl name='gluQuadricTexture' mangled-name='gluQuadricTexture' filepath='libutil/quad.c' line='114' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluQuadricTexture'>
      <!-- parameter of type 'GLUquadric*' -->
      <parameter type-id='type-id-408' name='qobj' filepath='libutil/quad.c' line='114' column='1'/>
      <!-- parameter of type 'typedef GLboolean' -->
      <parameter type-id='type-id-42' name='textureCoords' filepath='libutil/quad.c' line='114' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluQuadricOrientation(GLUquadric*, GLenum) -->
    <function-decl name='gluQuadricOrientation' mangled-name='gluQuadricOrientation' filepath='libutil/quad.c' line='120' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluQuadricOrientation'>
      <!-- parameter of type 'GLUquadric*' -->
      <parameter type-id='type-id-408' name='qobj' filepath='libutil/quad.c' line='120' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='orientation' filepath='libutil/quad.c' line='120' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluQuadricDrawStyle(GLUquadric*, GLenum) -->
    <function-decl name='gluQuadricDrawStyle' mangled-name='gluQuadricDrawStyle' filepath='libutil/quad.c' line='134' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluQuadricDrawStyle'>
      <!-- parameter of type 'GLUquadric*' -->
      <parameter type-id='type-id-408' name='qobj' filepath='libutil/quad.c' line='134' column='1'/>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='drawStyle' filepath='libutil/quad.c' line='134' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluCylinder(GLUquadric*, GLdouble, GLdouble, GLdouble, GLint, GLint) -->
    <function-decl name='gluCylinder' mangled-name='gluCylinder' filepath='libutil/quad.c' line='150' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluCylinder'>
      <!-- parameter of type 'GLUquadric*' -->
      <parameter type-id='type-id-408' name='qobj' filepath='libutil/quad.c' line='150' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='baseRadius' filepath='libutil/quad.c' line='150' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='topRadius' filepath='libutil/quad.c' line='150' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='height' filepath='libutil/quad.c' line='151' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='slices' filepath='libutil/quad.c' line='151' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='stacks' filepath='libutil/quad.c' line='151' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluDisk(GLUquadric*, GLdouble, GLdouble, GLint, GLint) -->
    <function-decl name='gluDisk' mangled-name='gluDisk' filepath='libutil/quad.c' line='424' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluDisk'>
      <!-- parameter of type 'GLUquadric*' -->
      <parameter type-id='type-id-408' name='qobj' filepath='libutil/quad.c' line='424' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='innerRadius' filepath='libutil/quad.c' line='424' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='outerRadius' filepath='libutil/quad.c' line='424' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='slices' filepath='libutil/quad.c' line='425' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='loops' filepath='libutil/quad.c' line='425' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluPartialDisk(GLUquadric*, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble) -->
    <function-decl name='gluPartialDisk' mangled-name='gluPartialDisk' filepath='libutil/quad.c' line='431' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluPartialDisk'>
      <!-- parameter of type 'GLUquadric*' -->
      <parameter type-id='type-id-408' name='qobj' filepath='libutil/quad.c' line='431' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='innerRadius' filepath='libutil/quad.c' line='431' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='outerRadius' filepath='libutil/quad.c' line='432' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='slices' filepath='libutil/quad.c' line='432' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='loops' filepath='libutil/quad.c' line='432' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='startAngle' filepath='libutil/quad.c' line='433' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='sweepAngle' filepath='libutil/quad.c' line='433' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void gluSphere(GLUquadric*, GLdouble, GLint, GLint) -->
    <function-decl name='gluSphere' mangled-name='gluSphere' filepath='libutil/quad.c' line='694' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluSphere'>
      <!-- parameter of type 'GLUquadric*' -->
      <parameter type-id='type-id-408' name='qobj' filepath='libutil/quad.c' line='694' column='1'/>
      <!-- parameter of type 'typedef GLdouble' -->
      <parameter type-id='type-id-314' name='radius' filepath='libutil/quad.c' line='694' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='slices' filepath='libutil/quad.c' line='694' column='1'/>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50' name='stacks' filepath='libutil/quad.c' line='694' column='1'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void (GLint) -->
    <function-type size-in-bits='64' id='type-id-409'>
      <!-- parameter of type 'typedef GLint' -->
      <parameter type-id='type-id-50'/>
      <!-- void -->
      <return type-id='type-id-14'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='libutil/registry.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-T0fsxk/Mesa-8.0.5/src/glu/sgi' language='LANG_C99'>
    <!-- const GLubyte* gluGetString(GLenum) -->
    <function-decl name='gluGetString' mangled-name='gluGetString' filepath='libutil/registry.c' line='44' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluGetString'>
      <!-- parameter of type 'typedef GLenum' -->
      <parameter type-id='type-id-36' name='name' filepath='libutil/registry.c' line='44' column='1'/>
      <!-- const GLubyte* -->
      <return type-id='type-id-397'/>
    </function-decl>
    <!-- GLboolean gluCheckExtension(const GLubyte*, const GLubyte*) -->
    <function-decl name='gluCheckExtension' mangled-name='gluCheckExtension' filepath='libutil/registry.c' line='63' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='gluCheckExtension'>
      <!-- parameter of type 'const GLubyte*' -->
      <parameter type-id='type-id-397' name='extName' filepath='libutil/registry.c' line='63' column='1'/>
      <!-- parameter of type 'const GLubyte*' -->
      <parameter type-id='type-id-397' name='extString' filepath='libutil/registry.c' line='63' column='1'/>
      <!-- typedef GLboolean -->
      <return type-id='type-id-42'/>
    </function-decl>
  </abi-instr>
</abi-corpus>
