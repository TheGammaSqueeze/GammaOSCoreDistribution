/*
 * Copyright (C) 2022 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.security.cts.CVE_2021_39626;

import android.app.Activity;
import android.bluetooth.BluetoothAdapter;
import android.bluetooth.BluetoothManager;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;

import androidx.annotation.IntegerRes;
import androidx.test.InstrumentationRegistry;
import androidx.test.uiautomator.By;
import androidx.test.uiautomator.UiDevice;
import androidx.test.uiautomator.UiObject2;
import androidx.test.uiautomator.Until;

public class PocActivity extends Activity {
    private static final int TIMEOUT = 5000;
    private static final int REQUEST_ENABLE_BT = 1;
    private static final int REQUEST_DISABLE_BT = 2;

    int getInteger(@IntegerRes int resId) {
        return getResources().getInteger(resId);
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        try {
            String action = getIntent().getStringExtra(getString(R.string.btAction));
            UiDevice device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
            BluetoothManager bluetoothManager = getSystemService(BluetoothManager.class);
            BluetoothAdapter bluetoothAdapter = bluetoothManager.getAdapter();
            int code = REQUEST_ENABLE_BT;
            if (action.equals(BluetoothAdapter.ACTION_REQUEST_DISABLE)) {
                code = REQUEST_DISABLE_BT;
            }

            if ((action.equals(BluetoothAdapter.ACTION_REQUEST_ENABLE)
                    && !bluetoothAdapter.isEnabled())
                    || (action.equals(BluetoothAdapter.ACTION_REQUEST_DISABLE)
                            && bluetoothAdapter.isEnabled())) {
                Intent enableBtIntent = new Intent(action);
                startActivityForResult(enableBtIntent, code);

                // Wait for the activity to appear and the allow button
                device.wait(Until.hasObject(By.res(getString(R.string.allowButtonResName))),
                        TIMEOUT);

                // Click on the allow button
                UiObject2 object =
                        device.findObject(By.res(getString(R.string.allowButtonResName)));
                object.click();
            } else {
                sendTestResult(getInteger(R.integer.pass), "");
                finish();
                return;
            }
        } catch (Exception e) {
            sendTestResult(getInteger(R.integer.assumptionFailure), e.getMessage());
            return;
        }
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == REQUEST_ENABLE_BT && resultCode == Activity.RESULT_OK) {
            finish();
            sendTestResult(getInteger(R.integer.enabled), "");
        } else if (requestCode == REQUEST_DISABLE_BT && resultCode == Activity.RESULT_OK) {
            finish();
            sendTestResult(getInteger(R.integer.disabled), "");
        }
    }

    private void sendTestResult(int result, String message) {
        SharedPreferences sh =
                getSharedPreferences(getString(R.string.sharedPreferences), Context.MODE_PRIVATE);
        if (sh != null) {
            SharedPreferences.Editor edit = sh.edit();
            edit.putInt(getString(R.string.resultKey), result);
            edit.putString(getString(R.string.messageKey), message);
            edit.commit();
        }
    }
}
