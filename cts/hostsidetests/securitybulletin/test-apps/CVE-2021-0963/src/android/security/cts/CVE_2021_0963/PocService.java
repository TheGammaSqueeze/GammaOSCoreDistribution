/*
 * Copyright (C) 2023 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.security.cts.CVE_2021_0963;

import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.content.res.Resources;
import android.graphics.PixelFormat;
import android.os.Bundle;
import android.os.IBinder;
import android.os.RemoteCallback;
import android.view.Gravity;
import android.view.WindowManager;
import android.view.WindowManager.LayoutParams;
import android.widget.Button;

public class PocService extends Service {
    Button mButton;
    WindowManager mWindowManager;
    LayoutParams mLayoutParams;
    Intent mIntent;

    private static int getScreenWidth() {
        return Resources.getSystem().getDisplayMetrics().widthPixels;
    }

    private static int getScreenHeight() {
        return Resources.getSystem().getDisplayMetrics().heightPixels;
    }

    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }

    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        try {
            mIntent = intent;
            mWindowManager = getSystemService(WindowManager.class);
            mLayoutParams = new LayoutParams();
            mLayoutParams.type = LayoutParams.TYPE_APPLICATION_OVERLAY;
            mLayoutParams.flags =
                    LayoutParams.FLAG_NOT_TOUCH_MODAL | LayoutParams.FLAG_NOT_FOCUSABLE;
            mLayoutParams.format = PixelFormat.OPAQUE;
            mLayoutParams.gravity = Gravity.LEFT | Gravity.TOP;
            mLayoutParams.width = getScreenWidth();
            mLayoutParams.height = getScreenHeight();
            mLayoutParams.x = getScreenWidth() / 2;
            mLayoutParams.y = getScreenHeight() / 2;
            Context context = getApplicationContext();
            mButton = new Button(context);
            mButton.setText(context.getString(R.string.txtOverlayBtn));
            mWindowManager.addView(mButton, mLayoutParams);
            sendTestResult(getResources().getInteger(R.integer.noException), "");
        } catch (Exception e) {
            sendTestResult(getResources().getInteger(R.integer.assumptionFailure), e.getMessage());
        }
        return super.onStartCommand(intent, flags, startId);
    }

    @Override
    public void onDestroy() {
        try {
            mWindowManager.removeView(mButton);
        } catch (Exception e) {
            sendTestResult(getResources().getInteger(R.integer.assumptionFailure), e.getMessage());
        }
        super.onDestroy();
    }

    void sendTestResult(int status, String message) {
        try {
            RemoteCallback cb =
                    (RemoteCallback) mIntent.getExtras().get(getString(R.string.callback));
            Bundle res = new Bundle();
            res.putString(getString(R.string.message), message);
            res.putInt(getString(R.string.status), status);
            cb.sendResult(res);
        } catch (Exception e) {
            // ignore exception here
        }
    }
}
