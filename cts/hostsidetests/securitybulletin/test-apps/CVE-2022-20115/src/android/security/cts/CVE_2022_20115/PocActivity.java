/*
 * Copyright (C) 2022 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.security.cts.CVE_2022_20115;

import static org.junit.Assume.assumeNoException;

import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.SharedPreferences;
import android.telephony.CellIdentity;
import android.telephony.ServiceState;
import android.telephony.NetworkRegistrationInfo;
import android.os.Bundle;

import java.util.List;
import java.util.ArrayList;

public class PocActivity extends Activity {
    private void setResultForSP(int result, String message) {
        SharedPreferences sh =
                getSharedPreferences(getString(R.string.SHARED_PREFERENCE), Context.MODE_PRIVATE);
        SharedPreferences.Editor edit = sh.edit();
        edit.putInt(getString(R.string.RESULT_KEY), result);
        edit.putString(getString(R.string.MESSAGE_KEY), message);
        edit.commit();
    }

    private BroadcastReceiver broadcastReceiver = new BroadcastReceiver() {
        public void onReceive(Context context, Intent intent) {
            ServiceState serviceStateObj;
            Bundle bundle = intent.getExtras();
            if (bundle == null) {
                setResultForSP(getResources().getInteger(R.integer.ASSUMPTION_FAILURE),
                        getResources().getString(R.string.assumptionFailure));
                return;
            }

            serviceStateObj = bundle.getParcelable(
                    context.getResources().getString(R.string.serviceStateIntentExtra));
            if (serviceStateObj == null) {
                setResultForSP(getResources().getInteger(R.integer.ASSUMPTION_FAILURE),
                        getResources().getString(R.string.assumptionFailure));
                return;
            }

            List<NetworkRegistrationInfo> networkInfoList = new ArrayList<>();
            networkInfoList = serviceStateObj.getNetworkRegistrationInfoList();
            for (NetworkRegistrationInfo netRegInfo : networkInfoList) {
                long startTime = System.currentTimeMillis();
                CellIdentity cellIdentity = netRegInfo.getCellIdentity();
                while ((cellIdentity == null) && (System.currentTimeMillis() - startTime < context
                        .getResources().getInteger(R.integer.MAX_WAIT_TIME_MS))) {
                    /* waiting to receive airplane mode changes broadcast */
                    try {
                        Thread.sleep(context.getResources()
                                .getInteger(R.integer.BROADCAST_WAIT_TIME_MS));
                    } catch (InterruptedException e) {
                        assumeNoException(e);
                    }
                }

                if (cellIdentity != null) {
                    setResultForSP(getResources().getInteger(R.integer.FAIL),
                            getResources().getString(R.string.errorMessage));
                } else {
                    setResultForSP(getResources().getInteger(R.integer.PASS),
                            getResources().getString(R.string.passMessage));
                }
            }
        }
    };

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        IntentFilter intentFilter = new IntentFilter();
        intentFilter.addAction(Intent.ACTION_SERVICE_STATE);
        PocActivity pocActivity = PocActivity.this;
        pocActivity.registerReceiver(pocActivity.broadcastReceiver, intentFilter);
    }
}
