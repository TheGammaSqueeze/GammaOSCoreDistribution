# Copyright (c) 2018-2019, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

type vendor_qtidataservices_app, domain;
app_domain(vendor_qtidataservices_app);

hal_server_domain_bypass(vendor_qtidataservices_app, vendor_hal_cacertservice_qti)
binder_call(vendor_hal_cacertservice_qti_client, vendor_hal_cacertservice_qti_server)
binder_call(vendor_hal_cacertservice_qti_server, vendor_hal_cacertservice_qti_client)
hal_attribute_hwservice(vendor_hal_cacertservice_qti, vendor_hal_cacert_hwservice)

get_prop(vendor_qtidataservices_app, vendor_cnd_prop)
set_prop(vendor_qtidataservices_app,telephony_status_prop)

allow vendor_qtidataservices_app { app_api_service activity_service }:service_manager find;
allow vendor_qtidataservices_app self:qipcrtr_socket create_socket_perms_no_ioctl;
allow vendor_qtidataservices_app vendor_radio_data_file:dir r_dir_perms;

hal_client_domain(vendor_qtidataservices_app , vendor_hal_datafactory_qti)

hal_client_domain(vendor_qtidataservices_app , vendor_hal_iwlanservice_qti)

allow vendor_qtidataservices_app radio_service:service_manager find;

allow vendor_qtidataservices_app vendor_sysfs_data:file r_file_perms;

net_domain(vendor_qtidataservices_app)
hal_client_domain(vendor_qtidataservices_app, vendor_hal_perf)

allow vendor_qtidataservices_app vendor_netmgrd:fd use;
allow vendor_qtidataservices_app vendor_netmgrd:udp_socket { getattr getopt read write };
