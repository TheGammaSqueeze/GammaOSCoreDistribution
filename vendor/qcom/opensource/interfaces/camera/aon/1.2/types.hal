/*
 * Copyright (c) 2020-2021 The Linux Foundation. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *    * Redistributions of source code must retain the above copyright
 *      notice, this list of conditions and the following disclaimer.
 *    * Redistributions in binary form must reproduce the above
 *      copyright notice, this list of conditions and the following
 *      disclaimer in the documentation and/or other materials provided
 *      with the distribution.
 *    * Neither the name of The Linux Foundation. nor the names of its
 *      contributors may be used to endorse or promote products derived
 *      from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
 * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Changes from Qualcomm Innovation Center are provided under the following license:
 * Copyright (c) 2022 Qualcomm Innovation Center, Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted (subject to the limitations in the
 * disclaimer below) provided that the following conditions are met:
 *
 *    * Redistributions of source code must retain the above copyright
 *      notice, this list of conditions and the following disclaimer.
 *
 *    * Redistributions in binary form must reproduce the above
 *      copyright notice, this list of conditions and the following
 *      disclaimer in the documentation and/or other materials provided
 *      with the distribution.
 *
 *    * Neither the name of Qualcomm Innovation Center, Inc. nor the names of its
 *      contributors may be used to endorse or promote products derived
 *      from this software without specific prior written permission.
 *
 * NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE
 * GRANTED BY THIS LICENSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
 * HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
 * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package vendor.qti.hardware.camera.aon@1.2;

import vendor.qti.hardware.camera.aon@1.1;
import vendor.qti.hardware.camera.aon@1.1::types;
import vendor.qti.hardware.camera.aon@1.1::AONServiceType;

enum AONServiceType     : @1.1::AONServiceType
{
    Invalid             = -1,
    FaceDetectPro       = 3,
};

/**
 * The information passed from the event of FaceDetectBasic service type
 */
struct FaceInfoBasic {
    /**
     * Indicates the roll (or rotate) angle of the face
     * Valid values: -180 through 179, where a positive value means
     * the face is rotated clockwise in-plane
     */
    int32_t angle_roll;
};

/**
 * The information passed from the event of FaceDetectBasic service type
 */
struct face_pos_type {
    /**
     * X coordinate of a position
     * It is relative to the frame dimension width (exposed in FaceInfoPro)
     * It can be negative (e.g. a facial part can be estimated to be outside of the
     * frame boundary)
     */
    int32_t x;

    /**
     * Y coordinate of a position
     * It is relative to the frame dimension height (exposed in FaceInfoPro)
     * It can be negative (e.g. a facial part can be estimated to be outside of the
     * frame boundary)
     */
    int32_t y;
};

/**
 * The information per face passed from the event of FaceDetectPro service type
 */
struct face_info_pro_per_face {
    /**
     * Indicates the roll (or rotate) angle of the face
     * Valid values: -180 through 179, where a positive value means the face is
     * rotated clockwise in-plane
     */
    int32_t angle_roll;

    /**
     * Indicates the left/right direction of the face
     * Valid values: -180 through 179, where a positive value means the face is
     * facing right
     */
    int32_t angle_yaw;

    /**
     * Width of the face in the frame
     */
    uint32_t width;

    /**
     * height of the face in the frame
     */
    uint32_t height;

    /**
     * Position of the center of the face in the frame
     */
    face_pos_type center;
};


/**
 * The information passed from the event of FaceDetectPro service type
 */
struct FaceInfoPro {
    /**
     * The frame dimension where the reported face ROI/Parts Coordinates will be based on
     */
    uint32_t frame_dim_width;
    uint32_t frame_dim_height;

    /**
     * A vector of the per face information
     */
    vec<face_info_pro_per_face>  per_face;
};

/**
 * The event information callback from AON service to client
 */
struct AONEvtInfo {
    /**
     * Service type of the callback event.
     */
    AONServiceType srv_type;

    /**
     * FaceDetectBasic event information.
     */
    FaceInfoBasic face_info_basic;

    /**
     * FaceDetectPro event information.
     */
    FaceInfoPro face_info_pro;
};