class @hide @SystemApi VehicleAreaDoor package android.car
    field TIRAMISU_0 int DOOR_ROW_1_LEFT = 0x00000001;
    field TIRAMISU_0 int DOOR_ROW_1_RIGHT = 0x00000004;
    field TIRAMISU_0 int DOOR_ROW_2_LEFT = 0x00000010;
    field TIRAMISU_0 int DOOR_ROW_2_RIGHT = 0x00000040;
    field TIRAMISU_0 int DOOR_ROW_3_LEFT = 0x00000100;
    field TIRAMISU_0 int DOOR_ROW_3_RIGHT = 0x00000400;
    field TIRAMISU_0 int DOOR_HOOD = 0x10000000;
    field TIRAMISU_0 int DOOR_REAR = 0x20000000;
class @hiddenOnly @hide CarTransactionException package android.car
class @hiddenOnly @hide DriverMonitoringDetection package android.car.occupantawareness
    field TIRAMISU_0 int confidenceLevel;
    field TIRAMISU_0 boolean isLookingOnRoad;
    field TIRAMISU_0 long gazeDurationMillis;
    field TIRAMISU_0 Parcelable.Creator<DriverMonitoringDetection> CREATOR;
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
class @hiddenOnly @hide OccupantAwarenessDetection package android.car.occupantawareness
    field TIRAMISU_0 int VEHICLE_OCCUPANT_NONE = 0;
    field TIRAMISU_0 int VEHICLE_OCCUPANT_DRIVER = 1 << 2;
    field TIRAMISU_0 int VEHICLE_OCCUPANT_FRONT_PASSENGER = 1 << 1;
    field TIRAMISU_0 int VEHICLE_OCCUPANT_ROW_2_PASSENGER_LEFT = 1 << 3;
    field TIRAMISU_0 int VEHICLE_OCCUPANT_ROW_2_PASSENGER_CENTER = 1 << 4;
    field TIRAMISU_0 int VEHICLE_OCCUPANT_ROW_2_PASSENGER_RIGHT = 1 << 5;
    field TIRAMISU_0 int VEHICLE_OCCUPANT_ROW_3_PASSENGER_LEFT = 1 << 6;
    field TIRAMISU_0 int VEHICLE_OCCUPANT_ROW_3_PASSENGER_CENTER = 1 << 7;
    field TIRAMISU_0 int VEHICLE_OCCUPANT_ROW_3_PASSENGER_RIGHT = 1 << 8;
    field TIRAMISU_0 int VEHICLE_OCCUPANT_ALL_FRONT_OCCUPANTS = VEHICLE_OCCUPANT_DRIVER | VEHICLE_OCCUPANT_FRONT_PASSENGER;
    field TIRAMISU_0 int VEHICLE_OCCUPANT_ALL_ROW_2_OCCUPANTS = VEHICLE_OCCUPANT_ROW_2_PASSENGER_LEFT | VEHICLE_OCCUPANT_ROW_2_PASSENGER_RIGHT | VEHICLE_OCCUPANT_ROW_2_PASSENGER_CENTER;
    field TIRAMISU_0 int VEHICLE_OCCUPANT_ALL_ROW_3_OCCUPANTS = VEHICLE_OCCUPANT_ROW_3_PASSENGER_LEFT | VEHICLE_OCCUPANT_ROW_3_PASSENGER_RIGHT | VEHICLE_OCCUPANT_ROW_3_PASSENGER_CENTER;
    field TIRAMISU_0 int VEHICLE_OCCUPANT_ALL_OCCUPANTS = VEHICLE_OCCUPANT_ALL_FRONT_OCCUPANTS | VEHICLE_OCCUPANT_ALL_ROW_2_OCCUPANTS | VEHICLE_OCCUPANT_ALL_ROW_3_OCCUPANTS;
    field TIRAMISU_0 int CONFIDENCE_LEVEL_NONE = 0;
    field TIRAMISU_0 int CONFIDENCE_LEVEL_LOW = 1;
    field TIRAMISU_0 int CONFIDENCE_LEVEL_HIGH = 2;
    field TIRAMISU_0 int CONFIDENCE_LEVEL_MAX = 3;
    field TIRAMISU_0 int role;
    field TIRAMISU_0 long timestampMillis;
    field TIRAMISU_0 boolean isPresent;
    field TIRAMISU_0 GazeDetection gazeDetection;
    field TIRAMISU_0 DriverMonitoringDetection driverMonitoringDetection;
    field TIRAMISU_0 Parcelable.Creator<OccupantAwarenessDetection> CREATOR;
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 String toString();
class @hiddenOnly @hide Point3D package android.car.occupantawareness
    field TIRAMISU_0 double x;
    field TIRAMISU_0 double y;
    field TIRAMISU_0 double z;
    field TIRAMISU_0 Parcelable.Creator<Point3D> CREATOR;
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 String toString();
class @hiddenOnly @hide SystemStatusEvent package android.car.occupantawareness
    field TIRAMISU_0 int SYSTEM_STATUS_READY = 0;
    field TIRAMISU_0 int SYSTEM_STATUS_NOT_SUPPORTED = 1;
    field TIRAMISU_0 int SYSTEM_STATUS_NOT_READY = 2;
    field TIRAMISU_0 int SYSTEM_STATUS_SYSTEM_FAILURE = 3;
    field TIRAMISU_0 int DETECTION_TYPE_NONE = 0;
    field TIRAMISU_0 int DETECTION_TYPE_PRESENCE = 1 << 0;
    field TIRAMISU_0 int DETECTION_TYPE_GAZE = 1 << 1;
    field TIRAMISU_0 int DETECTION_TYPE_DRIVER_MONITORING = 1 << 2;
    field TIRAMISU_0 int systemStatus;
    field TIRAMISU_0 int detectionType;
    field TIRAMISU_0 Parcelable.Creator<SystemStatusEvent> CREATOR;
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 String toString();
class @hiddenOnly @hide GazeDetection package android.car.occupantawareness
    field TIRAMISU_0 int VEHICLE_REGION_UNKNOWN = 0;
    field TIRAMISU_0 int VEHICLE_REGION_CENTER_INSTRUMENT_CLUSTER = 1;
    field TIRAMISU_0 int VEHICLE_REGION_REAR_VIEW_MIRROR = 2;
    field TIRAMISU_0 int VEHICLE_REGION_LEFT_SIDE_MIRROR = 3;
    field TIRAMISU_0 int VEHICLE_REGION_RIGHT_SIDE_MIRROR = 4;
    field TIRAMISU_0 int VEHICLE_REGION_FORWARD_ROADWAY = 5;
    field TIRAMISU_0 int VEHICLE_REGION_LEFT_ROADWAY = 6;
    field TIRAMISU_0 int VEHICLE_REGION_RIGHT_ROADWAY = 7;
    field TIRAMISU_0 int VEHICLE_REGION_HEAD_UNIT_DISPLAY = 8;
    field TIRAMISU_0 int confidenceLevel;
    field TIRAMISU_0 Point3D leftEyePosition;
    field TIRAMISU_0 Point3D rightEyePosition;
    field TIRAMISU_0 Point3D headAngleUnitVector;
    field TIRAMISU_0 Point3D gazeAngleUnitVector;
    field TIRAMISU_0 int gazeTarget;
    field TIRAMISU_0 long durationOnTargetMillis;
    field TIRAMISU_0 Parcelable.Creator<GazeDetection> CREATOR;
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 String toString();
class @hiddenOnly @hide OccupantAwarenessManager package android.car.occupantawareness
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
    method TIRAMISU_0 int getCapabilityForRole(int role);
    method TIRAMISU_0 void registerChangeCallback(ChangeCallback callback);
    method TIRAMISU_0 void unregisterChangeCallback();
class OccupantAwarenessManager.ChangeCallback package android.car.occupantawareness
    method TIRAMISU_0 void onSystemStateChanged(SystemStatusEvent systemStatus);
    method TIRAMISU_0 void onDetectionEvent(OccupantAwarenessDetection event);
class @hiddenOnly @hide VehicleOilLevel package android.car
    field TIRAMISU_0 int CRITICALLY_LOW = 0;
    field TIRAMISU_0 int LOW = 1;
    field TIRAMISU_0 int NORMAL = 2;
    field TIRAMISU_0 int HIGH = 3;
    field TIRAMISU_0 int ERROR = 4;
class @hiddenOnly @hide VehiclePropertyType package android.car
    field TIRAMISU_0 int STRING = 0x00100000;
    field TIRAMISU_0 int BOOLEAN = 0x00200000;
    field TIRAMISU_0 int INT32 = 0x00400000;
    field TIRAMISU_0 int INT32_VEC = 0x00410000;
    field TIRAMISU_0 int INT64 = 0x00500000;
    field TIRAMISU_0 int INT64_VEC = 0x00510000;
    field TIRAMISU_0 int FLOAT = 0x00600000;
    field TIRAMISU_0 int FLOAT_VEC = 0x00610000;
    field TIRAMISU_0 int BYTES = 0x00700000;
    field TIRAMISU_0 int MIXED = 0x00e00000;
    field TIRAMISU_0 int MASK = 0x00ff0000;
class @hide @SystemApi ProjectionStatus package android.car.projection
    field TIRAMISU_0 int PROJECTION_STATE_INACTIVE = 0;
    field TIRAMISU_0 int PROJECTION_STATE_READY_TO_PROJECT = 1;
    field TIRAMISU_0 int PROJECTION_STATE_ACTIVE_FOREGROUND = 2;
    field TIRAMISU_0 int PROJECTION_STATE_ACTIVE_BACKGROUND = 3;
    field TIRAMISU_0 int PROJECTION_TRANSPORT_NONE = 0;
    field TIRAMISU_0 int PROJECTION_TRANSPORT_USB = 1;
    field TIRAMISU_0 int PROJECTION_TRANSPORT_WIFI = 2;
    field TIRAMISU_0 Creator<ProjectionStatus> CREATOR;
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 int getState();
    method TIRAMISU_0 String getPackageName();
    method TIRAMISU_0 Bundle getExtras();
    method TIRAMISU_0 boolean isActive();
    method TIRAMISU_0 int getTransport();
    method TIRAMISU_0 List<MobileDevice> getConnectedMobileDevices();
    method TIRAMISU_0 Builder builder(String packageName, int state);
    method TIRAMISU_0 String toString();
class ProjectionStatus.Builder package android.car.projection
    method TIRAMISU_0 Builder setProjectionTransport(int transport);
    method TIRAMISU_0 Builder addMobileDevice(MobileDevice mobileDevice);
    method TIRAMISU_0 Builder setExtras(Bundle extras);
    method TIRAMISU_0 ProjectionStatus build();
class ProjectionStatus.MobileDevice package android.car.projection
    field TIRAMISU_0 Creator<MobileDevice> CREATOR;
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 int getId();
    method TIRAMISU_0 String getName();
    method TIRAMISU_0 List<Integer> getAvailableTransports();
    method TIRAMISU_0 boolean isProjecting();
    method TIRAMISU_0 Bundle getExtras();
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 Builder builder(int id, String name);
    method TIRAMISU_0 String toString();
class ProjectionStatus.MobileDevice.Builder package android.car.projection
    method TIRAMISU_0 Builder addTransport(int transport);
    method TIRAMISU_0 Builder setProjecting(boolean projecting);
    method TIRAMISU_0 Builder setExtras(Bundle extras);
    method TIRAMISU_0 MobileDevice build();
class @hide @SystemApi ProjectionOptions package android.car.projection
    field TIRAMISU_0 int UI_MODE_FULL_SCREEN = 0;
    field TIRAMISU_0 int UI_MODE_BLENDED = 1;
    field TIRAMISU_0 int AP_MODE_NOT_SPECIFIED = 0;
    field TIRAMISU_0 int AP_MODE_TETHERED = 1;
    field TIRAMISU_0 int AP_MODE_LOHS_DYNAMIC_CREDENTIALS = 2;
    field TIRAMISU_0 int AP_MODE_LOHS_STATIC_CREDENTIALS = 3;
    method TIRAMISU_0 int getUiMode();
    method TIRAMISU_0 int getProjectionAccessPointMode();
    method TIRAMISU_0 ActivityOptions getActivityOptions();
    method TIRAMISU_0 ComponentName getConsentActivity();
    method TIRAMISU_0 Bundle toBundle();
    method TIRAMISU_0 @hiddenOnly Builder builder();
    method TIRAMISU_0 @hiddenOnly String toString();
class @hiddenOnly @hide ProjectionOptions.Builder package android.car.projection
    method TIRAMISU_0 Builder setProjectionActivityOptions(ActivityOptions activityOptions);
    method TIRAMISU_0 Builder setUiMode(int uiMode);
    method TIRAMISU_0 Builder setConsentActivity(ComponentName consentActivity);
    method TIRAMISU_0 Builder setAccessPointMode(int accessPointMode);
    method TIRAMISU_0 ProjectionOptions build();
class @hide @SystemApi CarEvsManager package android.car.evs
    field TIRAMISU_0 String EXTRA_SESSION_TOKEN = "android.car.evs.extra.SESSION_TOKEN";
    field TIRAMISU_0 int SERVICE_TYPE_REARVIEW = 0;
    field TIRAMISU_0 int SERVICE_TYPE_SURROUNDVIEW = 1;
    field TIRAMISU_0 int SERVICE_STATE_UNAVAILABLE = 0;
    field TIRAMISU_0 int SERVICE_STATE_INACTIVE = 1;
    field TIRAMISU_0 int SERVICE_STATE_REQUESTED = 2;
    field TIRAMISU_0 int SERVICE_STATE_ACTIVE = 3;
    field TIRAMISU_0 int STREAM_EVENT_NONE = 0;
    field TIRAMISU_0 int STREAM_EVENT_STREAM_STARTED = 1;
    field TIRAMISU_0 int STREAM_EVENT_STREAM_STOPPED = 2;
    field TIRAMISU_0 int STREAM_EVENT_FRAME_DROPPED = 3;
    field TIRAMISU_0 int STREAM_EVENT_TIMEOUT = 4;
    field TIRAMISU_0 int STREAM_EVENT_PARAMETER_CHANGED = 5;
    field TIRAMISU_0 int STREAM_EVENT_PRIMARY_OWNER_CHANGED = 6;
    field TIRAMISU_0 int STREAM_EVENT_OTHER_ERRORS = 7;
    field TIRAMISU_0 int ERROR_NONE = 0;
    field TIRAMISU_0 int ERROR_UNAVAILABLE = -1;
    field TIRAMISU_0 int ERROR_BUSY = -2;
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
    method TIRAMISU_0 void setStatusListener(Executor executor, CarEvsStatusListener listener);
    method TIRAMISU_0 void clearStatusListener();
    method TIRAMISU_0 void returnFrameBuffer(CarEvsBufferDescriptor buffer);
    method TIRAMISU_0 int startActivity(int type);
    method TIRAMISU_0 void stopActivity();
    method TIRAMISU_0 int startVideoStream(int type, IBinder token, Executor executor, CarEvsStreamCallback callback);
    method TIRAMISU_0 void stopVideoStream();
    method TIRAMISU_0 CarEvsStatus getCurrentStatus();
    method TIRAMISU_0 IBinder generateSessionToken();
    method TIRAMISU_0 boolean isSupported(int type);
interface CarEvsManager.CarEvsStatusListener package android.car.evs
    method TIRAMISU_0 void onStatusChanged(CarEvsStatus status);
interface CarEvsManager.CarEvsStreamCallback package android.car.evs
    method TIRAMISU_0 void onStreamEvent(int event);
    method TIRAMISU_0 void onNewFrame(CarEvsBufferDescriptor buffer);
class @hide @SystemApi CarEvsStatus package android.car.evs
    field TIRAMISU_0 Parcelable.Creator<CarEvsStatus> CREATOR;
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 int getState();
    method TIRAMISU_0 int getServiceType();
class @hide @SystemApi CarEvsBufferDescriptor package android.car.evs
    field TIRAMISU_0 Parcelable.Creator<CarEvsBufferDescriptor> CREATOR;
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 int getId();
    method TIRAMISU_0 HardwareBuffer getHardwareBuffer();
class @hide @SystemApi CarMediaManager package android.car.media
    field TIRAMISU_0 int MEDIA_SOURCE_MODE_PLAYBACK = 0;
    field TIRAMISU_0 int MEDIA_SOURCE_MODE_BROWSE = 1;
    method TIRAMISU_0 ComponentName getMediaSource(int mode);
    method TIRAMISU_0 void setMediaSource(ComponentName componentName, int mode);
    method TIRAMISU_0 void addMediaSourceListener(MediaSourceChangedListener callback, int mode);
    method TIRAMISU_0 void removeMediaSourceListener(MediaSourceChangedListener callback, int mode);
    method TIRAMISU_0 List<ComponentName> getLastMediaSources(int mode);
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
    method TIRAMISU_0 @hiddenOnly boolean isIndependentPlaybackConfig();
    method TIRAMISU_0 @hiddenOnly void setIndependentPlaybackConfig(boolean independent);
interface CarMediaManager.MediaSourceChangedListener package android.car.media
    method TIRAMISU_0 void onMediaSourceChanged(ComponentName componentName);
class @hide @SystemApi CarAudioPatchHandle package android.car.media
    field TIRAMISU_0 Parcelable.Creator<CarAudioPatchHandle> CREATOR;
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 void writeToParcel(Parcel out, int flags);
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 @hiddenOnly String getSourceAddress();
    method TIRAMISU_0 @hiddenOnly String getSinkAddress();
    method TIRAMISU_0 @hiddenOnly int getHandleId();
class CarAudioManager package android.car.media
    field TIRAMISU_0 int PRIMARY_AUDIO_ZONE = 0x0;
    field TIRAMISU_0 int INVALID_AUDIO_ZONE = 0xffffffff;
    field TIRAMISU_0 int AUDIO_FEATURE_DYNAMIC_ROUTING = 0x1;
    field TIRAMISU_0 int AUDIO_FEATURE_VOLUME_GROUP_MUTING = 0x2;
    field TIRAMISU_0 @hiddenOnly int INVALID_VOLUME_GROUP_ID = -1;
    field TIRAMISU_0 String AUDIOFOCUS_EXTRA_RECEIVE_DUCKING_EVENTS = "android.car.media.AUDIOFOCUS_EXTRA_RECEIVE_DUCKING_EVENTS";
    field TIRAMISU_0 @hiddenOnly String AUDIOFOCUS_EXTRA_REQUEST_ZONE_ID = "android.car.media.AUDIOFOCUS_EXTRA_REQUEST_ZONE_ID";
    method TIRAMISU_0 @hiddenOnly boolean isDynamicRoutingEnabled();
    method TIRAMISU_0 boolean isAudioFeatureEnabled(int audioFeature);
    method TIRAMISU_0 void setGroupVolume(int groupId, int index, int flags);
    method TIRAMISU_0 void setGroupVolume(int zoneId, int groupId, int index, int flags);
    method TIRAMISU_0 int getGroupMaxVolume(int groupId);
    method TIRAMISU_0 int getGroupMaxVolume(int zoneId, int groupId);
    method TIRAMISU_0 int getGroupMinVolume(int groupId);
    method TIRAMISU_0 int getGroupMinVolume(int zoneId, int groupId);
    method TIRAMISU_0 int getGroupVolume(int groupId);
    method TIRAMISU_0 int getGroupVolume(int zoneId, int groupId);
    method TIRAMISU_0 void setFadeTowardFront(float value);
    method TIRAMISU_0 void setBalanceTowardRight(float value);
    method TIRAMISU_0 String[] getExternalSources();
    method TIRAMISU_0 CarAudioPatchHandle createAudioPatch(String sourceAddress, int usage, int gainInMillibels);
    method TIRAMISU_0 void releaseAudioPatch(CarAudioPatchHandle patch);
    method TIRAMISU_0 int getVolumeGroupCount();
    method TIRAMISU_0 int getVolumeGroupCount(int zoneId);
    method TIRAMISU_0 int getVolumeGroupIdForUsage(int usage);
    method TIRAMISU_0 int getVolumeGroupIdForUsage(int zoneId, int usage);
    method TIRAMISU_0 int[] getUsagesForVolumeGroupId(int groupId);
    method TIRAMISU_0 int[] getUsagesForVolumeGroupId(int zoneId, int groupId);
    method TIRAMISU_0 boolean isPlaybackOnVolumeGroupActive(int zoneId, int groupId);
    method TIRAMISU_0 List<Integer> getAudioZoneIds();
    method TIRAMISU_0 @hiddenOnly int getZoneIdForUid(int uid);
    method TIRAMISU_0 @hiddenOnly boolean setZoneIdForUid(int zoneId, int uid);
    method TIRAMISU_0 @hiddenOnly boolean clearZoneIdForUid(int uid);
    method TIRAMISU_0 AudioDeviceInfo getOutputDeviceForUsage(int zoneId, int usage);
    method TIRAMISU_0 List<AudioDeviceInfo> getInputDevicesForZoneId(int zoneId);
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
    method TIRAMISU_0 void registerCarVolumeCallback(CarVolumeCallback callback);
    method TIRAMISU_0 void unregisterCarVolumeCallback(CarVolumeCallback callback);
    method TIRAMISU_0 boolean isVolumeGroupMuted(int zoneId, int groupId);
    method TIRAMISU_0 void setVolumeGroupMute(int zoneId, int groupId, boolean mute, int flags);
class CarAudioManager.CarVolumeCallback package android.car.media
    method TIRAMISU_0 void onGroupVolumeChanged(int zoneId, int groupId, int flags);
    method TIRAMISU_0 void onMasterMuteChanged(int zoneId, int flags);
    method TIRAMISU_0 void onGroupMuteChanged(int zoneId, int groupId, int flags);
class CarMediaIntents package android.car.media
    field TIRAMISU_0 String ACTION_MEDIA_TEMPLATE = "android.car.intent.action.MEDIA_TEMPLATE";
    field TIRAMISU_0 String EXTRA_MEDIA_COMPONENT = "android.car.intent.extra.MEDIA_COMPONENT";
    field TIRAMISU_0 String EXTRA_SEARCH_QUERY = "android.car.media.extra.SEARCH_QUERY";
class @hide @SystemApi CarAppBlockingPolicy package android.car.content.pm
    field TIRAMISU_0 AppBlockingPackageInfo[] whitelists;
    field TIRAMISU_0 AppBlockingPackageInfo[] blacklists;
    field TIRAMISU_0 Parcelable.Creator<CarAppBlockingPolicy> CREATOR;
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 int hashCode();
    method TIRAMISU_0 boolean equals(Object obj);
    method TIRAMISU_0 String toString();
class CarPackageManager package android.car.content.pm
    field TIRAMISU_0 int FLAG_SET_POLICY_WAIT_FOR_CHANGE = 0x1;
    field TIRAMISU_0 int FLAG_SET_POLICY_ADD = 0x2;
    field TIRAMISU_0 int FLAG_SET_POLICY_REMOVE = 0x4;
    field TIRAMISU_0 @hiddenOnly String BLOCKING_INTENT_EXTRA_BLOCKED_ACTIVITY_NAME = "blocked_activity";
    field TIRAMISU_0 @hiddenOnly String BLOCKING_INTENT_EXTRA_BLOCKED_TASK_ID = "blocked_task_id";
    field TIRAMISU_0 @hiddenOnly String BLOCKING_INTENT_EXTRA_ROOT_ACTIVITY_NAME = "root_activity_name";
    field TIRAMISU_0 @hiddenOnly String BLOCKING_INTENT_EXTRA_IS_ROOT_ACTIVITY_DO = "is_root_activity_do";
    field TIRAMISU_0 @hiddenOnly String BLOCKING_INTENT_EXTRA_DISPLAY_ID = "display_id";
    field TIRAMISU_0 @hiddenOnly String DRIVING_SAFETY_REGION_ALL = "android.car.drivingsafetyregion.all";
    field TIRAMISU_0 @hiddenOnly String DRIVING_SAFETY_ACTIVITY_METADATA_REGIONS = "android.car.drivingsafetyregions";
    field TIRAMISU_0 @hiddenOnly int ERROR_CODE_NO_PACKAGE = -100;
    field TIRAMISU_1 String MANIFEST_METADATA_TARGET_CAR_VERSION = "android.car.targetCarVersion";
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
    method TIRAMISU_0 void setAppBlockingPolicy(String packageName, CarAppBlockingPolicy policy, int flags);
    method TIRAMISU_0 @hiddenOnly void restartTask(int taskId);
    method TIRAMISU_0 boolean isActivityBackedBySafeActivity(ComponentName activityName);
    method TIRAMISU_0 @hiddenOnly void setEnableActivityBlocking(boolean enable);
    method TIRAMISU_0 boolean isActivityDistractionOptimized(String packageName, String className);
    method TIRAMISU_0 boolean isPendingIntentDistractionOptimized(PendingIntent pendingIntent);
    method TIRAMISU_0 boolean isServiceDistractionOptimized(String packageName, String className);
    method TIRAMISU_0 @hiddenOnly String getCurrentDrivingSafetyRegion();
    method TIRAMISU_0 @hiddenOnly void controlTemporaryActivityBlockingBypassingAsUser(String packageName, String activityClassName, boolean bypass, int userId);
    method TIRAMISU_0 @hiddenOnly List<String> getSupportedDrivingSafetyRegionsForActivityAsUser(String packageName, String activityClassName, int userId);
    method TIRAMISU_1 CarVersion getTargetCarVersion(String packageName);
    method TIRAMISU_1 CarVersion getTargetCarVersion();
class @hide @SystemApi AppBlockingPackageInfo package android.car.content.pm
    field TIRAMISU_0 String packageName;
    field TIRAMISU_0 int FLAG_SYSTEM_APP = 0x1;
    field TIRAMISU_0 int FLAG_WHOLE_ACTIVITY = 0x2;
    field TIRAMISU_0 int flags;
    field TIRAMISU_0 int minRevisionCode;
    field TIRAMISU_0 int maxRevisionCode;
    field TIRAMISU_0 Signature[] signatures;
    field TIRAMISU_0 String[] activities;
    field TIRAMISU_0 Parcelable.Creator<AppBlockingPackageInfo> CREATOR;
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 @hiddenOnly void verify();
    method TIRAMISU_0 @hiddenOnly boolean isActivityCovered(String className);
    method TIRAMISU_0 int hashCode();
    method TIRAMISU_0 boolean equals(Object obj);
    method TIRAMISU_0 String toString();
class @hide @SystemApi CarAppBlockingPolicyService package android.car.content.pm
    field TIRAMISU_0 String SERVICE_INTERFACE = "android.car.content.pm.CarAppBlockingPolicyService";
    method TIRAMISU_0 CarAppBlockingPolicy getAppBlockingPolicy();
    method TIRAMISU_0 int onStartCommand(Intent intent, int flags, int startId);
    method TIRAMISU_0 IBinder onBind(Intent intent);
    method TIRAMISU_0 boolean onUnbind(Intent intent);
class VehicleAreaSeat package android.car
    field TIRAMISU_0 int SEAT_UNKNOWN = 0;
    field TIRAMISU_0 int SEAT_ROW_1_LEFT = 0x0001;
    field TIRAMISU_0 int SEAT_ROW_1_CENTER = 0x0002;
    field TIRAMISU_0 int SEAT_ROW_1_RIGHT = 0x0004;
    field TIRAMISU_0 int SEAT_ROW_2_LEFT = 0x0010;
    field TIRAMISU_0 int SEAT_ROW_2_CENTER = 0x0020;
    field TIRAMISU_0 int SEAT_ROW_2_RIGHT = 0x0040;
    field TIRAMISU_0 int SEAT_ROW_3_LEFT = 0x0100;
    field TIRAMISU_0 int SEAT_ROW_3_CENTER = 0x0200;
    field TIRAMISU_0 int SEAT_ROW_3_RIGHT = 0x0400;
    field TIRAMISU_0 @hiddenOnly int SIDE_LEFT = -1;
    field TIRAMISU_0 @hiddenOnly int SIDE_CENTER = 0;
    field TIRAMISU_0 @hiddenOnly int SIDE_RIGHT = 1;
    method TIRAMISU_0 @hiddenOnly int fromRowAndSide(int rowNumber, int side);
class CarOccupantZoneManager package android.car
    field TIRAMISU_0 int DISPLAY_TYPE_UNKNOWN = 0;
    field TIRAMISU_0 int DISPLAY_TYPE_MAIN = 1;
    field TIRAMISU_0 int DISPLAY_TYPE_INSTRUMENT_CLUSTER = 2;
    field TIRAMISU_0 int DISPLAY_TYPE_HUD = 3;
    field TIRAMISU_0 int DISPLAY_TYPE_INPUT = 4;
    field TIRAMISU_0 int DISPLAY_TYPE_AUXILIARY = 5;
    field TIRAMISU_0 @hiddenOnly int OCCUPANT_TYPE_INVALID = -1;
    field TIRAMISU_0 int OCCUPANT_TYPE_DRIVER = 0;
    field TIRAMISU_0 int OCCUPANT_TYPE_FRONT_PASSENGER = 1;
    field TIRAMISU_0 int OCCUPANT_TYPE_REAR_PASSENGER = 2;
    field TIRAMISU_0 int ZONE_CONFIG_CHANGE_FLAG_DISPLAY = 0x1;
    field TIRAMISU_0 int ZONE_CONFIG_CHANGE_FLAG_USER = 0x2;
    field TIRAMISU_0 int ZONE_CONFIG_CHANGE_FLAG_AUDIO = 0x4;
    method TIRAMISU_0 List<OccupantZoneInfo> getAllOccupantZones();
    method TIRAMISU_0 List<Display> getAllDisplaysForOccupant(OccupantZoneInfo occupantZone);
    method TIRAMISU_0 Display getDisplayForOccupant(OccupantZoneInfo occupantZone, int displayType);
    method TIRAMISU_0 int getDisplayIdForDriver(int displayType);
    method TIRAMISU_0 int getAudioZoneIdForOccupant(OccupantZoneInfo occupantZone);
    method TIRAMISU_0 OccupantZoneInfo getOccupantForAudioZoneId(int audioZoneId);
    method TIRAMISU_0 int getDisplayType(Display display);
    method TIRAMISU_0 int getUserForOccupant(OccupantZoneInfo occupantZone);
    method TIRAMISU_0 @hiddenOnly boolean assignProfileUserToOccupantZone(OccupantZoneInfo occupantZone, int userId);
    method TIRAMISU_0 void registerOccupantZoneConfigChangeListener(OccupantZoneConfigChangeListener listener);
    method TIRAMISU_0 void unregisterOccupantZoneConfigChangeListener(OccupantZoneConfigChangeListener listener);
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
class CarOccupantZoneManager.OccupantZoneInfo package android.car
    field TIRAMISU_0 @hiddenOnly int INVALID_ZONE_ID = -1;
    field TIRAMISU_0 int zoneId;
    field TIRAMISU_0 int occupantType;
    field TIRAMISU_0 int seat;
    field TIRAMISU_0 Parcelable.Creator<OccupantZoneInfo> CREATOR;
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 boolean equals(Object other);
    method TIRAMISU_0 int hashCode();
    method TIRAMISU_0 String toString();
interface CarOccupantZoneManager.OccupantZoneConfigChangeListener package android.car
    method TIRAMISU_0 void onOccupantZoneConfigChanged(int changeFlags);
class @hiddenOnly @hide VehicleSeatOccupancyState package android.car
    field TIRAMISU_0 int UNKNOWN = 0;
    field TIRAMISU_0 int VACANT = 1;
    field TIRAMISU_0 int OCCUPIED = 2;
class VehicleGear package android.car
    field TIRAMISU_0 int GEAR_UNKNOWN = 0x0000;
    field TIRAMISU_0 int GEAR_NEUTRAL = 0x0001;
    field TIRAMISU_0 int GEAR_REVERSE = 0x0002;
    field TIRAMISU_0 int GEAR_PARK = 0x0004;
    field TIRAMISU_0 int GEAR_DRIVE = 0x0008;
    field TIRAMISU_0 int GEAR_FIRST = 0x0010;
    field TIRAMISU_0 int GEAR_SECOND = 0x0020;
    field TIRAMISU_0 int GEAR_THIRD = 0x0040;
    field TIRAMISU_0 int GEAR_FOURTH = 0x0080;
    field TIRAMISU_0 int GEAR_FIFTH = 0x0100;
    field TIRAMISU_0 int GEAR_SIXTH = 0x0200;
    field TIRAMISU_0 int GEAR_SEVENTH = 0x0400;
    field TIRAMISU_0 int GEAR_EIGHTH = 0x0800;
    field TIRAMISU_0 int GEAR_NINTH = 0x1000;
    method TIRAMISU_0 String toString(int o);
class EvConnectorType package android.car
    field TIRAMISU_0 int UNKNOWN = 0;
    field TIRAMISU_0 int J1772 = 1;
    field TIRAMISU_0 int MENNEKES = 2;
    field TIRAMISU_0 int CHADEMO = 3;
    field TIRAMISU_0 int COMBO_1 = 4;
    field TIRAMISU_0 int COMBO_2 = 5;
    field TIRAMISU_0 int TESLA_ROADSTER = 6;
    field TIRAMISU_0 int TESLA_HPWC = 7;
    field TIRAMISU_0 int TESLA_SUPERCHARGER = 8;
    field TIRAMISU_0 int GBT = 9;
    field TIRAMISU_0 int GBT_DC = 10;
    field TIRAMISU_0 int SCAME = 11;
    field TIRAMISU_0 int OTHER = 101;
class @hide @SystemApi CarUserManager package android.car.user
    field TIRAMISU_0 @hiddenOnly String TAG = CarUserManager.class.getSimpleName();
    field TIRAMISU_0 int USER_LIFECYCLE_EVENT_TYPE_STARTING = CommonConstants.USER_LIFECYCLE_EVENT_TYPE_STARTING;
    field TIRAMISU_0 int USER_LIFECYCLE_EVENT_TYPE_SWITCHING = CommonConstants.USER_LIFECYCLE_EVENT_TYPE_SWITCHING;
    field TIRAMISU_0 int USER_LIFECYCLE_EVENT_TYPE_UNLOCKING = CommonConstants.USER_LIFECYCLE_EVENT_TYPE_UNLOCKING;
    field TIRAMISU_0 int USER_LIFECYCLE_EVENT_TYPE_UNLOCKED = CommonConstants.USER_LIFECYCLE_EVENT_TYPE_UNLOCKED;
    field TIRAMISU_0 @hiddenOnly int USER_LIFECYCLE_EVENT_TYPE_POST_UNLOCKED = CommonConstants.USER_LIFECYCLE_EVENT_TYPE_POST_UNLOCKED;
    field TIRAMISU_0 int USER_LIFECYCLE_EVENT_TYPE_STOPPING = CommonConstants.USER_LIFECYCLE_EVENT_TYPE_STOPPING;
    field TIRAMISU_0 int USER_LIFECYCLE_EVENT_TYPE_STOPPED = CommonConstants.USER_LIFECYCLE_EVENT_TYPE_STOPPED;
    field TIRAMISU_1 int USER_LIFECYCLE_EVENT_TYPE_CREATED = CommonConstants.USER_LIFECYCLE_EVENT_TYPE_CREATED;
    field TIRAMISU_0 @hiddenOnly String BUNDLE_PARAM_ACTION = "action";
    field TIRAMISU_0 @hiddenOnly String BUNDLE_PARAM_PREVIOUS_USER_ID = "previous_user";
    field TIRAMISU_0 @hiddenOnly int USER_IDENTIFICATION_ASSOCIATION_TYPE_KEY_FOB = 1;
    field TIRAMISU_0 @hiddenOnly int USER_IDENTIFICATION_ASSOCIATION_TYPE_CUSTOM_1 = 101;
    field TIRAMISU_0 @hiddenOnly int USER_IDENTIFICATION_ASSOCIATION_TYPE_CUSTOM_2 = 102;
    field TIRAMISU_0 @hiddenOnly int USER_IDENTIFICATION_ASSOCIATION_TYPE_CUSTOM_3 = 103;
    field TIRAMISU_0 @hiddenOnly int USER_IDENTIFICATION_ASSOCIATION_TYPE_CUSTOM_4 = 104;
    field TIRAMISU_0 @hiddenOnly int USER_IDENTIFICATION_ASSOCIATION_SET_VALUE_ASSOCIATE_CURRENT_USER = 1;
    field TIRAMISU_0 @hiddenOnly int USER_IDENTIFICATION_ASSOCIATION_SET_VALUE_DISASSOCIATE_CURRENT_USER = 2;
    field TIRAMISU_0 @hiddenOnly int USER_IDENTIFICATION_ASSOCIATION_SET_VALUE_DISASSOCIATE_ALL_USERS = 3;
    field TIRAMISU_0 @hiddenOnly int USER_IDENTIFICATION_ASSOCIATION_VALUE_UNKNOWN = 1;
    field TIRAMISU_0 @hiddenOnly int USER_IDENTIFICATION_ASSOCIATION_VALUE_ASSOCIATE_CURRENT_USER = 2;
    field TIRAMISU_0 @hiddenOnly int USER_IDENTIFICATION_ASSOCIATION_VALUE_ASSOCIATED_ANOTHER_USER = 3;
    field TIRAMISU_0 @hiddenOnly int USER_IDENTIFICATION_ASSOCIATION_VALUE_NOT_ASSOCIATED_ANY_USER = 4;
    method TIRAMISU_0 @hiddenOnly AsyncFuture<UserSwitchResult> switchUser(int targetUserId);
    method TIRAMISU_0 @hiddenOnly AsyncFuture<UserSwitchResult> logoutUser();
    method TIRAMISU_0 @hiddenOnly AsyncFuture<UserCreationResult> createGuest(String name);
    method TIRAMISU_0 @hiddenOnly AsyncFuture<UserCreationResult> createUser(String name, int flags);
    method TIRAMISU_0 @hiddenOnly void updatePreCreatedUsers();
    method TIRAMISU_0 @hiddenOnly UserRemovalResult removeUser(int userId);
    method TIRAMISU_0 void addListener(Executor executor, UserLifecycleListener listener);
    method TIRAMISU_0 void addListener(Executor executor, UserLifecycleEventFilter filter, UserLifecycleListener listener);
    method TIRAMISU_0 void removeListener(UserLifecycleListener listener);
    method TIRAMISU_0 @hiddenOnly boolean isUserHalUserAssociationSupported();
    method TIRAMISU_0 @hiddenOnly UserIdentificationAssociationResponse getUserIdentificationAssociation(int types);
    method TIRAMISU_0 @hiddenOnly AsyncFuture<UserIdentificationAssociationResponse> setUserIdentificationAssociation(int[] types, int[] values);
    method TIRAMISU_0 @hiddenOnly void setUserSwitchUiCallback(UserSwitchUiCallback callback);
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
    method TIRAMISU_0 @hiddenOnly String lifecycleEventTypeToString(int type);
    method TIRAMISU_0 @hiddenOnly boolean isValidUser(int userId);
class @hide @SystemApi CarUserManager.UserLifecycleEvent package android.car.user
    method TIRAMISU_0 int getEventType();
    method TIRAMISU_0 @hiddenOnly int getUserId();
    method TIRAMISU_0 UserHandle getUserHandle();
    method TIRAMISU_0 @hiddenOnly int getPreviousUserId();
    method TIRAMISU_0 UserHandle getPreviousUserHandle();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 boolean equals(Object o);
    method TIRAMISU_0 int hashCode();
interface @hide @SystemApi CarUserManager.UserLifecycleListener package android.car.user
    method TIRAMISU_0 void onEvent(UserLifecycleEvent event);
interface @hiddenOnly @hide CarUserManager.UserSwitchUiCallback package android.car.user
    method TIRAMISU_0 void showUserSwitchDialog(int userId);
class @hiddenOnly @hide ExperimentalCarUserManager package android.car.user
    field TIRAMISU_0 @hiddenOnly String TAG = ExperimentalCarUserManager.class.getSimpleName();
    method TIRAMISU_0 @hiddenOnly AndroidFuture<UserCreationResult> createDriver(String name, boolean admin);
    method TIRAMISU_0 @hiddenOnly int createPassenger(String name, int driverId);
    method TIRAMISU_0 @hiddenOnly AndroidFuture<UserSwitchResult> switchDriver(int driverId);
    method TIRAMISU_0 @hiddenOnly List<Integer> getAllDrivers();
    method TIRAMISU_0 @hiddenOnly List<Integer> getPassengers(int driverId);
    method TIRAMISU_0 @hiddenOnly boolean startPassenger(int passengerId, int zoneId);
    method TIRAMISU_0 @hiddenOnly boolean stopPassenger(int passengerId);
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
class @hiddenOnly @hide UserStopResult package android.car.user
    field TIRAMISU_0 int STATUS_SUCCESSFUL = CommonResults.STATUS_SUCCESSFUL;
    field TIRAMISU_0 int STATUS_ANDROID_FAILURE = CommonResults.STATUS_ANDROID_FAILURE;
    field TIRAMISU_0 int STATUS_USER_DOES_NOT_EXIST = CommonResults.LAST_COMMON_STATUS + 1;
    field TIRAMISU_0 int STATUS_FAILURE_SYSTEM_USER = CommonResults.LAST_COMMON_STATUS + 2;
    field TIRAMISU_0 int STATUS_FAILURE_CURRENT_USER = CommonResults.LAST_COMMON_STATUS + 3;
    field TIRAMISU_0 Parcelable.Creator<UserStopResult> CREATOR;
    method TIRAMISU_0 boolean isSuccess(int status);
    method TIRAMISU_0 boolean isSuccess();
    method TIRAMISU_0 @hiddenOnly String statusToString(int value);
    method TIRAMISU_0 int getStatus();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 void writeToParcel(android.os.Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class @hiddenOnly @hide UserCreationResult package android.car.user
    field TIRAMISU_0 @hiddenOnly int STATUS_SUCCESSFUL = CommonResults.STATUS_SUCCESSFUL;
    field TIRAMISU_0 @hiddenOnly int STATUS_ANDROID_FAILURE = CommonResults.STATUS_ANDROID_FAILURE;
    field TIRAMISU_0 @hiddenOnly int STATUS_HAL_FAILURE = CommonResults.STATUS_HAL_FAILURE;
    field TIRAMISU_0 @hiddenOnly int STATUS_HAL_INTERNAL_FAILURE = CommonResults.STATUS_HAL_INTERNAL_FAILURE;
    field TIRAMISU_0 int STATUS_INVALID_REQUEST = CommonResults.STATUS_INVALID_REQUEST;
    field TIRAMISU_0 Parcelable.Creator<UserCreationResult> CREATOR;
    method TIRAMISU_0 boolean isSuccess();
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 @hiddenOnly String statusToString(int value);
    method TIRAMISU_0 int getStatus();
    method TIRAMISU_0 Integer getAndroidFailureStatus();
    method TIRAMISU_0 UserHandle getUser();
    method TIRAMISU_0 String getErrorMessage();
    method TIRAMISU_0 @hiddenOnly String getInternalErrorMessage();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 void writeToParcel(android.os.Parcel dest, int flags);
class @hiddenOnly @hide UserRemovalResult package android.car.user
    field TIRAMISU_0 int STATUS_SUCCESSFUL = CommonResults.STATUS_SUCCESSFUL;
    field TIRAMISU_0 int STATUS_ANDROID_FAILURE = CommonResults.STATUS_ANDROID_FAILURE;
    field TIRAMISU_0 int STATUS_INVALID_REQUEST = CommonResults.STATUS_INVALID_REQUEST;
    field TIRAMISU_0 int STATUS_USER_DOES_NOT_EXIST = CommonResults.LAST_COMMON_STATUS + 1;
    field TIRAMISU_0 int STATUS_SUCCESSFUL_LAST_ADMIN_REMOVED = CommonResults.LAST_COMMON_STATUS + 2;
    field TIRAMISU_0 int STATUS_SUCCESSFUL_SET_EPHEMERAL = CommonResults.LAST_COMMON_STATUS + 3;
    field TIRAMISU_0 int STATUS_SUCCESSFUL_LAST_ADMIN_SET_EPHEMERAL = CommonResults.LAST_COMMON_STATUS + 4;
    field TIRAMISU_0 Parcelable.Creator<UserRemovalResult> CREATOR;
    method TIRAMISU_0 boolean isSuccess();
    method TIRAMISU_0 @hiddenOnly String statusToString(int value);
    method TIRAMISU_0 int getStatus();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 void writeToParcel(android.os.Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class CommonResults package android.car.user
    field TIRAMISU_0 int STATUS_SUCCESSFUL = 1;
    field TIRAMISU_0 int STATUS_ANDROID_FAILURE = 2;
    field TIRAMISU_0 int STATUS_HAL_FAILURE = 3;
    field TIRAMISU_0 int STATUS_HAL_INTERNAL_FAILURE = 4;
    field TIRAMISU_0 int STATUS_INVALID_REQUEST = 5;
    field TIRAMISU_0 int STATUS_UX_RESTRICTION_FAILURE = 6;
    field TIRAMISU_0 int LAST_COMMON_STATUS = 100;
interface @hiddenOnly @hide OperationResult package android.car.user
    method TIRAMISU_0 boolean isSuccess();
class @hide @SystemApi UserLifecycleEventFilter package android.car.user
    field TIRAMISU_0 Parcelable.Creator<UserLifecycleEventFilter> CREATOR;
    method TIRAMISU_0 @hiddenOnly int[] getEventTypes();
    method TIRAMISU_0 @hiddenOnly int[] getUserIds();
    method TIRAMISU_0 boolean apply(UserLifecycleEvent event);
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 boolean equals(Object o);
    method TIRAMISU_0 int hashCode();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class @hiddenOnly @hide UserLifecycleEventFilter.Builder package android.car.user
    method TIRAMISU_0 Builder addEventType(int eventType);
    method TIRAMISU_0 Builder addUser(UserHandle userHandle);
    method TIRAMISU_0 UserLifecycleEventFilter build();
class @hiddenOnly @hide UserStartResult package android.car.user
    field TIRAMISU_0 @hiddenOnly int STATUS_SUCCESSFUL = CommonResults.STATUS_SUCCESSFUL;
    field TIRAMISU_0 @hiddenOnly int STATUS_ANDROID_FAILURE = CommonResults.STATUS_ANDROID_FAILURE;
    field TIRAMISU_0 @hiddenOnly int STATUS_SUCCESSFUL_USER_IS_CURRENT_USER = CommonResults.LAST_COMMON_STATUS + 1;
    field TIRAMISU_0 @hiddenOnly int STATUS_USER_DOES_NOT_EXIST = CommonResults.LAST_COMMON_STATUS + 2;
    field TIRAMISU_0 Parcelable.Creator<UserStartResult> CREATOR;
    method TIRAMISU_0 boolean isSuccess();
    method TIRAMISU_0 @hiddenOnly String statusToString(int value);
    method TIRAMISU_0 int getStatus();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 void writeToParcel(android.os.Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class @hiddenOnly @hide UserIdentificationAssociationResponse package android.car.user
    field TIRAMISU_0 Parcelable.Creator<UserIdentificationAssociationResponse> CREATOR;
    method TIRAMISU_0 UserIdentificationAssociationResponse forFailure();
    method TIRAMISU_0 UserIdentificationAssociationResponse forFailure(String errorMessage);
    method TIRAMISU_0 UserIdentificationAssociationResponse forSuccess(int[] values);
    method TIRAMISU_0 UserIdentificationAssociationResponse forSuccess(int[] values, String errorMessage);
    method TIRAMISU_0 boolean isSuccess();
    method TIRAMISU_0 String getErrorMessage();
    method TIRAMISU_0 int[] getValues();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 void writeToParcel(android.os.Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class @hiddenOnly @hide UserSwitchResult package android.car.user
    field TIRAMISU_0 int STATUS_SUCCESSFUL = CommonResults.STATUS_SUCCESSFUL;
    field TIRAMISU_0 int STATUS_ANDROID_FAILURE = CommonResults.STATUS_ANDROID_FAILURE;
    field TIRAMISU_0 int STATUS_HAL_FAILURE = CommonResults.STATUS_HAL_FAILURE;
    field TIRAMISU_0 int STATUS_HAL_INTERNAL_FAILURE = CommonResults.STATUS_HAL_INTERNAL_FAILURE;
    field TIRAMISU_0 int STATUS_INVALID_REQUEST = CommonResults.STATUS_INVALID_REQUEST;
    field TIRAMISU_0 int STATUS_UX_RESTRICTION_FAILURE = CommonResults.STATUS_UX_RESTRICTION_FAILURE;
    field TIRAMISU_0 int STATUS_OK_USER_ALREADY_IN_FOREGROUND = CommonResults.LAST_COMMON_STATUS + 1;
    field TIRAMISU_0 int STATUS_TARGET_USER_ALREADY_BEING_SWITCHED_TO = CommonResults.LAST_COMMON_STATUS + 2;
    field TIRAMISU_0 int STATUS_TARGET_USER_ABANDONED_DUE_TO_A_NEW_REQUEST = CommonResults.LAST_COMMON_STATUS + 3;
    field TIRAMISU_0 int STATUS_NOT_SWITCHABLE = CommonResults.LAST_COMMON_STATUS + 4;
    field TIRAMISU_0 int STATUS_NOT_LOGGED_IN = CommonResults.LAST_COMMON_STATUS + 5;
    field TIRAMISU_0 Parcelable.Creator<UserSwitchResult> CREATOR;
    method TIRAMISU_0 boolean isSuccess();
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 @hiddenOnly String statusToString(int value);
    method TIRAMISU_0 int getStatus();
    method TIRAMISU_0 @hiddenOnly Integer getAndroidFailureStatus();
    method TIRAMISU_0 String getErrorMessage();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 void writeToParcel(android.os.Parcel dest, int flags);
class @hiddenOnly @hide VehicleLightState package android.car
    field TIRAMISU_0 int OFF = 0;
    field TIRAMISU_0 int ON = 1;
    field TIRAMISU_0 int DAYTIME_RUNNING = 2;
class @hiddenOnly @hide CarLibLog package android.car
    field TIRAMISU_0 String TAG_CAR = "CAR.L";
    field TIRAMISU_0 String TAG_CLUSTER = TAG_CAR + ".CLUSTER";
    field TIRAMISU_0 String TAG_INPUT = TAG_CAR + ".INPUT";
    field TIRAMISU_0 String TAG_NAV = TAG_CAR + ".NAV";
    field TIRAMISU_0 String TAG_SENSOR = TAG_CAR + ".SENSOR";
    field TIRAMISU_0 String TAG_DIAGNOSTIC = TAG_CAR + ".DIAGNOSTIC";
class @hiddenOnly @hide VehicleHvacFanDirection package android.car
    field TIRAMISU_0 int FACE = 0x1;
    field TIRAMISU_0 int FLOOR = 0x2;
    field TIRAMISU_0 int DEFROST = 0x4;
class @hiddenOnly @hide CarLocationTestHelper package android.car.test
    method TIRAMISU_0 @hiddenOnly boolean injectLocation(Location location, Context context);
class @hiddenOnly @hide CarTestManager package android.car.test
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
    method TIRAMISU_0 @hiddenOnly void stopCarService(IBinder token);
    method TIRAMISU_0 @hiddenOnly void startCarService(IBinder token);
class VehicleAreaType package android.car
    field TIRAMISU_0 int VEHICLE_AREA_TYPE_GLOBAL = 0;
    field TIRAMISU_0 int VEHICLE_AREA_TYPE_WINDOW = 2;
    field TIRAMISU_0 int VEHICLE_AREA_TYPE_SEAT = 3;
    field TIRAMISU_0 int VEHICLE_AREA_TYPE_DOOR = 4;
    field TIRAMISU_0 int VEHICLE_AREA_TYPE_MIRROR = 5;
    field TIRAMISU_0 int VEHICLE_AREA_TYPE_WHEEL = 6;
class ApiVersion package android.car
    method TIRAMISU_1 boolean isAtLeast(T requiredVersion);
    method TIRAMISU_1 int getMajorVersion();
    method TIRAMISU_1 int getMinorVersion();
    method TIRAMISU_1 @hiddenOnly boolean equals(Object obj);
    method TIRAMISU_1 @hiddenOnly int hashCode();
    method TIRAMISU_1 @hiddenOnly String toString();
    method TIRAMISU_1 @hiddenOnly void writeToParcel(Parcel dest);
    method TIRAMISU_1 @hiddenOnly T readFromParcel(Parcel source, ApiVersionFactory<T> factory);
interface @hiddenOnly @hide ApiVersion.ApiVersionFactory package android.car
    method  T forMajorAndMinor(int major, int minor);
class PlatformVersion package android.car
    field TIRAMISU_1 Parcelable.Creator<PlatformVersion> CREATOR;
    method TIRAMISU_1 PlatformVersion forMajorAndMinorVersions(int majorVersion, int minorVersion);
    method TIRAMISU_1 PlatformVersion forMajorVersion(int majorVersion);
    method TIRAMISU_1 int describeContents();
    method TIRAMISU_1 void writeToParcel(Parcel dest, int flags);
class PlatformVersion.VERSION_CODES package android.car
    field TIRAMISU_1 PlatformVersion TIRAMISU_0 = forMajorAndMinorVersions(Build.VERSION_CODES.TIRAMISU, 0);
    field TIRAMISU_1 PlatformVersion TIRAMISU_1 = forMajorAndMinorVersions(Build.VERSION_CODES.TIRAMISU, 1);
class @hide @SystemApi CarBugreportManager package android.car
    method TIRAMISU_0 void requestBugreport(ParcelFileDescriptor output, ParcelFileDescriptor extraOutput, CarBugreportManagerCallback callback);
    method TIRAMISU_0 @hiddenOnly void requestBugreportForTesting(ParcelFileDescriptor output, ParcelFileDescriptor extraOutput, CarBugreportManagerCallback callback);
    method TIRAMISU_0 void cancelBugreport();
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
class CarBugreportManager.CarBugreportManagerCallback package android.car
    field TIRAMISU_0 int CAR_BUGREPORT_DUMPSTATE_FAILED = 1;
    field TIRAMISU_0 int CAR_BUGREPORT_IN_PROGRESS = 2;
    field TIRAMISU_0 int CAR_BUGREPORT_DUMPSTATE_CONNECTION_FAILED = 3;
    field TIRAMISU_0 int CAR_BUGREPORT_SERVICE_NOT_AVAILABLE = 4;
    method TIRAMISU_0 void onProgress(float progress);
    method TIRAMISU_0 void onError(int errorCode);
    method TIRAMISU_0 void onFinished();
class CarInfoManager package android.car
    field TIRAMISU_0 @hiddenOnly int BASIC_INFO_KEY_MANUFACTURER = 0x11100101;
    field TIRAMISU_0 @hiddenOnly int BASIC_INFO_KEY_MODEL = 0x11100102;
    field TIRAMISU_0 @hiddenOnly int BASIC_INFO_KEY_MODEL_YEAR = 0x11400103;
    field TIRAMISU_0 @hiddenOnly String BASIC_INFO_KEY_VEHICLE_ID = "android.car.vehicle-id";
    field TIRAMISU_0 @hiddenOnly String INFO_KEY_PRODUCT_CONFIGURATION = "android.car.product-config";
    field TIRAMISU_0 @hiddenOnly int BASIC_INFO_DRIVER_SEAT = 0x1540010a;
    field TIRAMISU_0 @hiddenOnly int BASIC_INFO_EV_PORT_LOCATION = 0x11400109;
    field TIRAMISU_0 @hiddenOnly int BASIC_INFO_FUEL_DOOR_LOCATION = 0x11400108;
    field TIRAMISU_0 @hiddenOnly int BASIC_INFO_FUEL_CAPACITY = 0x11600104;
    field TIRAMISU_0 @hiddenOnly int BASIC_INFO_FUEL_TYPES = 0x11410105;
    field TIRAMISU_0 @hiddenOnly int BASIC_INFO_EV_BATTERY_CAPACITY = 0x11600106;
    field TIRAMISU_0 @hiddenOnly int BASIC_INFO_EV_CONNECTOR_TYPES = 0x11410107;
    method TIRAMISU_0 String getManufacturer();
    method TIRAMISU_0 String getModel();
    method TIRAMISU_0 String getModelYear();
    method TIRAMISU_0 int getModelYearInInteger();
    method TIRAMISU_0 String getVehicleId();
    method TIRAMISU_0 float getFuelCapacity();
    method TIRAMISU_0 int[] getFuelTypes();
    method TIRAMISU_0 float getEvBatteryCapacity();
    method TIRAMISU_0 int[] getEvConnectorTypes();
    method TIRAMISU_0 int getDriverSeat();
    method TIRAMISU_0 int getEvPortLocation();
    method TIRAMISU_0 int getFuelDoorLocation();
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
class @hide @SystemApi CarSettings package android.car.settings
    field TIRAMISU_0 @hiddenOnly int[] DEFAULT_GARAGE_MODE_WAKE_UP_TIME = { 0, 0 };
    field TIRAMISU_0 @hiddenOnly int DEFAULT_GARAGE_MODE_MAINTENANCE_WINDOW = 10 * 60 * 1000;
class @hiddenOnly @hide CarSettings.Global package android.car.settings
    field TIRAMISU_0 @hiddenOnly String DEFAULT_USER_RESTRICTIONS_SET = "android.car.DEFAULT_USER_RESTRICTIONS_SET";
    field TIRAMISU_0 @hiddenOnly String DISABLE_INSTRUMENTATION_SERVICE = "android.car.DISABLE_INSTRUMENTATION_SERVICE";
    field TIRAMISU_0 @hiddenOnly String ENABLE_USER_SWITCH_DEVELOPER_MESSAGE = "android.car.ENABLE_USER_SWITCH_DEVELOPER_MESSAGE";
    field TIRAMISU_0 @hiddenOnly String LAST_ACTIVE_USER_ID = "android.car.LAST_ACTIVE_USER_ID";
    field TIRAMISU_0 @hiddenOnly String LAST_ACTIVE_PERSISTENT_USER_ID = "android.car.LAST_ACTIVE_PERSISTENT_USER_ID";
    field TIRAMISU_0 @hiddenOnly String SYSTEM_BAR_VISIBILITY_OVERRIDE = "android.car.SYSTEM_BAR_VISIBILITY_OVERRIDE";
class @hide @SystemApi CarSettings.Secure package android.car.settings
    field TIRAMISU_0 String KEY_AUDIO_FOCUS_NAVIGATION_REJECTED_DURING_CALL = "android.car.KEY_AUDIO_FOCUS_NAVIGATION_REJECTED_DURING_CALL";
    field TIRAMISU_0 String KEY_AUDIO_PERSIST_VOLUME_GROUP_MUTE_STATES = "android.car.KEY_AUDIO_PERSIST_VOLUME_GROUP_MUTE_STATES";
    field TIRAMISU_0 @hiddenOnly String KEY_BLUETOOTH_DEVICES = "android.car.KEY_BLUETOOTH_DEVICES";
    field TIRAMISU_0 @hiddenOnly String KEY_BLUETOOTH_PROFILES_INHIBITED = "android.car.BLUETOOTH_PROFILES_INHIBITED";
    field TIRAMISU_0 String KEY_ROTARY_KEY_EVENT_FILTER = "android.car.ROTARY_KEY_EVENT_FILTER";
    field TIRAMISU_0 String KEY_ENABLE_INITIAL_NOTICE_SCREEN_TO_USER = "android.car.ENABLE_INITIAL_NOTICE_SCREEN_TO_USER";
    field TIRAMISU_0 String KEY_SETUP_WIZARD_IN_PROGRESS = "android.car.SETUP_WIZARD_IN_PROGRESS";
    field TIRAMISU_0 String KEY_PACKAGES_DISABLED_ON_RESOURCE_OVERUSE = "android.car.KEY_PACKAGES_DISABLED_ON_RESOURCE_OVERUSE";
class @hide @SystemApi AoapService package android.car
    field TIRAMISU_0 int RESULT_OK = 0;
    field TIRAMISU_0 int RESULT_DEVICE_NOT_SUPPORTED = 1;
    field TIRAMISU_0 int RESULT_DO_NOT_SWITCH_TO_AOAP = 2;
    field TIRAMISU_0 @hiddenOnly int MSG_NEW_DEVICE_ATTACHED = 1;
    field TIRAMISU_0 @hiddenOnly int MSG_NEW_DEVICE_ATTACHED_RESPONSE = 2;
    field TIRAMISU_0 @hiddenOnly int MSG_CAN_SWITCH_TO_AOAP = 3;
    field TIRAMISU_0 @hiddenOnly int MSG_CAN_SWITCH_TO_AOAP_RESPONSE = 4;
    field TIRAMISU_0 @hiddenOnly String KEY_DEVICE = "usb-device";
    field TIRAMISU_0 @hiddenOnly String KEY_RESULT = "result";
    method TIRAMISU_0 int isDeviceSupported(UsbDevice device);
    method TIRAMISU_0 int canSwitchToAoap(UsbDevice device);
    method TIRAMISU_0 void onCreate();
    method TIRAMISU_0 IBinder onBind(Intent intent);
    method TIRAMISU_0 boolean onUnbind(Intent intent);
    method TIRAMISU_0 void dump(FileDescriptor fd, PrintWriter writer, String[] args);
class PlatformVersionMismatchException package android.car
    field TIRAMISU_1 Parcelable.Creator<PlatformVersionMismatchException> CREATOR;
    method TIRAMISU_1 String getMessage();
    method TIRAMISU_1 PlatformVersion getExpectedPlatformApiVersion();
    method TIRAMISU_1 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_1 int describeContents();
class @hide @SystemApi VehiclePropertyAccess package android.car
    field TIRAMISU_0 int NONE = 0x00;
    field TIRAMISU_0 int READ = 0x01;
    field TIRAMISU_0 int WRITE = 0x02;
    field TIRAMISU_0 int READ_WRITE = 0x03;
class VehicleIgnitionState package android.car
    field TIRAMISU_0 int UNDEFINED = 0;
    field TIRAMISU_0 int LOCK = 1;
    field TIRAMISU_0 int OFF = 2;
    field TIRAMISU_0 int ACC = 3;
    field TIRAMISU_0 int ON = 4;
    field TIRAMISU_0 int START = 5;
    method TIRAMISU_0 String toString(int ignitionState);
class @hide @SystemApi CarProjectionManager package android.car
    field TIRAMISU_0 int PROJECTION_VOICE_SEARCH = 0x1;
    field TIRAMISU_0 int PROJECTION_LONG_PRESS_VOICE_SEARCH = 0x2;
    field TIRAMISU_0 int KEY_EVENT_VOICE_SEARCH_KEY_DOWN = 0;
    field TIRAMISU_0 int KEY_EVENT_VOICE_SEARCH_SHORT_PRESS_KEY_UP = 1;
    field TIRAMISU_0 int KEY_EVENT_VOICE_SEARCH_LONG_PRESS_KEY_DOWN = 2;
    field TIRAMISU_0 int KEY_EVENT_VOICE_SEARCH_LONG_PRESS_KEY_UP = 3;
    field TIRAMISU_0 int KEY_EVENT_CALL_KEY_DOWN = 4;
    field TIRAMISU_0 int KEY_EVENT_CALL_SHORT_PRESS_KEY_UP = 5;
    field TIRAMISU_0 int KEY_EVENT_CALL_LONG_PRESS_KEY_DOWN = 6;
    field TIRAMISU_0 int KEY_EVENT_CALL_LONG_PRESS_KEY_UP = 7;
    field TIRAMISU_0 @hiddenOnly int NUM_KEY_EVENTS = 8;
    field TIRAMISU_0 @hiddenOnly int PROJECTION_AP_STARTED = 0;
    field TIRAMISU_0 @hiddenOnly int PROJECTION_AP_STOPPED = 1;
    field TIRAMISU_0 @hiddenOnly int PROJECTION_AP_FAILED = 2;
    method TIRAMISU_0 @hiddenOnly void regsiterProjectionListener(CarProjectionListener listener, int voiceSearchFilter);
    method TIRAMISU_0 void registerProjectionListener(CarProjectionListener listener, int voiceSearchFilter);
    method TIRAMISU_0 @hiddenOnly void unregsiterProjectionListener();
    method TIRAMISU_0 void unregisterProjectionListener();
    method TIRAMISU_0 void addKeyEventHandler(Set<Integer> events, ProjectionKeyEventHandler eventHandler);
    method TIRAMISU_0 void addKeyEventHandler(Set<Integer> events, Executor executor, ProjectionKeyEventHandler eventHandler);
    method TIRAMISU_0 void removeKeyEventHandler(ProjectionKeyEventHandler eventHandler);
    method TIRAMISU_0 void registerProjectionRunner(Intent serviceIntent);
    method TIRAMISU_0 void unregisterProjectionRunner(Intent serviceIntent);
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
    method TIRAMISU_0 void startProjectionAccessPoint(ProjectionAccessPointCallback callback);
    method TIRAMISU_0 List<Integer> getAvailableWifiChannels(int band);
    method TIRAMISU_0 void stopProjectionAccessPoint();
    method TIRAMISU_0 boolean requestBluetoothProfileInhibit(BluetoothDevice device, int profile);
    method TIRAMISU_0 boolean releaseBluetoothProfileInhibit(BluetoothDevice device, int profile);
    method TIRAMISU_0 void updateProjectionStatus(ProjectionStatus status);
    method TIRAMISU_0 void registerProjectionStatusListener(ProjectionStatusListener listener);
    method TIRAMISU_0 void unregisterProjectionStatusListener(ProjectionStatusListener listener);
    method TIRAMISU_0 Bundle getProjectionOptions();
    method TIRAMISU_0 void resetProjectionAccessPointCredentials();
interface CarProjectionManager.CarProjectionListener package android.car
    method TIRAMISU_0 void onVoiceAssistantRequest(boolean fromLongPress);
interface CarProjectionManager.ProjectionKeyEventHandler package android.car
    method TIRAMISU_0 void onKeyEvent(int event);
interface CarProjectionManager.ProjectionStatusListener package android.car
    method TIRAMISU_0 void onProjectionStatusChanged(int state, String packageName, List<ProjectionStatus> details);
class CarProjectionManager.ProjectionAccessPointCallback package android.car
    field TIRAMISU_0 int ERROR_NO_CHANNEL = 1;
    field TIRAMISU_0 int ERROR_GENERIC = 2;
    field TIRAMISU_0 int ERROR_INCOMPATIBLE_MODE = 3;
    field TIRAMISU_0 int ERROR_TETHERING_DISALLOWED = 4;
    method TIRAMISU_0 void onStarted(WifiConfiguration wifiConfiguration);
    method TIRAMISU_0 void onStarted(SoftApConfiguration softApConfiguration);
    method TIRAMISU_0 void onStopped();
    method TIRAMISU_0 void onFailed(int reason);
class @hiddenOnly @hide StartUserInBackgroundResult package android.car.admin
    field TIRAMISU_0 int STATUS_SUCCESS = 1;
    field TIRAMISU_0 int STATUS_SUCCESS_CURRENT_USER = 2;
    field TIRAMISU_0 int STATUS_FAILURE_USER_DOES_NOT_EXIST = 3;
    field TIRAMISU_0 int STATUS_FAILURE_GENERIC = 100;
    method TIRAMISU_0 int getStatus();
    method TIRAMISU_0 boolean isSuccess();
    method TIRAMISU_0 String toString();
class @hide @SystemApi CarDevicePolicyManager package android.car.admin
    field TIRAMISU_0 @hiddenOnly String TAG = CarDevicePolicyManager.class.getSimpleName();
    field TIRAMISU_0 int USER_TYPE_REGULAR = 0;
    field TIRAMISU_0 int USER_TYPE_ADMIN = 1;
    field TIRAMISU_0 int USER_TYPE_GUEST = 2;
    field TIRAMISU_0 @hiddenOnly int FIRST_USER_TYPE = USER_TYPE_REGULAR;
    field TIRAMISU_0 @hiddenOnly int LAST_USER_TYPE = USER_TYPE_GUEST;
    method TIRAMISU_0 RemoveUserResult removeUser(UserHandle user);
    method TIRAMISU_0 CreateUserResult createUser(String name, int type);
    method TIRAMISU_0 @hiddenOnly StartUserInBackgroundResult startUserInBackground(UserHandle user);
    method TIRAMISU_0 @hiddenOnly StopUserResult stopUser(UserHandle user);
    method TIRAMISU_0 @hiddenOnly void setUserDisclaimerShown(UserHandle user);
    method TIRAMISU_0 @hiddenOnly void setUserDisclaimerAcknowledged(UserHandle user);
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
class @hide @SystemApi RemoveUserResult package android.car.admin
    field TIRAMISU_0 int STATUS_SUCCESS = 1;
    field TIRAMISU_0 int STATUS_SUCCESS_LAST_ADMIN_REMOVED = 2;
    field TIRAMISU_0 int STATUS_SUCCESS_SET_EPHEMERAL = 3;
    field TIRAMISU_0 int STATUS_FAILURE_USER_DOES_NOT_EXIST = 4;
    field TIRAMISU_0 int STATUS_FAILURE_INVALID_ARGUMENTS = 5;
    field TIRAMISU_0 int STATUS_SUCCESS_LAST_ADMIN_SET_EPHEMERAL = 6;
    field TIRAMISU_0 int STATUS_FAILURE_GENERIC = 100;
    method TIRAMISU_0 int getStatus();
    method TIRAMISU_0 boolean isSuccess();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 @hiddenOnly String statusToString(int status);
class @hiddenOnly @hide StopUserResult package android.car.admin
    field TIRAMISU_0 int STATUS_SUCCESS = 1;
    field TIRAMISU_0 int STATUS_FAILURE_CURRENT_USER = 2;
    field TIRAMISU_0 int STATUS_FAILURE_SYSTEM_USER = 3;
    field TIRAMISU_0 int STATUS_FAILURE_USER_DOES_NOT_EXIST = 4;
    field TIRAMISU_0 int STATUS_FAILURE_GENERIC = 100;
    method TIRAMISU_0 int getStatus();
    method TIRAMISU_0 boolean isSuccess();
    method TIRAMISU_0 String toString();
class @hide @SystemApi CreateUserResult package android.car.admin
    field TIRAMISU_0 int STATUS_SUCCESS = 1;
    field TIRAMISU_0 int STATUS_FAILURE_INVALID_ARGUMENTS = 2;
    field TIRAMISU_0 int STATUS_FAILURE_GENERIC = 100;
    method TIRAMISU_0 @hiddenOnly CreateUserResult forGenericError();
    method TIRAMISU_0 int getStatus();
    method TIRAMISU_0 boolean isSuccess();
    method TIRAMISU_0 UserHandle getUserHandle();
    method TIRAMISU_0 String toString();
class CarNotConnectedException package android.car
class @hide @SystemApi IoStatsEntry package android.car.storagemonitoring
    field TIRAMISU_0 Parcelable.Creator<IoStatsEntry> CREATOR;
    field TIRAMISU_0 int uid;
    field TIRAMISU_0 long runtimeMillis;
    field TIRAMISU_0 IoStatsEntry.Metrics foreground;
    field TIRAMISU_0 IoStatsEntry.Metrics background;
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 @hiddenOnly void writeToJson(JsonWriter jsonWriter);
    method TIRAMISU_0 @hiddenOnly IoStatsEntry delta(IoStatsEntry other);
    method TIRAMISU_0 boolean equals(Object other);
    method TIRAMISU_0 int hashCode();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 @hiddenOnly boolean representsSameMetrics(UidIoRecord record);
class IoStatsEntry.Metrics package android.car.storagemonitoring
    field TIRAMISU_0 Parcelable.Creator<IoStatsEntry.Metrics> CREATOR;
    field TIRAMISU_0 long bytesRead;
    field TIRAMISU_0 long bytesWritten;
    field TIRAMISU_0 long bytesReadFromStorage;
    field TIRAMISU_0 long bytesWrittenToStorage;
    field TIRAMISU_0 long fsyncCalls;
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 @hiddenOnly void writeToJson(JsonWriter jsonWriter);
    method TIRAMISU_0 @hiddenOnly Metrics delta(Metrics other);
    method TIRAMISU_0 boolean equals(Object other);
    method TIRAMISU_0 int hashCode();
    method TIRAMISU_0 String toString();
class @hide @SystemApi IoStats package android.car.storagemonitoring
    field TIRAMISU_0 Creator<IoStats> CREATOR;
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 @hiddenOnly void writeToJson(JsonWriter jsonWriter);
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 long getTimestamp();
    method TIRAMISU_0 List<IoStatsEntry> getStats();
    method TIRAMISU_0 int hashCode();
    method TIRAMISU_0 IoStatsEntry getUserIdStats(int uid);
    method TIRAMISU_0 IoStatsEntry.Metrics getForegroundTotals();
    method TIRAMISU_0 IoStatsEntry.Metrics getBackgroundTotals();
    method TIRAMISU_0 IoStatsEntry.Metrics getTotals();
    method TIRAMISU_0 boolean equals(Object other);
    method TIRAMISU_0 String toString();
class @hide @SystemApi LifetimeWriteInfo package android.car.storagemonitoring
    field TIRAMISU_0 Creator<IoStats> CREATOR;
    field TIRAMISU_0 String partition;
    field TIRAMISU_0 String fstype;
    field TIRAMISU_0 long writtenBytes;
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 @hiddenOnly void writeToJson(JsonWriter jsonWriter);
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 boolean equals(Object other);
    method TIRAMISU_0 String toString();
class @hide @SystemApi CarStorageMonitoringManager package android.car.storagemonitoring
    field TIRAMISU_0 String INTENT_EXCESSIVE_IO = "android.car.storagemonitoring.EXCESSIVE_IO";
    field TIRAMISU_0 int PRE_EOL_INFO_UNKNOWN = 0;
    field TIRAMISU_0 int PRE_EOL_INFO_NORMAL = 1;
    field TIRAMISU_0 int PRE_EOL_INFO_WARNING = 2;
    field TIRAMISU_0 int PRE_EOL_INFO_URGENT = 3;
    field TIRAMISU_0 long SHUTDOWN_COST_INFO_MISSING = -1;
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
    method TIRAMISU_0 int getPreEolIndicatorStatus();
    method TIRAMISU_0 WearEstimate getWearEstimate();
    method TIRAMISU_0 List<WearEstimateChange> getWearEstimateHistory();
    method TIRAMISU_0 List<IoStatsEntry> getBootIoStats();
    method TIRAMISU_0 long getShutdownDiskWriteAmount();
    method TIRAMISU_0 List<IoStatsEntry> getAggregateIoStats();
    method TIRAMISU_0 List<IoStats> getIoStatsDeltas();
    method TIRAMISU_0 void registerListener(IoStatsListener listener);
    method TIRAMISU_0 void unregisterListener(IoStatsListener listener);
interface CarStorageMonitoringManager.IoStatsListener package android.car.storagemonitoring
    method TIRAMISU_0 void onSnapshot(IoStats snapshot);
class @hide @SystemApi UidIoRecord package android.car.storagemonitoring
    field TIRAMISU_0 int uid;
    field TIRAMISU_0 long foreground_rchar;
    field TIRAMISU_0 long foreground_wchar;
    field TIRAMISU_0 long foreground_read_bytes;
    field TIRAMISU_0 long foreground_write_bytes;
    field TIRAMISU_0 long foreground_fsync;
    field TIRAMISU_0 long background_rchar;
    field TIRAMISU_0 long background_wchar;
    field TIRAMISU_0 long background_read_bytes;
    field TIRAMISU_0 long background_write_bytes;
    field TIRAMISU_0 long background_fsync;
    method TIRAMISU_0 @hiddenOnly UidIoRecord delta(IoStatsEntry other);
    method TIRAMISU_0 @hiddenOnly UidIoRecord delta(UidIoRecord other);
class @hide @SystemApi WearEstimateChange package android.car.storagemonitoring
    field TIRAMISU_0 Parcelable.Creator<WearEstimateChange> CREATOR;
    field TIRAMISU_0 WearEstimate oldEstimate;
    field TIRAMISU_0 WearEstimate newEstimate;
    field TIRAMISU_0 long uptimeAtChange;
    field TIRAMISU_0 Instant dateAtChange;
    field TIRAMISU_0 boolean isAcceptableDegradation;
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 boolean equals(Object other);
    method TIRAMISU_0 int hashCode();
    method TIRAMISU_0 String toString();
class @hide @SystemApi WearEstimate package android.car.storagemonitoring
    field TIRAMISU_0 int UNKNOWN = -1;
    field TIRAMISU_0 @hiddenOnly WearEstimate UNKNOWN_ESTIMATE = new WearEstimate(UNKNOWN, UNKNOWN);
    field TIRAMISU_0 Parcelable.Creator<WearEstimate> CREATOR;
    field TIRAMISU_0 int typeA;
    field TIRAMISU_0 int typeB;
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 @hiddenOnly void writeToJson(JsonWriter jsonWriter);
    method TIRAMISU_0 boolean equals(Object other);
    method TIRAMISU_0 int hashCode();
    method TIRAMISU_0 String toString();
class @hiddenOnly @hide CarManagerBase package android.car
    field TIRAMISU_0 Car mCar;
    method TIRAMISU_0 Context getContext();
    method TIRAMISU_0 Handler getEventHandler();
    method TIRAMISU_0 T handleRemoteExceptionFromCarService(RemoteException e, T returnValue);
    method TIRAMISU_0 void handleRemoteExceptionFromCarService(RemoteException e);
    method TIRAMISU_0 T handleExceptionFromCarService(Exception e, T returnValue);
    method TIRAMISU_0 void onCarDisconnected();
    method TIRAMISU_0 T addDumpable(Object container, Supplier<T> dumpableSupplier);
class @hide @SystemApi VehicleAreaWindow package android.car
    field TIRAMISU_0 int WINDOW_FRONT_WINDSHIELD = 0x0001;
    field TIRAMISU_0 int WINDOW_REAR_WINDSHIELD = 0x0002;
    field TIRAMISU_0 int WINDOW_ROW_1_LEFT = 0x0010;
    field TIRAMISU_0 int WINDOW_ROW_1_RIGHT = 0x0040;
    field TIRAMISU_0 int WINDOW_ROW_2_LEFT = 0x0100;
    field TIRAMISU_0 int WINDOW_ROW_2_RIGHT = 0x0400;
    field TIRAMISU_0 int WINDOW_ROW_3_LEFT = 0x1000;
    field TIRAMISU_0 int WINDOW_ROW_3_RIGHT = 0x4000;
    field TIRAMISU_0 int WINDOW_ROOF_TOP_1 = 0x10000;
    field TIRAMISU_0 int WINDOW_ROOF_TOP_2 = 0x20000;
class @hide @SystemApi CarNavigationInstrumentCluster package android.car.navigation
    field TIRAMISU_0 int CLUSTER_TYPE_CUSTOM_IMAGES_SUPPORTED = 1;
    field TIRAMISU_0 int CLUSTER_TYPE_IMAGE_CODES_ONLY = 2;
    field TIRAMISU_0 Parcelable.Creator<CarNavigationInstrumentCluster> CREATOR;
    method TIRAMISU_0 CarNavigationInstrumentCluster createCluster(int minIntervalMillis);
    method TIRAMISU_0 CarNavigationInstrumentCluster createCustomImageCluster(int minIntervalMillis, int imageWidth, int imageHeight, int imageColorDepthBits);
    method TIRAMISU_0 int getMinIntervalMillis();
    method TIRAMISU_0 int getType();
    method TIRAMISU_0 int getImageWidth();
    method TIRAMISU_0 int getImageHeight();
    method TIRAMISU_0 @hiddenOnly Bundle getExtra();
    method TIRAMISU_0 int getImageColorDepthBits();
    method TIRAMISU_0 boolean supportsCustomImages();
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 String toString();
class @hide @SystemApi CarNavigationStatusManager package android.car.navigation
    method TIRAMISU_0 void sendEvent(int eventType, Bundle bundle);
    method TIRAMISU_0 void sendNavigationStateChange(Bundle bundle);
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
    method TIRAMISU_0 CarNavigationInstrumentCluster getInstrumentClusterInfo();
class @hide @SystemApi VehicleAreaMirror package android.car
    field TIRAMISU_0 int MIRROR_DRIVER_LEFT = 0x00000001;
    field TIRAMISU_0 int MIRROR_DRIVER_RIGHT = 0x00000002;
    field TIRAMISU_0 int MIRROR_DRIVER_CENTER = 0x00000004;
class @hide @SystemApi CustomInputEvent package android.car.input
    field TIRAMISU_0 int INPUT_CODE_F1 = 1001;
    field TIRAMISU_0 int INPUT_CODE_F2 = 1002;
    field TIRAMISU_0 int INPUT_CODE_F3 = 1003;
    field TIRAMISU_0 int INPUT_CODE_F4 = 1004;
    field TIRAMISU_0 int INPUT_CODE_F5 = 1005;
    field TIRAMISU_0 int INPUT_CODE_F6 = 1006;
    field TIRAMISU_0 int INPUT_CODE_F7 = 1007;
    field TIRAMISU_0 int INPUT_CODE_F8 = 1008;
    field TIRAMISU_0 int INPUT_CODE_F9 = 1009;
    field TIRAMISU_0 int INPUT_CODE_F10 = 1010;
    field TIRAMISU_0 Parcelable.Creator<CustomInputEvent> CREATOR;
    method TIRAMISU_0 String inputCodeToString(int value);
    method TIRAMISU_0 int getInputCode();
    method TIRAMISU_0 int getTargetDisplayType();
    method TIRAMISU_0 int getRepeatCounter();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 boolean equals(Object o);
    method TIRAMISU_0 int hashCode();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class @hide @SystemApi CarInputHandlingService package android.car.input
    field TIRAMISU_0 String INPUT_CALLBACK_BINDER_KEY = "callback_binder";
    field TIRAMISU_0 int INPUT_CALLBACK_BINDER_CODE = IBinder.FIRST_CALL_TRANSACTION;
    method TIRAMISU_0 IBinder onBind(Intent intent);
    method TIRAMISU_0 void onKeyEvent(KeyEvent keyEvent, int targetDisplay);
    method TIRAMISU_0 void dump(FileDescriptor fd, PrintWriter writer, String[] args);
class CarInputHandlingService.InputFilter package android.car.input
    field TIRAMISU_0 int mKeyCode;
    field TIRAMISU_0 int mTargetDisplay;
    field TIRAMISU_0 Parcelable.Creator CREATOR;
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
class @hide @SystemApi RotaryEvent package android.car.input
    field TIRAMISU_0 Parcelable.Creator<RotaryEvent> CREATOR;
    method TIRAMISU_0 int getNumberOfClicks();
    method TIRAMISU_0 long getUptimeMillisForClick(int clickIndex);
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 int getInputType();
    method TIRAMISU_0 boolean isClockwise();
    method TIRAMISU_0 long[] getUptimeMillisForClicks();
    method TIRAMISU_0 boolean equals(Object o);
    method TIRAMISU_0 int hashCode();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class @hide @SystemApi CarInputManager package android.car.input
    field TIRAMISU_0 int CAPTURE_REQ_FLAGS_ALLOW_DELAYED_GRANT = 0x1;
    field TIRAMISU_0 int CAPTURE_REQ_FLAGS_TAKE_ALL_EVENTS_FOR_DISPLAY = 0x2;
    field TIRAMISU_0 int INPUT_TYPE_ALL_INPUTS = 1;
    field TIRAMISU_0 int INPUT_TYPE_ROTARY_NAVIGATION = 10;
    field TIRAMISU_0 int INPUT_TYPE_ROTARY_VOLUME = 11;
    field TIRAMISU_0 int INPUT_TYPE_DPAD_KEYS = 100;
    field TIRAMISU_0 int INPUT_TYPE_NAVIGATE_KEYS = 101;
    field TIRAMISU_0 int INPUT_TYPE_SYSTEM_NAVIGATE_KEYS = 102;
    field TIRAMISU_0 int INPUT_TYPE_CUSTOM_INPUT_EVENT = 200;
    field TIRAMISU_0 int INPUT_CAPTURE_RESPONSE_SUCCEEDED = 0;
    field TIRAMISU_0 int INPUT_CAPTURE_RESPONSE_FAILED = 1;
    field TIRAMISU_0 int INPUT_CAPTURE_RESPONSE_DELAYED = 2;
    method TIRAMISU_0 int requestInputEventCapture(int targetDisplayType, int[] inputTypes, int requestFlags, CarInputCaptureCallback callback);
    method TIRAMISU_0 int requestInputEventCapture(int targetDisplayType, int[] inputTypes, int requestFlags, Executor executor, CarInputCaptureCallback callback);
    method TIRAMISU_0 void releaseInputEventCapture(int targetDisplayType);
    method TIRAMISU_0 void injectKeyEvent(KeyEvent event, int targetDisplayType);
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
interface CarInputManager.CarInputCaptureCallback package android.car.input
    method TIRAMISU_0 void onKeyEvents(int targetDisplayType, List<KeyEvent> keyEvents);
    method TIRAMISU_0 void onRotaryEvents(int targetDisplayType, List<RotaryEvent> events);
    method TIRAMISU_0 void onCaptureStateChanged(int targetDisplayType, int[] activeInputTypes);
    method TIRAMISU_0 void onCustomInputEvents(int targetDisplayType, List<CustomInputEvent> events);
class @hiddenOnly @hide VehicleLightSwitch package android.car
    field TIRAMISU_0 int OFF = 0;
    field TIRAMISU_0 int ON = 1;
    field TIRAMISU_0 int DAYTIME_RUNNING = 2;
    field TIRAMISU_0 int AUTOMATIC = 0x100;
class CarUxRestrictionsManager package android.car.drivingstate
    field TIRAMISU_0 @hiddenOnly String UX_RESTRICTION_MODE_BASELINE = "baseline";
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
    method TIRAMISU_0 void registerListener(OnUxRestrictionsChangedListener listener);
    method TIRAMISU_0 @hiddenOnly void registerListener(OnUxRestrictionsChangedListener listener, int displayId);
    method TIRAMISU_0 void unregisterListener();
    method TIRAMISU_0 @hiddenOnly boolean saveUxRestrictionsConfigurationForNextBoot(List<CarUxRestrictionsConfiguration> configs);
    method TIRAMISU_0 CarUxRestrictions getCurrentCarUxRestrictions();
    method TIRAMISU_0 @hiddenOnly CarUxRestrictions getCurrentCarUxRestrictions(int displayId);
    method TIRAMISU_0 @hiddenOnly boolean setRestrictionMode(String mode);
    method TIRAMISU_0 @hiddenOnly String getRestrictionMode();
    method TIRAMISU_0 @hiddenOnly boolean saveUxRestrictionsConfigurationForNextBoot(CarUxRestrictionsConfiguration config);
    method TIRAMISU_0 @hiddenOnly List<CarUxRestrictionsConfiguration> getStagedConfigs();
    method TIRAMISU_0 @hiddenOnly List<CarUxRestrictionsConfiguration> getConfigs();
interface CarUxRestrictionsManager.OnUxRestrictionsChangedListener package android.car.drivingstate
    method TIRAMISU_0 void onUxRestrictionsChanged(CarUxRestrictions restrictionInfo);
class @hide @SystemApi CarDrivingStateManager package android.car.drivingstate
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
    method TIRAMISU_0 void registerListener(CarDrivingStateEventListener listener);
    method TIRAMISU_0 void unregisterListener();
    method TIRAMISU_0 CarDrivingStateEvent getCurrentCarDrivingState();
    method TIRAMISU_0 @hiddenOnly void injectDrivingState(int drivingState);
interface @hide @SystemApi CarDrivingStateManager.CarDrivingStateEventListener package android.car.drivingstate
    method TIRAMISU_0 void onDrivingStateChanged(CarDrivingStateEvent event);
class CarUxRestrictions package android.car.drivingstate
    field TIRAMISU_0 int UX_RESTRICTIONS_BASELINE = 0;
    field TIRAMISU_0 int UX_RESTRICTIONS_NO_DIALPAD = 1;
    field TIRAMISU_0 int UX_RESTRICTIONS_NO_FILTERING = 0x1 << 1;
    field TIRAMISU_0 int UX_RESTRICTIONS_LIMIT_STRING_LENGTH = 0x1 << 2;
    field TIRAMISU_0 int UX_RESTRICTIONS_NO_KEYBOARD = 0x1 << 3;
    field TIRAMISU_0 int UX_RESTRICTIONS_NO_VIDEO = 0x1 << 4;
    field TIRAMISU_0 int UX_RESTRICTIONS_LIMIT_CONTENT = 0x1 << 5;
    field TIRAMISU_0 int UX_RESTRICTIONS_NO_SETUP = 0x1 << 6;
    field TIRAMISU_0 int UX_RESTRICTIONS_NO_TEXT_MESSAGE = 0x1 << 7;
    field TIRAMISU_0 int UX_RESTRICTIONS_NO_VOICE_TRANSCRIPTION = 0x1 << 8;
    field TIRAMISU_0 int UX_RESTRICTIONS_FULLY_RESTRICTED = UX_RESTRICTIONS_NO_DIALPAD | UX_RESTRICTIONS_NO_FILTERING | UX_RESTRICTIONS_LIMIT_STRING_LENGTH | UX_RESTRICTIONS_NO_KEYBOARD | UX_RESTRICTIONS_NO_VIDEO | UX_RESTRICTIONS_LIMIT_CONTENT | UX_RESTRICTIONS_NO_SETUP | UX_RESTRICTIONS_NO_TEXT_MESSAGE | UX_RESTRICTIONS_NO_VOICE_TRANSCRIPTION;
    field TIRAMISU_0 Parcelable.Creator<CarUxRestrictions> CREATOR;
    method TIRAMISU_0 @hiddenOnly long getTimeStamp();
    method TIRAMISU_0 boolean isRequiresDistractionOptimization();
    method TIRAMISU_0 int getActiveRestrictions();
    method TIRAMISU_0 int getMaxRestrictedStringLength();
    method TIRAMISU_0 int getMaxCumulativeContentItems();
    method TIRAMISU_0 int getMaxContentDepth();
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 boolean isSameRestrictions(CarUxRestrictions other);
class CarUxRestrictions.Builder package android.car.drivingstate
    method TIRAMISU_0 Builder setMaxStringLength(int length);
    method TIRAMISU_0 Builder setMaxCumulativeContentItems(int number);
    method TIRAMISU_0 Builder setMaxContentDepth(int depth);
    method TIRAMISU_0 CarUxRestrictions build();
class @hide @SystemApi CarDrivingStateEvent package android.car.drivingstate
    field TIRAMISU_0 int DRIVING_STATE_UNKNOWN = -1;
    field TIRAMISU_0 int DRIVING_STATE_PARKED = 0;
    field TIRAMISU_0 int DRIVING_STATE_IDLING = 1;
    field TIRAMISU_0 int DRIVING_STATE_MOVING = 2;
    field TIRAMISU_0 long timeStamp;
    field TIRAMISU_0 int eventValue;
    field TIRAMISU_0 Parcelable.Creator<CarDrivingStateEvent> CREATOR;
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 String toString();
class @hiddenOnly @hide CarUxRestrictionsConfiguration package android.car.drivingstate
    field TIRAMISU_0 Parcelable.Creator<CarUxRestrictionsConfiguration> CREATOR;
    method TIRAMISU_0 CarUxRestrictions getUxRestrictions(int drivingState, float currentSpeed);
    method TIRAMISU_0 CarUxRestrictions getUxRestrictions(int drivingState, float currentSpeed, String mode);
    method TIRAMISU_0 Integer getPhysicalPort();
    method TIRAMISU_0 void writeJson(JsonWriter writer);
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 CarUxRestrictionsConfiguration readJson(JsonReader reader, int schemaVersion);
    method TIRAMISU_0 int hashCode();
    method TIRAMISU_0 boolean equals(Object obj);
    method TIRAMISU_0 boolean hasSameParameters(CarUxRestrictionsConfiguration other);
    method TIRAMISU_0 void dump(PrintWriter writer);
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
class @hiddenOnly @hide CarUxRestrictionsConfiguration.Builder package android.car.drivingstate
    field TIRAMISU_0 Map<String,RestrictionModeContainer> mRestrictionModes = new ArrayMap<>();
    method TIRAMISU_0 int validatePort(int port);
    method TIRAMISU_0 Builder setPhysicalPort(int port);
    method TIRAMISU_0 Builder setUxRestrictions(int drivingState, boolean requiresOptimization, int restrictions);
    method TIRAMISU_0 Builder setUxRestrictions(int drivingState, SpeedRange speedRange, boolean requiresOptimization, int restrictions);
    method TIRAMISU_0 Builder setUxRestrictions(int drivingState, DrivingStateRestrictions drivingStateRestrictions);
    method TIRAMISU_0 Builder setMaxStringLength(int maxStringLength);
    method TIRAMISU_0 Builder setMaxCumulativeContentItems(int maxCumulativeContentItems);
    method TIRAMISU_0 Builder setMaxContentDepth(int maxContentDepth);
    method TIRAMISU_0 CarUxRestrictionsConfiguration build();
class CarUxRestrictionsConfiguration.Builder.SpeedRange package android.car.drivingstate
    field TIRAMISU_0 float MAX_SPEED = Float.POSITIVE_INFINITY;
    method TIRAMISU_0 boolean includes(float speed);
    method TIRAMISU_0 int compareTo(SpeedRange other);
    method TIRAMISU_0 int hashCode();
    method TIRAMISU_0 boolean equals(Object obj);
    method TIRAMISU_0 String toString();
class @hiddenOnly @hide CarUxRestrictionsConfiguration.DrivingStateRestrictions package android.car.drivingstate
    method TIRAMISU_0 DrivingStateRestrictions setDistractionOptimizationRequired(boolean distractionOptimizationRequired);
    method TIRAMISU_0 DrivingStateRestrictions setRestrictions(int restrictions);
    method TIRAMISU_0 DrivingStateRestrictions setMode(String mode);
    method TIRAMISU_0 DrivingStateRestrictions setSpeedRange(Builder.SpeedRange speedRange);
    method TIRAMISU_0 String toString();
class @hide @SystemApi CarActivityManager package android.car.app
    field TIRAMISU_0 int RESULT_SUCCESS = 0;
    field TIRAMISU_0 int RESULT_FAILURE = -1;
    field TIRAMISU_0 int RESULT_INVALID_USER = -2;
    field TIRAMISU_0 @hiddenOnly int ERROR_CODE_ACTIVITY_NOT_FOUND = -101;
    method TIRAMISU_0 int setPersistentActivity(ComponentName activity, int displayId, int featureId);
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
    method TIRAMISU_0 @hiddenOnly boolean registerTaskMonitor();
    method TIRAMISU_0 @hiddenOnly void onTaskAppeared(ActivityManager.RunningTaskInfo taskInfo);
    method TIRAMISU_0 @hiddenOnly void onTaskVanished(ActivityManager.RunningTaskInfo taskInfo);
    method TIRAMISU_0 @hiddenOnly void onTaskInfoChanged(ActivityManager.RunningTaskInfo taskInfo);
    method TIRAMISU_0 @hiddenOnly void unregisterTaskMonitor();
    method TIRAMISU_1 @hiddenOnly List<ActivityManager.RunningTaskInfo> getVisibleTasks();
class @hide @SystemApi CarVendorExtensionManager package android.car.hardware
    method TIRAMISU_0 void registerCallback(CarVendorExtensionCallback callback);
    method TIRAMISU_0 void unregisterCallback(CarVendorExtensionCallback callback);
    method TIRAMISU_0 List<CarPropertyConfig> getProperties();
    method TIRAMISU_0 boolean isPropertyAvailable(int propertyId, int area);
    method TIRAMISU_0 E getGlobalProperty(Class<E> propertyClass, int propId);
    method TIRAMISU_0 E getProperty(Class<E> propertyClass, int propId, int area);
    method TIRAMISU_0 void setGlobalProperty(Class<E> propertyClass, int propId, E value);
    method TIRAMISU_0 void setProperty(Class<E> propertyClass, int propId, int area, E value);
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
interface CarVendorExtensionManager.CarVendorExtensionCallback package android.car.hardware
    method TIRAMISU_0 void onChangeEvent(CarPropertyValue value);
    method TIRAMISU_0 void onErrorEvent(int propertyId, int zone);
class CarPropertyConfig package android.car.hardware
    field TIRAMISU_0 int VEHICLE_PROPERTY_ACCESS_NONE = 0;
    field TIRAMISU_0 int VEHICLE_PROPERTY_ACCESS_READ = 1;
    field TIRAMISU_0 int VEHICLE_PROPERTY_ACCESS_WRITE = 2;
    field TIRAMISU_0 int VEHICLE_PROPERTY_ACCESS_READ_WRITE = 3;
    field TIRAMISU_0 int VEHICLE_PROPERTY_CHANGE_MODE_STATIC = 0;
    field TIRAMISU_0 int VEHICLE_PROPERTY_CHANGE_MODE_ONCHANGE = 1;
    field TIRAMISU_0 int VEHICLE_PROPERTY_CHANGE_MODE_CONTINUOUS = 2;
    field TIRAMISU_0 Creator<CarPropertyConfig> CREATOR;
    method TIRAMISU_0 int getAccess();
    method TIRAMISU_0 int getAreaType();
    method TIRAMISU_0 int getChangeMode();
    method TIRAMISU_0 List<Integer> getConfigArray();
    method TIRAMISU_0 @hiddenOnly String getConfigString();
    method TIRAMISU_0 float getMaxSampleRate();
    method TIRAMISU_0 float getMinSampleRate();
    method TIRAMISU_0 int getPropertyId();
    method TIRAMISU_0 Class<T> getPropertyType();
    method TIRAMISU_0 boolean isGlobalProperty();
    method TIRAMISU_0 @hiddenOnly int getAreaCount();
    method TIRAMISU_0 int[] getAreaIds();
    method TIRAMISU_0 @hiddenOnly int getFirstAndOnlyAreaId();
    method TIRAMISU_0 @hiddenOnly boolean hasArea(int areaId);
    method TIRAMISU_0 T getMinValue(int areaId);
    method TIRAMISU_0 T getMaxValue(int areaId);
    method TIRAMISU_0 T getMinValue();
    method TIRAMISU_0 T getMaxValue();
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 @hiddenOnly String toString();
    method TIRAMISU_0 Builder<T> newBuilder(Class<T> type, int propertyId, int areaType, int areaCapacity);
    method TIRAMISU_0 @hiddenOnly Builder<T> newBuilder(Class<T> type, int propertyId, int areaType);
class @hiddenOnly @hide CarPropertyConfig.AreaConfig package android.car.hardware
    field TIRAMISU_0 Parcelable.Creator<AreaConfig<Object>> CREATOR;
    method TIRAMISU_0 T getMinValue();
    method TIRAMISU_0 T getMaxValue();
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 String toString();
class @hide @SystemApi CarPropertyConfig.Builder package android.car.hardware
    method TIRAMISU_0 Builder<T> addAreas(int[] areaIds);
    method TIRAMISU_0 Builder<T> addArea(int areaId);
    method TIRAMISU_0 Builder<T> addAreaConfig(int areaId, T min, T max);
    method TIRAMISU_0 Builder<T> setAccess(int access);
    method TIRAMISU_0 Builder<T> setChangeMode(int changeMode);
    method TIRAMISU_0 Builder<T> setConfigArray(ArrayList<Integer> configArray);
    method TIRAMISU_0 Builder<T> setConfigString(String configString);
    method TIRAMISU_0 Builder<T> setMaxSampleRate(float maxSampleRate);
    method TIRAMISU_0 Builder<T> setMinSampleRate(float minSampleRate);
    method TIRAMISU_0 CarPropertyConfig<T> build();
class @SystemApi CarHvacFanDirection package android.car.hardware
    field TIRAMISU_0 int UNKNOWN = 0x0;
    field TIRAMISU_0 int FACE = 0x01;
    field TIRAMISU_0 int FLOOR = 0x02;
    field TIRAMISU_0 int FACE_AND_FLOOR = 0x03;
    field TIRAMISU_0 int DEFROST = 0x04;
    field TIRAMISU_0 int DEFROST_AND_FLOOR = 0x06;
class CarPropertyValue package android.car.hardware
    field TIRAMISU_0 int STATUS_AVAILABLE = 0;
    field TIRAMISU_0 int STATUS_UNAVAILABLE = 1;
    field TIRAMISU_0 int STATUS_ERROR = 2;
    field TIRAMISU_0 Creator<CarPropertyValue> CREATOR;
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 int getPropertyId();
    method TIRAMISU_0 int getAreaId();
    method TIRAMISU_0 int getStatus();
    method TIRAMISU_0 long getTimestamp();
    method TIRAMISU_0 T getValue();
    method TIRAMISU_0 @hiddenOnly String toString();
class @hiddenOnly @hide CarSensorConfig package android.car.hardware
    field TIRAMISU_0 @hiddenOnly String WHEEL_TICK_DISTANCE_SUPPORTED_WHEELS = "android.car.wheelTickDistanceSupportedWheels";
    field TIRAMISU_0 @hiddenOnly String WHEEL_TICK_DISTANCE_FRONT_LEFT_UM_PER_TICK = "android.car.wheelTickDistanceFrontLeftUmPerTick";
    field TIRAMISU_0 @hiddenOnly String WHEEL_TICK_DISTANCE_FRONT_RIGHT_UM_PER_TICK = "android.car.wheelTickDistanceFrontRightUmPerTick";
    field TIRAMISU_0 @hiddenOnly String WHEEL_TICK_DISTANCE_REAR_RIGHT_UM_PER_TICK = "android.car.wheelTickDistanceRearRightUmPerTick";
    field TIRAMISU_0 @hiddenOnly String WHEEL_TICK_DISTANCE_REAR_LEFT_UM_PER_TICK = "android.car.wheelTickDistanceRearLeftUmPerTick";
    field TIRAMISU_0 @hiddenOnly Parcelable.Creator<CarSensorConfig> CREATOR;
    method TIRAMISU_0 @hiddenOnly int describeContents();
    method TIRAMISU_0 @hiddenOnly void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 @hiddenOnly Bundle getBundle();
    method TIRAMISU_0 @hiddenOnly int getInt(String key);
    method TIRAMISU_0 @hiddenOnly int getType();
    method TIRAMISU_0 @hiddenOnly String toString();
class CarSensorEvent package android.car.hardware
    field TIRAMISU_0 int GEAR_NEUTRAL = 0x0001;
    field TIRAMISU_0 int GEAR_FIRST = 0x0010;
    field TIRAMISU_0 int GEAR_SECOND = 0x0020;
    field TIRAMISU_0 int GEAR_THIRD = 0x0040;
    field TIRAMISU_0 int GEAR_FOURTH = 0x0080;
    field TIRAMISU_0 int GEAR_FIFTH = 0x0100;
    field TIRAMISU_0 int GEAR_SIXTH = 0x0200;
    field TIRAMISU_0 int GEAR_SEVENTH = 0x0400;
    field TIRAMISU_0 int GEAR_EIGHTH = 0x0800;
    field TIRAMISU_0 int GEAR_NINTH = 0x1000;
    field TIRAMISU_0 int GEAR_TENTH = 0x2000;
    field TIRAMISU_0 int GEAR_DRIVE = 0x0008;
    field TIRAMISU_0 int GEAR_PARK = 0x0004;
    field TIRAMISU_0 int GEAR_REVERSE = 0x0002;
    field TIRAMISU_0 int IGNITION_STATE_UNDEFINED = 0;
    field TIRAMISU_0 int IGNITION_STATE_LOCK = 1;
    field TIRAMISU_0 int IGNITION_STATE_OFF = 2;
    field TIRAMISU_0 int IGNITION_STATE_ACC = 3;
    field TIRAMISU_0 int IGNITION_STATE_ON = 4;
    field TIRAMISU_0 int IGNITION_STATE_START = 5;
    field TIRAMISU_0 int INDEX_ENVIRONMENT_TEMPERATURE = 0;
    field TIRAMISU_0 int INDEX_WHEEL_DISTANCE_RESET_COUNT = 0;
    field TIRAMISU_0 int INDEX_WHEEL_DISTANCE_FRONT_LEFT = 1;
    field TIRAMISU_0 int INDEX_WHEEL_DISTANCE_FRONT_RIGHT = 2;
    field TIRAMISU_0 int INDEX_WHEEL_DISTANCE_REAR_RIGHT = 3;
    field TIRAMISU_0 int INDEX_WHEEL_DISTANCE_REAR_LEFT = 4;
    field TIRAMISU_0 int sensorType;
    field TIRAMISU_0 long timestamp;
    field TIRAMISU_0 float[] floatValues;
    field TIRAMISU_0 int[] intValues;
    field TIRAMISU_0 long[] longValues;
    field TIRAMISU_0 Parcelable.Creator<CarSensorEvent> CREATOR;
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 @hiddenOnly EnvironmentData getEnvironmentData(EnvironmentData data);
    method TIRAMISU_0 @hiddenOnly IgnitionStateData getIgnitionStateData(IgnitionStateData data);
    method TIRAMISU_0 @hiddenOnly NightData getNightData(NightData data);
    method TIRAMISU_0 @hiddenOnly GearData getGearData(GearData data);
    method TIRAMISU_0 @hiddenOnly ParkingBrakeData getParkingBrakeData(ParkingBrakeData data);
    method TIRAMISU_0 @hiddenOnly FuelLevelData getFuelLevelData(FuelLevelData data);
    method TIRAMISU_0 @hiddenOnly OdometerData getOdometerData(OdometerData data);
    method TIRAMISU_0 @hiddenOnly RpmData getRpmData(RpmData data);
    method TIRAMISU_0 @hiddenOnly CarSpeedData getCarSpeedData(CarSpeedData data);
    method TIRAMISU_0 @hiddenOnly CarWheelTickDistanceData getCarWheelTickDistanceData(CarWheelTickDistanceData data);
    method TIRAMISU_0 @hiddenOnly CarAbsActiveData getCarAbsActiveData(CarAbsActiveData data);
    method TIRAMISU_0 @hiddenOnly CarTractionControlActiveData getCarTractionControlActiveData(CarTractionControlActiveData data);
    method TIRAMISU_0 @hiddenOnly CarFuelDoorOpenData getCarFuelDoorOpenData(CarFuelDoorOpenData data);
    method TIRAMISU_0 @hiddenOnly CarEvBatteryLevelData getCarEvBatteryLevelData(CarEvBatteryLevelData data);
    method TIRAMISU_0 @hiddenOnly CarEvChargePortOpenData getCarEvChargePortOpenData(CarEvChargePortOpenData data);
    method TIRAMISU_0 @hiddenOnly CarEvChargePortConnectedData getCarEvChargePortConnectedData(CarEvChargePortConnectedData data);
    method TIRAMISU_0 @hiddenOnly CarEvBatteryChargeRateData getCarEvBatteryChargeRateData(CarEvBatteryChargeRateData data);
    method TIRAMISU_0 @hiddenOnly CarEngineOilLevelData getCarEngineOilLevelData(CarEngineOilLevelData data);
    method TIRAMISU_0 @hiddenOnly String toString();
class CarSensorEvent.EnvironmentData package android.car.hardware
    field TIRAMISU_0 long timestamp;
    field TIRAMISU_0 float temperature;
class @hiddenOnly @hide CarSensorEvent.IgnitionStateData package android.car.hardware
    field TIRAMISU_0 long timestamp;
    field TIRAMISU_0 int ignitionState;
class @hiddenOnly @hide CarSensorEvent.NightData package android.car.hardware
    field TIRAMISU_0 long timestamp;
    field TIRAMISU_0 boolean isNightMode;
class @hiddenOnly @hide CarSensorEvent.GearData package android.car.hardware
    field TIRAMISU_0 long timestamp;
    field TIRAMISU_0 int gear;
class @hiddenOnly @hide CarSensorEvent.ParkingBrakeData package android.car.hardware
    field TIRAMISU_0 long timestamp;
    field TIRAMISU_0 boolean isEngaged;
class @hiddenOnly @hide CarSensorEvent.FuelLevelData package android.car.hardware
    field TIRAMISU_0 long timestamp;
    field TIRAMISU_0 float level;
class @hiddenOnly @hide CarSensorEvent.OdometerData package android.car.hardware
    field TIRAMISU_0 long timestamp;
    field TIRAMISU_0 float kms;
class @hiddenOnly @hide CarSensorEvent.RpmData package android.car.hardware
    field TIRAMISU_0 long timestamp;
    field TIRAMISU_0 float rpm;
class @hiddenOnly @hide CarSensorEvent.CarSpeedData package android.car.hardware
    field TIRAMISU_0 long timestamp;
    field TIRAMISU_0 float carSpeed;
class @hiddenOnly @hide CarSensorEvent.CarWheelTickDistanceData package android.car.hardware
    field TIRAMISU_0 long timestamp;
    field TIRAMISU_0 long sensorResetCount;
    field TIRAMISU_0 long frontLeftWheelDistanceMm;
    field TIRAMISU_0 long frontRightWheelDistanceMm;
    field TIRAMISU_0 long rearRightWheelDistanceMm;
    field TIRAMISU_0 long rearLeftWheelDistanceMm;
class @hiddenOnly @hide CarSensorEvent.CarAbsActiveData package android.car.hardware
    field TIRAMISU_0 long timestamp;
    field TIRAMISU_0 boolean absIsActive;
class @hiddenOnly @hide CarSensorEvent.CarTractionControlActiveData package android.car.hardware
    field TIRAMISU_0 long timestamp;
    field TIRAMISU_0 boolean tractionControlIsActive;
class @hiddenOnly @hide CarSensorEvent.CarFuelDoorOpenData package android.car.hardware
    field TIRAMISU_0 long timestamp;
    field TIRAMISU_0 boolean fuelDoorIsOpen;
class @hiddenOnly @hide CarSensorEvent.CarEvBatteryLevelData package android.car.hardware
    field TIRAMISU_0 long timestamp;
    field TIRAMISU_0 float evBatteryLevel;
class @hiddenOnly @hide CarSensorEvent.CarEvChargePortOpenData package android.car.hardware
    field TIRAMISU_0 long timestamp;
    field TIRAMISU_0 boolean evChargePortIsOpen;
class @hiddenOnly @hide CarSensorEvent.CarEvChargePortConnectedData package android.car.hardware
    field TIRAMISU_0 long timestamp;
    field TIRAMISU_0 boolean evChargePortIsConnected;
class @hiddenOnly @hide CarSensorEvent.CarEvBatteryChargeRateData package android.car.hardware
    field TIRAMISU_0 long timestamp;
    field TIRAMISU_0 float evChargeRate;
class @hiddenOnly @hide CarSensorEvent.CarEngineOilLevelData package android.car.hardware
    field TIRAMISU_0 long timestamp;
    field TIRAMISU_0 int engineOilLevel;
class CarSensorManager package android.car.hardware
    field TIRAMISU_0 @hiddenOnly int SENSOR_TYPE_RESERVED1 = 1;
    field TIRAMISU_0 int SENSOR_TYPE_CAR_SPEED = 0x11600207;
    field TIRAMISU_0 int SENSOR_TYPE_RPM = 0x11600305;
    field TIRAMISU_0 int SENSOR_TYPE_ODOMETER = 0x11600204;
    field TIRAMISU_0 int SENSOR_TYPE_FUEL_LEVEL = 0x11600307;
    field TIRAMISU_0 int SENSOR_TYPE_PARKING_BRAKE = 0x11200402;
    field TIRAMISU_0 int SENSOR_TYPE_GEAR = 0x11400400;
    field TIRAMISU_0 @hiddenOnly int SENSOR_TYPE_RESERVED8 = 8;
    field TIRAMISU_0 int SENSOR_TYPE_NIGHT = 0x11200407;
    field TIRAMISU_0 int SENSOR_TYPE_ENV_OUTSIDE_TEMPERATURE = 0x11600703;
    field TIRAMISU_0 @hiddenOnly int SENSOR_TYPE_RESERVED10 = 10;
    field TIRAMISU_0 @hiddenOnly int SENSOR_TYPE_RESERVED11 = 11;
    field TIRAMISU_0 @hiddenOnly int SENSOR_TYPE_RESERVED12 = 12;
    field TIRAMISU_0 @hiddenOnly int SENSOR_TYPE_RESERVED13 = 13;
    field TIRAMISU_0 @hiddenOnly int SENSOR_TYPE_RESERVED14 = 14;
    field TIRAMISU_0 @hiddenOnly int SENSOR_TYPE_RESERVED15 = 15;
    field TIRAMISU_0 @hiddenOnly int SENSOR_TYPE_RESERVED16 = 16;
    field TIRAMISU_0 @hiddenOnly int SENSOR_TYPE_RESERVED17 = 17;
    field TIRAMISU_0 @hiddenOnly int SENSOR_TYPE_RESERVED18 = 18;
    field TIRAMISU_0 @hiddenOnly int SENSOR_TYPE_RESERVED19 = 19;
    field TIRAMISU_0 @hiddenOnly int SENSOR_TYPE_RESERVED20 = 20;
    field TIRAMISU_0 @hiddenOnly int SENSOR_TYPE_RESERVED21 = 21;
    field TIRAMISU_0 int SENSOR_TYPE_IGNITION_STATE = 0x11400409;
    field TIRAMISU_0 int SENSOR_TYPE_WHEEL_TICK_DISTANCE = 0x11510306;
    field TIRAMISU_0 int SENSOR_TYPE_ABS_ACTIVE = 0x1120040a;
    field TIRAMISU_0 int SENSOR_TYPE_TRACTION_CONTROL_ACTIVE = 0x1120040b;
    field TIRAMISU_0 @hiddenOnly int SENSOR_TYPE_RESERVED26 = 26;
    field TIRAMISU_0 int SENSOR_TYPE_FUEL_DOOR_OPEN = 0x11200308;
    field TIRAMISU_0 int SENSOR_TYPE_EV_BATTERY_LEVEL = 0x11600309;
    field TIRAMISU_0 int SENSOR_TYPE_EV_CHARGE_PORT_OPEN = 0x1120030a;
    field TIRAMISU_0 int SENSOR_TYPE_EV_CHARGE_PORT_CONNECTED = 0x1120030b;
    field TIRAMISU_0 int SENSOR_TYPE_EV_BATTERY_CHARGE_RATE = 0x1160030c;
    field TIRAMISU_0 int SENSOR_TYPE_ENGINE_OIL_LEVEL = 0x11400303;
    field TIRAMISU_0 int SENSOR_RATE_ONCHANGE = 0;
    field TIRAMISU_0 int SENSOR_RATE_NORMAL = 1;
    field TIRAMISU_0 int SENSOR_RATE_UI = 5;
    field TIRAMISU_0 int SENSOR_RATE_FAST = 10;
    field TIRAMISU_0 int SENSOR_RATE_FASTEST = 100;
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
    method TIRAMISU_0 int[] getSupportedSensors();
    method TIRAMISU_0 List<CarPropertyConfig> getPropertyList();
    method TIRAMISU_0 boolean isSensorSupported(int sensorType);
    method TIRAMISU_0 @hiddenOnly boolean isSensorSupported(int[] sensorList, int sensorType);
    method TIRAMISU_0 boolean registerListener(OnSensorChangedListener listener, int sensorType, int rate);
    method TIRAMISU_0 void unregisterListener(OnSensorChangedListener listener);
    method TIRAMISU_0 void unregisterListener(OnSensorChangedListener listener, int sensorType);
    method TIRAMISU_0 CarSensorEvent getLatestSensorEvent(int type);
    method TIRAMISU_0 @hiddenOnly CarSensorConfig getSensorConfig(int type);
interface CarSensorManager.OnSensorChangedListener package android.car.hardware
    method TIRAMISU_0 void onSensorChanged(CarSensorEvent event);
class @hide @SystemApi CarHvacManager package android.car.hardware.hvac
    field TIRAMISU_0 int ID_MIRROR_DEFROSTER_ON = 0x1440050c;
    field TIRAMISU_0 int ID_STEERING_WHEEL_HEAT = 0x1140050d;
    field TIRAMISU_0 int ID_OUTSIDE_AIR_TEMP = 0x11600703;
    field TIRAMISU_0 int ID_TEMPERATURE_DISPLAY_UNITS = 0x1140050e;
    field TIRAMISU_0 int ID_ZONED_TEMP_SETPOINT = 0x15600503;
    field TIRAMISU_0 int ID_ZONED_TEMP_ACTUAL = 0x15600502;
    field TIRAMISU_0 int ID_ZONED_HVAC_POWER_ON = 0x15200510;
    field TIRAMISU_0 int ID_ZONED_FAN_SPEED_SETPOINT = 0x15400500;
    field TIRAMISU_0 int ID_ZONED_FAN_SPEED_RPM = 0x1540050f;
    field TIRAMISU_0 int ID_ZONED_FAN_DIRECTION_AVAILABLE = 0x15410511;
    field TIRAMISU_0 int ID_ZONED_FAN_DIRECTION = 0x15400501;
    field TIRAMISU_0 int ID_ZONED_SEAT_TEMP = 0x1540050b;
    field TIRAMISU_0 int ID_ZONED_AC_ON = 0x15200505;
    field TIRAMISU_0 int ID_ZONED_AUTOMATIC_MODE_ON = 0x1520050A;
    field TIRAMISU_0 int ID_ZONED_AIR_RECIRCULATION_ON = 0x15200508;
    field TIRAMISU_0 int ID_ZONED_MAX_AC_ON = 0x15200506;
    field TIRAMISU_0 int ID_ZONED_DUAL_ZONE_ON = 0x15200509;
    field TIRAMISU_0 int ID_ZONED_MAX_DEFROST_ON = 0x15200507;
    field TIRAMISU_0 int ID_ZONED_HVAC_AUTO_RECIRC_ON = 0x15200512;
    field TIRAMISU_0 int ID_WINDOW_DEFROSTER_ON = 0x13200504;
    field TIRAMISU_0 int FAN_DIRECTION_FACE = 0x1;
    field TIRAMISU_0 int FAN_DIRECTION_FLOOR = 0x2;
    field TIRAMISU_0 int FAN_DIRECTION_DEFROST = 0x4;
    method TIRAMISU_0 void registerCallback(CarHvacEventCallback callback);
    method TIRAMISU_0 void unregisterCallback(CarHvacEventCallback callback);
    method TIRAMISU_0 List<CarPropertyConfig> getPropertyList();
    method TIRAMISU_0 boolean isPropertyAvailable(int propertyId, int area);
    method TIRAMISU_0 boolean getBooleanProperty(int propertyId, int area);
    method TIRAMISU_0 float getFloatProperty(int propertyId, int area);
    method TIRAMISU_0 int getIntProperty(int propertyId, int area);
    method TIRAMISU_0 void setBooleanProperty(int propertyId, int area, boolean val);
    method TIRAMISU_0 void setFloatProperty(int propertyId, int area, float val);
    method TIRAMISU_0 void setIntProperty(int propertyId, int area, int val);
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
interface CarHvacManager.CarHvacEventCallback package android.car.hardware.hvac
    method TIRAMISU_0 void onChangeEvent(CarPropertyValue value);
    method TIRAMISU_0 void onErrorEvent(int propertyId, int zone);
class @hide @SystemApi CarCabinManager package android.car.hardware.cabin
    field TIRAMISU_0 int ID_DOOR_POS = 0x16400b00;
    field TIRAMISU_0 int ID_DOOR_MOVE = 0x16400b01;
    field TIRAMISU_0 int ID_DOOR_LOCK = 0x16200b02;
    field TIRAMISU_0 int ID_MIRROR_Z_POS = 0x14400b40;
    field TIRAMISU_0 int ID_MIRROR_Z_MOVE = 0x14400b41;
    field TIRAMISU_0 int ID_MIRROR_Y_POS = 0x14400b42;
    field TIRAMISU_0 int ID_MIRROR_Y_MOVE = 0x14400b43;
    field TIRAMISU_0 int ID_MIRROR_LOCK = 0x11200b44;
    field TIRAMISU_0 int ID_MIRROR_FOLD = 0x11200b45;
    field TIRAMISU_0 int ID_SEAT_MEMORY_SELECT = 0x15400b80;
    field TIRAMISU_0 int ID_SEAT_MEMORY_SET = 0x15400b81;
    field TIRAMISU_0 int ID_SEAT_BELT_BUCKLED = 0x15200b82;
    field TIRAMISU_0 int ID_SEAT_BELT_HEIGHT_POS = 0x15400b83;
    field TIRAMISU_0 int ID_SEAT_BELT_HEIGHT_MOVE = 0x15400b84;
    field TIRAMISU_0 int ID_SEAT_FORE_AFT_POS = 0x15400b85;
    field TIRAMISU_0 int ID_SEAT_FORE_AFT_MOVE = 0x15400b86;
    field TIRAMISU_0 int ID_SEAT_BACKREST_ANGLE_1_POS = 0x15400b87;
    field TIRAMISU_0 int ID_SEAT_BACKREST_ANGLE_1_MOVE = 0x15400b88;
    field TIRAMISU_0 int ID_SEAT_BACKREST_ANGLE_2_POS = 0x15400b89;
    field TIRAMISU_0 int ID_SEAT_BACKREST_ANGLE_2_MOVE = 0x15400b8a;
    field TIRAMISU_0 int ID_SEAT_HEIGHT_POS = 0x15400b8b;
    field TIRAMISU_0 int ID_SEAT_HEIGHT_MOVE = 0x15400b8c;
    field TIRAMISU_0 int ID_SEAT_DEPTH_POS = 0x15400b8d;
    field TIRAMISU_0 int ID_SEAT_DEPTH_MOVE = 0x15400b8e;
    field TIRAMISU_0 int ID_SEAT_TILT_POS = 0x15400b8f;
    field TIRAMISU_0 int ID_SEAT_TILT_MOVE = 0x15400b90;
    field TIRAMISU_0 int ID_SEAT_LUMBAR_FORE_AFT_POS = 0x15400b91;
    field TIRAMISU_0 int ID_SEAT_LUMBAR_FORE_AFT_MOVE = 0x15400b92;
    field TIRAMISU_0 int ID_SEAT_LUMBAR_SIDE_SUPPORT_POS = 0x15400b93;
    field TIRAMISU_0 int ID_SEAT_LUMBAR_SIDE_SUPPORT_MOVE = 0x15400b94;
    field TIRAMISU_0 int ID_SEAT_HEADREST_HEIGHT_POS = 0x15400b95;
    field TIRAMISU_0 int ID_SEAT_HEADREST_HEIGHT_MOVE = 0x15400b96;
    field TIRAMISU_0 int ID_SEAT_HEADREST_ANGLE_POS = 0x15400b97;
    field TIRAMISU_0 int ID_SEAT_HEADREST_ANGLE_MOVE = 0x15400b98;
    field TIRAMISU_0 int ID_SEAT_HEADREST_FORE_AFT_POS = 0x15400b99;
    field TIRAMISU_0 int ID_SEAT_HEADREST_FORE_AFT_MOVE = 0x15400b9a;
    field TIRAMISU_0 int ID_WINDOW_POS = 0x13400bc0;
    field TIRAMISU_0 int ID_WINDOW_MOVE = 0x13400bc1;
    field TIRAMISU_0 int ID_WINDOW_LOCK = 0x13400bc4;
    method TIRAMISU_0 boolean isZonedProperty(int propertyId);
    method TIRAMISU_0 void registerCallback(CarCabinEventCallback callback);
    method TIRAMISU_0 void unregisterCallback(CarCabinEventCallback callback);
    method TIRAMISU_0 List<CarPropertyConfig> getPropertyList();
    method TIRAMISU_0 boolean getBooleanProperty(int propertyId, int area);
    method TIRAMISU_0 float getFloatProperty(int propertyId, int area);
    method TIRAMISU_0 int getIntProperty(int propertyId, int area);
    method TIRAMISU_0 void setBooleanProperty(int propertyId, int area, boolean val);
    method TIRAMISU_0 void setFloatProperty(int propertyId, int area, float val);
    method TIRAMISU_0 void setIntProperty(int propertyId, int area, int val);
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
interface CarCabinManager.CarCabinEventCallback package android.car.hardware.cabin
    method TIRAMISU_0 void onChangeEvent(CarPropertyValue value);
    method TIRAMISU_0 void onErrorEvent(int propertyId, int zone);
class PropertyAccessDeniedSecurityException package android.car.hardware.property
class EvChargingConnectorType package android.car.hardware.property
    field TIRAMISU_0 int UNKNOWN = 0;
    field TIRAMISU_0 int IEC_TYPE_1_AC = 1;
    field TIRAMISU_0 int IEC_TYPE_2_AC = 2;
    field TIRAMISU_0 int IEC_TYPE_3_AC = 3;
    field TIRAMISU_0 int IEC_TYPE_4_DC = 4;
    field TIRAMISU_0 int IEC_TYPE_1_CCS_DC = 5;
    field TIRAMISU_0 int IEC_TYPE_2_CCS_DC = 6;
    field TIRAMISU_0 int TESLA_ROADSTER = 7;
    field TIRAMISU_0 int TESLA_HPWC = 8;
    field TIRAMISU_0 int TESLA_SUPERCHARGER = 9;
    field TIRAMISU_0 int GBT_AC = 10;
    field TIRAMISU_0 int GBT_DC = 11;
    field TIRAMISU_0 int OTHER = 101;
    method TIRAMISU_0 String toString(int connectorType);
class PropertyNotAvailableException package android.car.hardware.property
class @hide @SystemApi VehicleVendorPermission package android.car.hardware.property
    field TIRAMISU_0 String PERMISSION_GET_CAR_VENDOR_CATEGORY_WINDOW = "android.car.permission.GET_CAR_VENDOR_CATEGORY_WINDOW";
    field TIRAMISU_0 String PERMISSION_SET_CAR_VENDOR_CATEGORY_WINDOW = "android.car.permission.SET_CAR_VENDOR_CATEGORY_WINDOW";
    field TIRAMISU_0 String PERMISSION_GET_CAR_VENDOR_CATEGORY_DOOR = "android.car.permission.GET_CAR_VENDOR_CATEGORY_DOOR";
    field TIRAMISU_0 String PERMISSION_SET_CAR_VENDOR_CATEGORY_DOOR = "android.car.permission.SET_CAR_VENDOR_CATEGORY_DOOR";
    field TIRAMISU_0 String PERMISSION_GET_CAR_VENDOR_CATEGORY_SEAT = "android.car.permission.GET_CAR_VENDOR_CATEGORY_SEAT";
    field TIRAMISU_0 String PERMISSION_SET_CAR_VENDOR_CATEGORY_SEAT = "android.car.permission.SET_CAR_VENDOR_CATEGORY_SEAT";
    field TIRAMISU_0 String PERMISSION_GET_CAR_VENDOR_CATEGORY_MIRROR = "android.car.permission.GET_CAR_VENDOR_CATEGORY_MIRROR";
    field TIRAMISU_0 String PERMISSION_SET_CAR_VENDOR_CATEGORY_MIRROR = "android.car.permission.SET_CAR_VENDOR_CATEGORY_MIRROR";
    field TIRAMISU_0 String PERMISSION_GET_CAR_VENDOR_CATEGORY_INFO = "android.car.permission.GET_CAR_VENDOR_CATEGORY_INFO";
    field TIRAMISU_0 String PERMISSION_SET_CAR_VENDOR_CATEGORY_INFO = "android.car.permission.SET_CAR_VENDOR_CATEGORY_INFO";
    field TIRAMISU_0 String PERMISSION_GET_CAR_VENDOR_CATEGORY_ENGINE = "android.car.permission.GET_CAR_VENDOR_CATEGORY_ENGINE";
    field TIRAMISU_0 String PERMISSION_SET_CAR_VENDOR_CATEGORY_ENGINE = "android.car.permission.SET_CAR_VENDOR_CATEGORY_ENGINE";
    field TIRAMISU_0 String PERMISSION_GET_CAR_VENDOR_CATEGORY_HVAC = "android.car.permission.GET_CAR_VENDOR_CATEGORY_HVAC";
    field TIRAMISU_0 String PERMISSION_SET_CAR_VENDOR_CATEGORY_HVAC = "android.car.permission.SET_CAR_VENDOR_CATEGORY_HVAC";
    field TIRAMISU_0 String PERMISSION_GET_CAR_VENDOR_CATEGORY_LIGHT = "android.car.permission.GET_CAR_VENDOR_CATEGORY_LIGHT";
    field TIRAMISU_0 String PERMISSION_SET_CAR_VENDOR_CATEGORY_LIGHT = "android.car.permission.SET_CAR_VENDOR_CATEGORY_LIGHT";
    field TIRAMISU_0 String PERMISSION_GET_CAR_VENDOR_CATEGORY_1 = "android.car.permission.GET_CAR_VENDOR_CATEGORY_1";
    field TIRAMISU_0 String PERMISSION_SET_CAR_VENDOR_CATEGORY_1 = "android.car.permission.SET_CAR_VENDOR_CATEGORY_1";
    field TIRAMISU_0 String PERMISSION_GET_CAR_VENDOR_CATEGORY_2 = "android.car.permission.GET_CAR_VENDOR_CATEGORY_2";
    field TIRAMISU_0 String PERMISSION_SET_CAR_VENDOR_CATEGORY_2 = "android.car.permission.SET_CAR_VENDOR_CATEGORY_2";
    field TIRAMISU_0 String PERMISSION_GET_CAR_VENDOR_CATEGORY_3 = "android.car.permission.GET_CAR_VENDOR_CATEGORY_3";
    field TIRAMISU_0 String PERMISSION_SET_CAR_VENDOR_CATEGORY_3 = "android.car.permission.SET_CAR_VENDOR_CATEGORY_3";
    field TIRAMISU_0 String PERMISSION_GET_CAR_VENDOR_CATEGORY_4 = "android.car.permission.GET_CAR_VENDOR_CATEGORY_4";
    field TIRAMISU_0 String PERMISSION_SET_CAR_VENDOR_CATEGORY_4 = "android.car.permission.SET_CAR_VENDOR_CATEGORY_4";
    field TIRAMISU_0 String PERMISSION_GET_CAR_VENDOR_CATEGORY_5 = "android.car.permission.GET_CAR_VENDOR_CATEGORY_5";
    field TIRAMISU_0 String PERMISSION_SET_CAR_VENDOR_CATEGORY_5 = "android.car.permission.SET_CAR_VENDOR_CATEGORY_5";
    field TIRAMISU_0 String PERMISSION_GET_CAR_VENDOR_CATEGORY_6 = "android.car.permission.GET_CAR_VENDOR_CATEGORY_6";
    field TIRAMISU_0 String PERMISSION_SET_CAR_VENDOR_CATEGORY_6 = "android.car.permission.SET_CAR_VENDOR_CATEGORY_6";
    field TIRAMISU_0 String PERMISSION_GET_CAR_VENDOR_CATEGORY_7 = "android.car.permission.GET_CAR_VENDOR_CATEGORY_7";
    field TIRAMISU_0 String PERMISSION_SET_CAR_VENDOR_CATEGORY_7 = "android.car.permission.SET_CAR_VENDOR_CATEGORY_7";
    field TIRAMISU_0 String PERMISSION_GET_CAR_VENDOR_CATEGORY_8 = "android.car.permission.GET_CAR_VENDOR_CATEGORY_8";
    field TIRAMISU_0 String PERMISSION_SET_CAR_VENDOR_CATEGORY_8 = "android.car.permission.SET_CAR_VENDOR_CATEGORY_8";
    field TIRAMISU_0 String PERMISSION_GET_CAR_VENDOR_CATEGORY_9 = "android.car.permission.GET_CAR_VENDOR_CATEGORY_9";
    field TIRAMISU_0 String PERMISSION_SET_CAR_VENDOR_CATEGORY_9 = "android.car.permission.SET_CAR_VENDOR_CATEGORY_9";
    field TIRAMISU_0 String PERMISSION_GET_CAR_VENDOR_CATEGORY_10 = "android.car.permission.GET_CAR_VENDOR_CATEGORY_10";
    field TIRAMISU_0 String PERMISSION_SET_CAR_VENDOR_CATEGORY_10 = "android.car.permission.SET_CAR_VENDOR_CATEGORY_10";
class VehicleElectronicTollCollectionCardStatus package android.car.hardware.property
    field TIRAMISU_0 int UNKNOWN = 0;
    field TIRAMISU_0 int ELECTRONIC_TOLL_COLLECTION_CARD_VALID = 1;
    field TIRAMISU_0 int ELECTRONIC_TOLL_COLLECTION_CARD_INVALID = 2;
    field TIRAMISU_0 int ELECTRONIC_TOLL_COLLECTION_CARD_NOT_INSERTED = 3;
class @hiddenOnly @hide VehicleHalStatusCode package android.car.hardware.property
    field TIRAMISU_0 int STATUS_OK = 0;
    field TIRAMISU_0 int STATUS_TRY_AGAIN = 1;
    field TIRAMISU_0 int STATUS_INVALID_ARG = 2;
    field TIRAMISU_0 int STATUS_NOT_AVAILABLE = 3;
    field TIRAMISU_0 int STATUS_ACCESS_DENIED = 4;
    field TIRAMISU_0 int STATUS_INTERNAL_ERROR = 5;
class PropertyNotAvailableAndRetryException package android.car.hardware.property
class VehicleElectronicTollCollectionCardType package android.car.hardware.property
    field TIRAMISU_0 int UNKNOWN = 0;
    field TIRAMISU_0 int JP_ELECTRONIC_TOLL_COLLECTION_CARD = 1;
    field TIRAMISU_0 int JP_ELECTRONIC_TOLL_COLLECTION_CARD_V2 = 2;
class CarInternalErrorException package android.car.hardware.property
class @hiddenOnly @hide CarPropertyEvent package android.car.hardware.property
    field TIRAMISU_0 int PROPERTY_EVENT_PROPERTY_CHANGE = 0;
    field TIRAMISU_0 int PROPERTY_EVENT_ERROR = 1;
    field TIRAMISU_0 Parcelable.Creator<CarPropertyEvent> CREATOR;
    method TIRAMISU_0 int getEventType();
    method TIRAMISU_0 CarPropertyValue<?> getCarPropertyValue();
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 CarPropertyEvent createErrorEventWithErrorCode(int propertyId, int areaId, int errorCode);
    method TIRAMISU_0 int getErrorCode();
    method TIRAMISU_0 String toString();
class CarPropertyManager package android.car.hardware.property
    field TIRAMISU_0 float SENSOR_RATE_ONCHANGE = 0f;
    field TIRAMISU_0 float SENSOR_RATE_NORMAL = 1f;
    field TIRAMISU_0 float SENSOR_RATE_UI = 5f;
    field TIRAMISU_0 float SENSOR_RATE_FAST = 10f;
    field TIRAMISU_0 float SENSOR_RATE_FASTEST = 100f;
    field TIRAMISU_0 int CAR_SET_PROPERTY_ERROR_CODE_TRY_AGAIN = 1;
    field TIRAMISU_0 int CAR_SET_PROPERTY_ERROR_CODE_INVALID_ARG = 2;
    field TIRAMISU_0 int CAR_SET_PROPERTY_ERROR_CODE_PROPERTY_NOT_AVAILABLE = 3;
    field TIRAMISU_0 int CAR_SET_PROPERTY_ERROR_CODE_ACCESS_DENIED = 4;
    field TIRAMISU_0 int CAR_SET_PROPERTY_ERROR_CODE_UNKNOWN = 5;
    method TIRAMISU_0 boolean registerCallback(CarPropertyEventCallback carPropertyEventCallback, int propertyId, float updateRateHz);
    method TIRAMISU_0 void unregisterCallback(CarPropertyEventCallback carPropertyEventCallback);
    method TIRAMISU_0 void unregisterCallback(CarPropertyEventCallback carPropertyEventCallback, int propertyId);
    method TIRAMISU_0 List<CarPropertyConfig> getPropertyList();
    method TIRAMISU_0 List<CarPropertyConfig> getPropertyList(ArraySet<Integer> propertyIds);
    method TIRAMISU_0 CarPropertyConfig<?> getCarPropertyConfig(int propId);
    method TIRAMISU_0 int getAreaId(int propId, int area);
    method TIRAMISU_0 @hiddenOnly String getReadPermission(int propId);
    method TIRAMISU_0 @hiddenOnly String getWritePermission(int propId);
    method TIRAMISU_0 boolean isPropertyAvailable(int propId, int area);
    method TIRAMISU_0 boolean getBooleanProperty(int prop, int area);
    method TIRAMISU_0 float getFloatProperty(int prop, int area);
    method TIRAMISU_0 int getIntProperty(int prop, int area);
    method TIRAMISU_0 int[] getIntArrayProperty(int prop, int area);
    method TIRAMISU_0 CarPropertyValue<E> getProperty(Class<E> clazz, int propId, int areaId);
    method TIRAMISU_0 CarPropertyValue<E> getProperty(int propId, int areaId);
    method TIRAMISU_0 void setProperty(Class<E> clazz, int propId, int areaId, E val);
    method TIRAMISU_0 void setBooleanProperty(int prop, int areaId, boolean val);
    method TIRAMISU_0 void setFloatProperty(int prop, int areaId, float val);
    method TIRAMISU_0 void setIntProperty(int prop, int areaId, int val);
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
interface CarPropertyManager.CarPropertyEventCallback package android.car.hardware.property
    method TIRAMISU_0 void onChangeEvent(CarPropertyValue value);
    method TIRAMISU_0 void onErrorEvent(int propId, int zone);
    method TIRAMISU_0 void onErrorEvent(int propId, int areaId, int errorCode);
class CarPowerManager package android.car.hardware.power
    field TIRAMISU_0 @hiddenOnly String TAG = CarPowerManager.class.getSimpleName();
    field TIRAMISU_0 int STATE_INVALID = 0;
    field TIRAMISU_0 int STATE_WAIT_FOR_VHAL = 1;
    field TIRAMISU_0 int STATE_SUSPEND_ENTER = 2;
    field TIRAMISU_0 int STATE_SUSPEND_EXIT = 3;
    field TIRAMISU_0 int STATE_SHUTDOWN_ENTER = 5;
    field TIRAMISU_0 int STATE_ON = 6;
    field TIRAMISU_0 int STATE_SHUTDOWN_PREPARE = 7;
    field TIRAMISU_0 int STATE_SHUTDOWN_CANCELLED = 8;
    field TIRAMISU_0 int STATE_HIBERNATION_ENTER = 9;
    field TIRAMISU_0 int STATE_HIBERNATION_EXIT = 10;
    field TIRAMISU_0 int STATE_PRE_SHUTDOWN_PREPARE = 11;
    field TIRAMISU_0 int STATE_POST_SUSPEND_ENTER = 12;
    field TIRAMISU_0 int STATE_POST_SHUTDOWN_ENTER = 13;
    field TIRAMISU_0 int STATE_POST_HIBERNATION_ENTER = 14;
    method TIRAMISU_0 @hiddenOnly void requestShutdownOnNextSuspend();
    method TIRAMISU_0 @hiddenOnly void scheduleNextWakeupTime(int seconds);
    method TIRAMISU_0 int getPowerState();
    method TIRAMISU_0 void setListener(Executor executor, CarPowerStateListener listener);
    method TIRAMISU_0 void setListenerWithCompletion(Executor executor, CarPowerStateListenerWithCompletion listener);
    method TIRAMISU_0 void clearListener();
    method TIRAMISU_0 CarPowerPolicy getCurrentPowerPolicy();
    method TIRAMISU_0 void applyPowerPolicy(String policyId);
    method TIRAMISU_0 void setPowerPolicyGroup(String policyGroupId);
    method TIRAMISU_0 void addPowerPolicyListener(Executor executor, CarPowerPolicyFilter filter, CarPowerPolicyListener listener);
    method TIRAMISU_0 void removePowerPolicyListener(CarPowerPolicyListener listener);
    method TIRAMISU_0 @hiddenOnly boolean isCompletionAllowed(int state);
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
interface @hide @SystemApi CarPowerManager.CompletablePowerStateChangeFuture package android.car.hardware.power
    method TIRAMISU_0 void complete();
    method TIRAMISU_0 long getExpirationTime();
interface @hide @SystemApi CarPowerManager.CarPowerStateListener package android.car.hardware.power
    method TIRAMISU_0 void onStateChanged(int state);
interface @hide @SystemApi CarPowerManager.CarPowerStateListenerWithCompletion package android.car.hardware.power
    method TIRAMISU_0 void onStateChanged(int state, CompletablePowerStateChangeFuture future);
interface CarPowerManager.CarPowerPolicyListener package android.car.hardware.power
    method TIRAMISU_0 void onPolicyChanged(CarPowerPolicy policy);
class @hiddenOnly @hide PowerComponentUtil package android.car.hardware.power
    field TIRAMISU_0 int COMPONENT_STATE_ENABLED = 1;
    field TIRAMISU_0 int COMPONENT_STATE_DISABLED = 2;
    field TIRAMISU_0 int COMPONENT_STATE_UNTOUCHED = 3;
    field TIRAMISU_0 int INVALID_POWER_COMPONENT = -1;
    field TIRAMISU_0 int FIRST_POWER_COMPONENT = PowerComponent.AUDIO;
    field TIRAMISU_0 int LAST_POWER_COMPONENT = PowerComponent.CPU;
    method TIRAMISU_0 boolean isValidPowerComponent(int component);
    method TIRAMISU_0 boolean hasComponents(CarPowerPolicy policy, CarPowerPolicyFilter filter);
    method TIRAMISU_0 int toPowerComponent(String component, boolean prefix);
    method TIRAMISU_0 String powerComponentToString(int component);
class CarPowerPolicy package android.car.hardware.power
    field TIRAMISU_0 Parcelable.Creator<CarPowerPolicy> CREATOR;
    method TIRAMISU_0 boolean isComponentEnabled(int component);
    method TIRAMISU_0 String getPolicyId();
    method TIRAMISU_0 int[] getEnabledComponents();
    method TIRAMISU_0 int[] getDisabledComponents();
    method TIRAMISU_0 void writeToParcel(android.os.Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class CarPowerPolicyFilter package android.car.hardware.power
    field TIRAMISU_0 Parcelable.Creator<CarPowerPolicyFilter> CREATOR;
    method TIRAMISU_0 int[] getComponents();
    method TIRAMISU_0 void writeToParcel(android.os.Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class CarPowerPolicyFilter.Builder package android.car.hardware.power
    method TIRAMISU_0 Builder setComponents(int value);
    method TIRAMISU_0 CarPowerPolicyFilter build();
class @hiddenOnly @hide CarFeatures package android.car
    field TIRAMISU_0 @hiddenOnly String FEATURE_CAR_USER_NOTICE_SERVICE = "com.android.car.user.CarUserNoticeService";
    method TIRAMISU_0 @hiddenOnly boolean isFeatureEnabled(ICar service, String featureName);
    method TIRAMISU_0 @hiddenOnly void resetCache();
class Car package android.car
    field TIRAMISU_0 int API_VERSION_MAJOR_INT = 33;
    field TIRAMISU_0 int API_VERSION_MINOR_INT = 1;
    field TIRAMISU_0 int PLATFORM_VERSION_MINOR_INT = SystemProperties.getInt(PROPERTY_PLATFORM_MINOR_VERSION, /* def= */
0);
    field  @hiddenOnly String PROPERTY_EMULATED_PLATFORM_VERSION_MAJOR = "com.android.car.internal.debug.platform_major_version";
    field  @hiddenOnly String PROPERTY_EMULATED_PLATFORM_VERSION_MINOR = "com.android.car.internal.debug.platform_minor_version";
    field TIRAMISU_0 @hiddenOnly String CAR_SERVICE_BINDER_SERVICE_NAME = "car_service";
    field TIRAMISU_0 String META_DATA_DISTRACTION_OPTIMIZED = "distractionOptimized";
    field TIRAMISU_0 String META_DATA_REQUIRES_CAR_FEATURE = "requires-car-feature";
    field TIRAMISU_0 String SENSOR_SERVICE = "sensor";
    field TIRAMISU_0 String INFO_SERVICE = "info";
    field TIRAMISU_0 String APP_FOCUS_SERVICE = "app_focus";
    field TIRAMISU_0 String PACKAGE_SERVICE = "package";
    field TIRAMISU_0 String AUDIO_SERVICE = "audio";
    field TIRAMISU_0 String CAR_NAVIGATION_SERVICE = "car_navigation_service";
    field TIRAMISU_0 String CAR_OCCUPANT_ZONE_SERVICE = "car_occupant_zone_service";
    field TIRAMISU_0 String CAR_USER_SERVICE = "car_user_service";
    field TIRAMISU_0 @hiddenOnly String EXPERIMENTAL_CAR_USER_SERVICE = "experimental_car_user_service";
    field TIRAMISU_0 String CAR_DEVICE_POLICY_SERVICE = "car_device_policy_service";
    field TIRAMISU_0 @hiddenOnly String CAR_INSTRUMENT_CLUSTER_SERVICE = "cluster_service";
    field TIRAMISU_0 String CABIN_SERVICE = "cabin";
    field TIRAMISU_0 String DIAGNOSTIC_SERVICE = "diagnostic";
    field TIRAMISU_0 String HVAC_SERVICE = "hvac";
    field TIRAMISU_0 String POWER_SERVICE = "power";
    field TIRAMISU_0 String PROJECTION_SERVICE = "projection";
    field TIRAMISU_0 String PROPERTY_SERVICE = "property";
    field TIRAMISU_0 String VENDOR_EXTENSION_SERVICE = "vendor_extension";
    field TIRAMISU_0 String VEHICLE_MAP_SERVICE = "vehicle_map_service";
    field TIRAMISU_0 String VMS_SUBSCRIBER_SERVICE = "vehicle_map_subscriber_service";
    field TIRAMISU_0 String CAR_DRIVING_STATE_SERVICE = "drivingstate";
    field TIRAMISU_0 String CAR_UX_RESTRICTION_SERVICE = "uxrestriction";
    field TIRAMISU_0 String OCCUPANT_AWARENESS_SERVICE = "occupant_awareness";
    field TIRAMISU_0 String CAR_MEDIA_SERVICE = "car_media";
    field TIRAMISU_0 String CAR_BUGREPORT_SERVICE = "car_bugreport";
    field TIRAMISU_0 String STORAGE_MONITORING_SERVICE = "storage_monitoring";
    field TIRAMISU_0 String CAR_WATCHDOG_SERVICE = "car_watchdog";
    field TIRAMISU_0 String CAR_PERFORMANCE_SERVICE = "car_performance";
    field TIRAMISU_0 String CAR_INPUT_SERVICE = "android.car.input";
    field TIRAMISU_0 @hiddenOnly String CLUSTER_HOME_SERVICE = "cluster_home_service";
    field TIRAMISU_0 String TEST_SERVICE = "car-service-test";
    field TIRAMISU_0 String CAR_EVS_SERVICE = "car_evs_service";
    field TIRAMISU_0 String CAR_TELEMETRY_SERVICE = "car_telemetry_service";
    field TIRAMISU_0 String CAR_ACTIVITY_SERVICE = "car_activity_service";
    field TIRAMISU_0 String PERMISSION_MILEAGE = "android.car.permission.CAR_MILEAGE";
    field TIRAMISU_0 String PERMISSION_ENERGY = "android.car.permission.CAR_ENERGY";
    field TIRAMISU_0 String PERMISSION_CONTROL_CAR_ENERGY = "android.car.permission.CONTROL_CAR_ENERGY";
    field TIRAMISU_0 String PERMISSION_ADJUST_RANGE_REMAINING = "android.car.permission.ADJUST_RANGE_REMAINING";
    field TIRAMISU_0 String PERMISSION_IDENTIFICATION = "android.car.permission.CAR_IDENTIFICATION";
    field TIRAMISU_0 String PERMISSION_SPEED = "android.car.permission.CAR_SPEED";
    field TIRAMISU_0 String PERMISSION_CAR_DYNAMICS_STATE = "android.car.permission.CAR_DYNAMICS_STATE";
    field TIRAMISU_0 String PERMISSION_ENERGY_PORTS = "android.car.permission.CAR_ENERGY_PORTS";
    field TIRAMISU_0 String PERMISSION_CONTROL_ENERGY_PORTS = "android.car.permission.CONTROL_CAR_ENERGY_PORTS";
    field TIRAMISU_0 String PERMISSION_EXTERIOR_LIGHTS = "android.car.permission.CAR_EXTERIOR_LIGHTS";
    field TIRAMISU_0 String PERMISSION_READ_INTERIOR_LIGHTS = "android.car.permission.READ_CAR_INTERIOR_LIGHTS";
    field TIRAMISU_0 String PERMISSION_CONTROL_EXTERIOR_LIGHTS = "android.car.permission.CONTROL_CAR_EXTERIOR_LIGHTS";
    field TIRAMISU_0 String PERMISSION_CONTROL_INTERIOR_LIGHTS = "android.car.permission.CONTROL_CAR_INTERIOR_LIGHTS";
    field TIRAMISU_0 String PERMISSION_POWERTRAIN = "android.car.permission.CAR_POWERTRAIN";
    field TIRAMISU_0 String PERMISSION_CAR_CONTROL_AUDIO_VOLUME = "android.car.permission.CAR_CONTROL_AUDIO_VOLUME";
    field TIRAMISU_0 String PERMISSION_CAR_CONTROL_AUDIO_SETTINGS = "android.car.permission.CAR_CONTROL_AUDIO_SETTINGS";
    field TIRAMISU_0 String PERMISSION_RECEIVE_CAR_AUDIO_DUCKING_EVENTS = "android.car.permission.RECEIVE_CAR_AUDIO_DUCKING_EVENTS";
    field TIRAMISU_0 String PERMISSION_CAR_NAVIGATION_MANAGER = "android.car.permission.CAR_NAVIGATION_MANAGER";
    field TIRAMISU_0 String PERMISSION_CAR_INSTRUMENT_CLUSTER_CONTROL = "android.car.permission.CAR_INSTRUMENT_CLUSTER_CONTROL";
    field TIRAMISU_0 @hiddenOnly String PERMISSION_CAR_MONITOR_CLUSTER_NAVIGATION_STATE = "android.car.permission.CAR_MONITOR_CLUSTER_NAVIGATION_STATE";
    field TIRAMISU_0 @hiddenOnly String PERMISSION_CAR_DISPLAY_IN_CLUSTER = "android.car.permission.CAR_DISPLAY_IN_CLUSTER";
    field TIRAMISU_0 String PERMISSION_CAR_INFO = "android.car.permission.CAR_INFO";
    field TIRAMISU_0 String PERMISSION_PRIVILEGED_CAR_INFO = "android.car.permission.PRIVILEGED_CAR_INFO";
    field TIRAMISU_0 String PERMISSION_READ_CAR_VENDOR_PERMISSION_INFO = "android.car.permission.READ_CAR_VENDOR_PERMISSION_INFO";
    field TIRAMISU_0 String PERMISSION_EXTERIOR_ENVIRONMENT = "android.car.permission.CAR_EXTERIOR_ENVIRONMENT";
    field TIRAMISU_0 String PERMISSION_VENDOR_EXTENSION = "android.car.permission.CAR_VENDOR_EXTENSION";
    field TIRAMISU_0 String PERMISSION_CONTROL_APP_BLOCKING = "android.car.permission.CONTROL_APP_BLOCKING";
    field TIRAMISU_0 String PERMISSION_CAR_ENGINE_DETAILED = "android.car.permission.CAR_ENGINE_DETAILED";
    field TIRAMISU_0 String PERMISSION_TIRES = "android.car.permission.CAR_TIRES";
    field TIRAMISU_0 String PERMISSION_CAR_EPOCH_TIME = "android.car.permission.CAR_EPOCH_TIME";
    field TIRAMISU_0 String PERMISSION_STORAGE_ENCRYPTION_BINDING_SEED = "android.car.permission.STORAGE_ENCRYPTION_BINDING_SEED";
    field TIRAMISU_0 String PERMISSION_READ_STEERING_STATE = "android.car.permission.READ_CAR_STEERING";
    field TIRAMISU_0 String PERMISSION_READ_DISPLAY_UNITS = "android.car.permission.READ_CAR_DISPLAY_UNITS";
    field TIRAMISU_0 String PERMISSION_CONTROL_DISPLAY_UNITS = "android.car.permission.CONTROL_CAR_DISPLAY_UNITS";
    field TIRAMISU_0 String PERMISSION_CONTROL_CAR_DOORS = "android.car.permission.CONTROL_CAR_DOORS";
    field TIRAMISU_0 String PERMISSION_CONTROL_CAR_WINDOWS = "android.car.permission.CONTROL_CAR_WINDOWS";
    field TIRAMISU_0 String PERMISSION_CONTROL_CAR_SEATS = "android.car.permission.CONTROL_CAR_SEATS";
    field TIRAMISU_0 String PERMISSION_CONTROL_CAR_MIRRORS = "android.car.permission.CONTROL_CAR_MIRRORS";
    field TIRAMISU_0 String PERMISSION_CONTROL_CAR_CLIMATE = "android.car.permission.CONTROL_CAR_CLIMATE";
    field TIRAMISU_0 String PERMISSION_CAR_POWER = "android.car.permission.CAR_POWER";
    field TIRAMISU_0 String PERMISSION_READ_CAR_POWER_POLICY = "android.car.permission.READ_CAR_POWER_POLICY";
    field TIRAMISU_0 String PERMISSION_CONTROL_CAR_POWER_POLICY = "android.car.permission.CONTROL_CAR_POWER_POLICY";
    field TIRAMISU_0 String PERMISSION_CONTROL_SHUTDOWN_PROCESS = "android.car.permission.CONTROL_SHUTDOWN_PROCESS";
    field TIRAMISU_0 String PERMISSION_CAR_PROJECTION = "android.car.permission.CAR_PROJECTION";
    field TIRAMISU_0 String PERMISSION_CAR_PROJECTION_STATUS = "android.car.permission.ACCESS_CAR_PROJECTION_STATUS";
    field TIRAMISU_0 String PERMISSION_MOCK_VEHICLE_HAL = "android.car.permission.CAR_MOCK_VEHICLE_HAL";
    field TIRAMISU_0 String PERMISSION_CAR_TEST_SERVICE = "android.car.permission.CAR_TEST_SERVICE";
    field TIRAMISU_0 String PERMISSION_CAR_DRIVING_STATE = "android.car.permission.CAR_DRIVING_STATE";
    field TIRAMISU_0 @hiddenOnly String PERMISSION_BIND_VMS_CLIENT = "android.car.permission.BIND_VMS_CLIENT";
    field TIRAMISU_0 String PERMISSION_VMS_PUBLISHER = "android.car.permission.VMS_PUBLISHER";
    field TIRAMISU_0 String PERMISSION_VMS_SUBSCRIBER = "android.car.permission.VMS_SUBSCRIBER";
    field TIRAMISU_0 String PERMISSION_CAR_DIAGNOSTIC_READ_ALL = "android.car.permission.CAR_DIAGNOSTICS";
    field TIRAMISU_0 String PERMISSION_CAR_DIAGNOSTIC_CLEAR = "android.car.permission.CLEAR_CAR_DIAGNOSTICS";
    field TIRAMISU_0 @hiddenOnly String PERMISSION_CAR_UX_RESTRICTIONS_CONFIGURATION = "android.car.permission.CAR_UX_RESTRICTIONS_CONFIGURATION";
    field TIRAMISU_0 String PERMISSION_READ_CAR_OCCUPANT_AWARENESS_STATE = "android.car.permission.READ_CAR_OCCUPANT_AWARENESS_STATE";
    field TIRAMISU_0 String ACCESS_PRIVATE_DISPLAY_ID = "android.car.permission.ACCESS_PRIVATE_DISPLAY_ID";
    field TIRAMISU_0 String PERMISSION_CONTROL_CAR_OCCUPANT_AWARENESS_SYSTEM = "android.car.permission.CONTROL_CAR_OCCUPANT_AWARENESS_SYSTEM";
    field TIRAMISU_0 String PERMISSION_STORAGE_MONITORING = "android.car.permission.STORAGE_MONITORING";
    field TIRAMISU_0 String PERMISSION_CONTROL_CAR_FEATURES = "android.car.permission.CONTROL_CAR_FEATURES";
    field TIRAMISU_0 String PERMISSION_USE_CAR_WATCHDOG = "android.car.permission.USE_CAR_WATCHDOG";
    field TIRAMISU_0 String PERMISSION_CAR_MONITOR_INPUT = "android.car.permission.CAR_MONITOR_INPUT";
    field TIRAMISU_0 String PERMISSION_REQUEST_CAR_EVS_ACTIVITY = "android.car.permission.REQUEST_CAR_EVS_ACTIVITY";
    field TIRAMISU_0 String PERMISSION_CONTROL_CAR_EVS_ACTIVITY = "android.car.permission.CONTROL_CAR_EVS_ACTIVITY";
    field TIRAMISU_0 String PERMISSION_USE_CAR_EVS_CAMERA = "android.car.permission.USE_CAR_EVS_CAMERA";
    field TIRAMISU_0 String PERMISSION_MONITOR_CAR_EVS_STATUS = "android.car.permission.MONITOR_CAR_EVS_STATUS";
    field TIRAMISU_0 String PERMISSION_USE_CAR_TELEMETRY_SERVICE = "android.car.permission.USE_CAR_TELEMETRY_SERVICE";
    field TIRAMISU_0 int CONNECTION_TYPE_EMBEDDED = 5;
    field TIRAMISU_0 String PERMISSION_TEMPLATE_RENDERER = "android.car.permission.TEMPLATE_RENDERER";
    field TIRAMISU_0 String PERMISSION_CONTROL_CAR_WATCHDOG_CONFIG = "android.car.permission.CONTROL_CAR_WATCHDOG_CONFIG";
    field TIRAMISU_0 String PERMISSION_COLLECT_CAR_WATCHDOG_METRICS = "android.car.permission.COLLECT_CAR_WATCHDOG_METRICS";
    field TIRAMISU_0 @hiddenOnly String PERMISSION_COLLECT_CAR_CPU_INFO = "android.car.permission.COLLECT_CAR_CPU_INFO";
    field TIRAMISU_0 String PERMISSION_CONTROL_CAR_APP_LAUNCH = "android.car.permission.CONTROL_CAR_APP_LAUNCH";
    field TIRAMISU_1 String PERMISSION_MANAGE_THREAD_PRIORITY = "android.car.permission.MANAGE_THREAD_PRIORITY";
    field TIRAMISU_0 @hiddenOnly String CAR_TEMPLATE_HOST_RENDERER_SERVICE = "android.car.template.host.RendererService";
    field TIRAMISU_0 String CAR_INTENT_ACTION_MEDIA_TEMPLATE = "android.car.intent.action.MEDIA_TEMPLATE";
    field TIRAMISU_0 String CAR_EXTRA_MEDIA_COMPONENT = "android.car.intent.extra.MEDIA_COMPONENT";
    field TIRAMISU_0 String CAR_EXTRA_MEDIA_PACKAGE = "android.car.intent.extra.MEDIA_PACKAGE";
    field TIRAMISU_0 String CAR_EXTRA_BROWSE_SERVICE_FOR_SESSION = "android.media.session.BROWSE_SERVICE";
    field TIRAMISU_0 @hiddenOnly String CAR_SERVICE_INTERFACE_NAME = CommonConstants.CAR_SERVICE_INTERFACE;
    field TIRAMISU_0 @hiddenOnly String CAR_CATEGORY_NAVIGATION = "android.car.cluster.NAVIGATION";
    field TIRAMISU_0 String CAR_EXTRA_CLUSTER_ACTIVITY_STATE = "android.car.cluster.ClusterActivityState";
    field TIRAMISU_0 long CAR_WAIT_TIMEOUT_WAIT_FOREVER = -1;
    field TIRAMISU_0 long CAR_WAIT_TIMEOUT_DO_NOT_WAIT = 0;
    field TIRAMISU_0 int FEATURE_REQUEST_SUCCESS = 0;
    field TIRAMISU_0 int FEATURE_REQUEST_ALREADY_IN_THE_STATE = 1;
    field TIRAMISU_0 int FEATURE_REQUEST_MANDATORY = 2;
    field TIRAMISU_0 int FEATURE_REQUEST_NOT_EXISTING = 3;
    method TIRAMISU_1 android.car.CarVersion getCarVersion();
    method TIRAMISU_1 android.car.PlatformVersion getPlatformVersion();
    method TIRAMISU_0 boolean isApiVersionAtLeast(int requiredApiVersionMajor);
    method TIRAMISU_0 boolean isApiVersionAtLeast(int requiredApiVersionMajor, int requiredApiVersionMinor);
    method TIRAMISU_0 boolean isApiAndPlatformVersionAtLeast(int requiredApiVersionMajor, int minPlatformSdkInt);
    method TIRAMISU_0 boolean isApiAndPlatformVersionAtLeast(int requiredApiVersionMajor, int requiredApiVersionMinor, int minPlatformSdkInt);
    method TIRAMISU_0 Car createCar(Context context, ServiceConnection serviceConnectionListener, Handler handler);
    method TIRAMISU_0 Car createCar(Context context, ServiceConnection serviceConnectionListener);
    method TIRAMISU_0 Car createCar(Context context);
    method TIRAMISU_0 Car createCar(Context context, Handler handler);
    method TIRAMISU_0 Car createCar(Context context, Handler handler, long waitTimeoutMs, CarServiceLifecycleListener statusChangeListener);
    method TIRAMISU_0 void connect();
    method TIRAMISU_0 void disconnect();
    method TIRAMISU_0 boolean isConnected();
    method TIRAMISU_0 boolean isConnecting();
    method TIRAMISU_0 @hiddenOnly ServiceConnection getServiceConnectionListener();
    method TIRAMISU_0 Object getCarManager(String serviceName);
    method TIRAMISU_0 int getCarConnectionType();
    method TIRAMISU_0 boolean isFeatureEnabled(String featureName);
    method TIRAMISU_0 int enableFeature(String featureName);
    method TIRAMISU_0 int disableFeature(String featureName);
    method TIRAMISU_0 List<String> getAllEnabledFeatures();
    method TIRAMISU_0 List<String> getAllPendingDisabledFeatures();
    method TIRAMISU_0 List<String> getAllPendingEnabledFeatures();
    method TIRAMISU_0 @hiddenOnly Context getContext();
    method TIRAMISU_0 @hiddenOnly Handler getEventHandler();
    method TIRAMISU_0 @hiddenOnly T handleRemoteExceptionFromCarService(RemoteException e, T returnValue);
    method TIRAMISU_0 @hiddenOnly void handleRemoteExceptionFromCarService(RemoteException e);
    method TIRAMISU_0 @hiddenOnly T handleRemoteExceptionFromCarService(Service service, RemoteException e, T returnValue);
    method TIRAMISU_0 @hiddenOnly void handleRemoteExceptionFromCarService(Service service, RemoteException e);
interface Car.CarServiceLifecycleListener package android.car
    method TIRAMISU_0 void onLifecycleChanged(Car car, boolean ready);
class @hide @SystemApi CarTelemetryManager package android.car.telemetry
    field TIRAMISU_0 int STATUS_ADD_METRICS_CONFIG_SUCCEEDED = 0;
    field TIRAMISU_0 int STATUS_ADD_METRICS_CONFIG_ALREADY_EXISTS = 1;
    field TIRAMISU_0 int STATUS_ADD_METRICS_CONFIG_VERSION_TOO_OLD = 2;
    field TIRAMISU_0 int STATUS_ADD_METRICS_CONFIG_PARSE_FAILED = 3;
    field TIRAMISU_0 int STATUS_ADD_METRICS_CONFIG_SIGNATURE_VERIFICATION_FAILED = 4;
    field TIRAMISU_0 int STATUS_ADD_METRICS_CONFIG_UNKNOWN = 5;
    field TIRAMISU_0 int STATUS_GET_METRICS_CONFIG_FINISHED = 0;
    field TIRAMISU_0 int STATUS_GET_METRICS_CONFIG_PENDING = 1;
    field TIRAMISU_0 int STATUS_GET_METRICS_CONFIG_INTERIM_RESULTS = 2;
    field TIRAMISU_0 int STATUS_GET_METRICS_CONFIG_RUNTIME_ERROR = 3;
    field TIRAMISU_0 int STATUS_GET_METRICS_CONFIG_DOES_NOT_EXIST = 4;
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
    method TIRAMISU_0 void addMetricsConfig(String metricsConfigName, byte[] metricsConfig, Executor executor, AddMetricsConfigCallback callback);
    method TIRAMISU_0 void removeMetricsConfig(String metricsConfigName);
    method TIRAMISU_0 void removeAllMetricsConfigs();
    method TIRAMISU_0 void getFinishedReport(String metricsConfigName, Executor executor, MetricsReportCallback callback);
    method TIRAMISU_0 void getAllFinishedReports(Executor executor, MetricsReportCallback callback);
    method TIRAMISU_0 void setReportReadyListener(Executor executor, ReportReadyListener listener);
    method TIRAMISU_0 void clearReportReadyListener();
interface @hide @SystemApi CarTelemetryManager.AddMetricsConfigCallback package android.car.telemetry
    method TIRAMISU_0 void onAddMetricsConfigStatus(String metricsConfigName, int statusCode);
interface @hide @SystemApi CarTelemetryManager.MetricsReportCallback package android.car.telemetry
    method TIRAMISU_0 void onResult(String metricsConfigName, PersistableBundle report, byte[] telemetryError, int status);
interface @hide @SystemApi CarTelemetryManager.ReportReadyListener package android.car.telemetry
    method TIRAMISU_0 void onReady(String metricsConfigName);
class @hide @SystemApi ClusterActivityState package android.car.cluster
    method TIRAMISU_0 boolean isVisible();
    method TIRAMISU_0 Rect getUnobscuredBounds();
    method TIRAMISU_0 Bundle getExtras();
    method TIRAMISU_0 ClusterActivityState setVisible(boolean visible);
    method TIRAMISU_0 ClusterActivityState setUnobscuredBounds(Rect unobscuredBounds);
    method TIRAMISU_0 ClusterActivityState setExtras(Bundle bundle);
    method TIRAMISU_0 ClusterActivityState create(boolean visible, Rect unobscuredBounds);
    method TIRAMISU_0 ClusterActivityState fromBundle(Bundle bundle);
    method TIRAMISU_0 Bundle toBundle();
    method TIRAMISU_0 String toString();
class @hide @SystemApi NavigationRenderer package android.car.cluster.renderer
    method TIRAMISU_0 CarNavigationInstrumentCluster getNavigationProperties();
    method TIRAMISU_0 void onEvent(int eventType, Bundle bundle);
    method TIRAMISU_0 void onNavigationStateChanged(Bundle bundle);
class @hide @SystemApi InstrumentClusterRenderer package android.car.cluster.renderer
    method TIRAMISU_0 void onCreate(Context context);
    method TIRAMISU_0 void onStart();
    method TIRAMISU_0 void onStop();
    method TIRAMISU_0 NavigationRenderer createNavigationRenderer();
    method TIRAMISU_0 NavigationRenderer getNavigationRenderer();
    method TIRAMISU_0 void initialize();
class @hide @SystemApi InstrumentClusterRenderingService package android.car.cluster.renderer
    field TIRAMISU_0 @hiddenOnly String EXTRA_BUNDLE_KEY_FOR_INSTRUMENT_CLUSTER_HELPER = "android.car.cluster.renderer.IInstrumentClusterHelper";
    method TIRAMISU_0 IBinder onBind(Intent intent);
    method TIRAMISU_0 NavigationRenderer getNavigationRenderer();
    method TIRAMISU_0 void onKeyEvent(KeyEvent keyEvent);
    method TIRAMISU_0 void onNavigationComponentLaunched();
    method TIRAMISU_0 void onNavigationComponentReleased();
    method TIRAMISU_0 boolean startFixedActivityModeForDisplayAndUser(Intent intent, ActivityOptions options, int userId);
    method TIRAMISU_0 void stopFixedActivityMode(int displayId);
    method TIRAMISU_0 @hiddenOnly ComponentName getComponentFromPackage(String packageName);
    method TIRAMISU_0 boolean startNavigationActivity(ComponentName component);
    method TIRAMISU_0 @hiddenOnly void setClusterActivityLaunchOptions(String category, ActivityOptions activityOptions);
    method TIRAMISU_0 void setClusterActivityLaunchOptions(ActivityOptions activityOptions);
    method TIRAMISU_0 @hiddenOnly void setClusterActivityState(String category, Bundle state);
    method TIRAMISU_0 void setClusterActivityState(ClusterActivityState state);
    method TIRAMISU_0 void dump(FileDescriptor fd, PrintWriter writer, String[] args);
    method TIRAMISU_0 Bitmap getBitmap(Uri uri);
    method TIRAMISU_0 Bitmap getBitmap(Uri uri, int width, int height);
    method TIRAMISU_0 Bitmap getBitmap(Uri uri, int width, int height, float offLanesAlpha);
class @hide @SystemApi CarInstrumentClusterManager package android.car.cluster
    field TIRAMISU_0 String CATEGORY_NAVIGATION = "android.car.cluster.NAVIGATION";
    field TIRAMISU_0 String KEY_EXTRA_ACTIVITY_STATE = "android.car.cluster.ClusterActivityState";
    method TIRAMISU_0 void startActivity(Intent intent);
    method TIRAMISU_0 void registerCallback(String category, Callback callback);
    method TIRAMISU_0 void unregisterCallback(Callback callback);
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
interface @hide @SystemApi CarInstrumentClusterManager.Callback package android.car.cluster
    method TIRAMISU_0 void onClusterActivityStateChanged(String category, Bundle clusterActivityState);
class @hiddenOnly @hide ClusterHomeManager package android.car.cluster
    field TIRAMISU_0 int UI_TYPE_CLUSTER_NONE = -1;
    field TIRAMISU_0 int UI_TYPE_CLUSTER_HOME = 0;
    field TIRAMISU_0 int CONFIG_DISPLAY_ON_OFF = 0x01;
    field TIRAMISU_0 int CONFIG_DISPLAY_BOUNDS = 0x02;
    field TIRAMISU_0 int CONFIG_DISPLAY_INSETS = 0x04;
    field TIRAMISU_0 int CONFIG_UI_TYPE = 0x08;
    field TIRAMISU_0 int CONFIG_DISPLAY_ID = 0x10;
    method TIRAMISU_0 void registerClusterStateListener(Executor executor, ClusterStateListener callback);
    method TIRAMISU_0 void registerClusterNavigationStateListener(Executor executor, ClusterNavigationStateListener callback);
    method TIRAMISU_0 void unregisterClusterStateListener(ClusterStateListener callback);
    method TIRAMISU_0 void unregisterClusterNavigationStateListener(ClusterNavigationStateListener callback);
    method TIRAMISU_0 void reportState(int uiTypeMain, int uiTypeSub, byte[] uiAvailability);
    method TIRAMISU_0 void requestDisplay(int uiType);
    method TIRAMISU_0 ClusterState getClusterState();
    method TIRAMISU_0 boolean startFixedActivityModeAsUser(Intent intent, Bundle options, int userId);
    method TIRAMISU_0 void stopFixedActivityMode();
    method TIRAMISU_0 void onCarDisconnected();
interface ClusterHomeManager.ClusterStateListener package android.car.cluster
    method TIRAMISU_0 void onClusterStateChanged(ClusterState state, int changes);
interface ClusterHomeManager.ClusterNavigationStateListener package android.car.cluster
    method TIRAMISU_0 void onNavigationState(byte[] navigationState);
class PortLocationType package android.car
    field TIRAMISU_0 int UNKNOWN = 0;
    field TIRAMISU_0 int FRONT_LEFT = 1;
    field TIRAMISU_0 int FRONT_RIGHT = 2;
    field TIRAMISU_0 int REAR_RIGHT = 3;
    field TIRAMISU_0 int REAR_LEFT = 4;
    field TIRAMISU_0 int FRONT = 5;
    field TIRAMISU_0 int REAR = 6;
class FuelType package android.car
    field TIRAMISU_0 int UNKNOWN = 0;
    field TIRAMISU_0 int UNLEADED = 1;
    field TIRAMISU_0 int LEADED = 2;
    field TIRAMISU_0 int DIESEL_1 = 3;
    field TIRAMISU_0 int DIESEL_2 = 4;
    field TIRAMISU_0 int BIODIESEL = 5;
    field TIRAMISU_0 int E85 = 6;
    field TIRAMISU_0 int LPG = 7;
    field TIRAMISU_0 int CNG = 8;
    field TIRAMISU_0 int LNG = 9;
    field TIRAMISU_0 int ELECTRIC = 10;
    field TIRAMISU_0 int HYDROGEN = 11;
    field TIRAMISU_0 int OTHER = 12;
class @hide @SystemApi VmsLayer package android.car.vms
    field TIRAMISU_0 Parcelable.Creator<VmsLayer> CREATOR;
    method TIRAMISU_0 int getSubtype();
    method TIRAMISU_0 int getType();
    method TIRAMISU_0 int getChannel();
    method TIRAMISU_0 int getVersion();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 boolean equals(Object o);
    method TIRAMISU_0 int hashCode();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class @hide @SystemApi VmsOperationRecorder package android.car.vms
    method TIRAMISU_0 VmsOperationRecorder get();
    method TIRAMISU_0 void subscribe(VmsLayer layer);
    method TIRAMISU_0 void unsubscribe(VmsLayer layer);
    method TIRAMISU_0 void subscribe(VmsLayer layer, int publisherId);
    method TIRAMISU_0 void unsubscribe(VmsLayer layer, int publisherId);
    method TIRAMISU_0 void startMonitoring();
    method TIRAMISU_0 void stopMonitoring();
    method TIRAMISU_0 void setLayersOffering(VmsLayersOffering layersOffering);
    method TIRAMISU_0 void getPublisherId(int publisherId);
    method TIRAMISU_0 void addSubscription(int sequenceNumber, VmsLayer layer);
    method TIRAMISU_0 void removeSubscription(int sequenceNumber, VmsLayer layer);
    method TIRAMISU_0 void addPromiscuousSubscription(int sequenceNumber);
    method TIRAMISU_0 void removePromiscuousSubscription(int sequenceNumber);
    method TIRAMISU_0 void addHalSubscription(int sequenceNumber, VmsLayer layer);
    method TIRAMISU_0 void removeHalSubscription(int sequenceNumber, VmsLayer layer);
    method TIRAMISU_0 void setPublisherLayersOffering(VmsLayersOffering layersOffering);
    method TIRAMISU_0 void setHalPublisherLayersOffering(VmsLayersOffering layersOffering);
class @hiddenOnly @hide VmsOperationRecorder.Writer package android.car.vms
    method TIRAMISU_0 boolean isEnabled();
    method TIRAMISU_0 void write(String msg);
class @hide @SystemApi VmsAvailableLayers package android.car.vms
    field TIRAMISU_0 Parcelable.Creator<VmsAvailableLayers> CREATOR;
    method TIRAMISU_0 int getSequence();
    method TIRAMISU_0 int getSequenceNumber();
    method TIRAMISU_0 Set<VmsAssociatedLayer> getAssociatedLayers();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 boolean equals(Object o);
    method TIRAMISU_0 int hashCode();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class @hiddenOnly @hide VmsSubscriptionHelper package android.car.vms
    method TIRAMISU_0 void subscribe(VmsLayer layer);
    method TIRAMISU_0 void subscribe(VmsLayer layer, int providerId);
    method TIRAMISU_0 void unsubscribe(VmsLayer layer);
    method TIRAMISU_0 void unsubscribe(VmsLayer layer, int providerId);
    method TIRAMISU_0 Set<VmsAssociatedLayer> getSubscriptions();
class @hide @SystemApi VmsClient package android.car.vms
    method TIRAMISU_0 byte[] getProviderDescription(int providerId);
    method TIRAMISU_0 void setSubscriptions(Set<VmsAssociatedLayer> layers);
    method TIRAMISU_0 void setMonitoringEnabled(boolean enabled);
    method TIRAMISU_0 boolean isMonitoringEnabled();
    method TIRAMISU_0 VmsAvailableLayers getAvailableLayers();
    method TIRAMISU_0 int registerProvider(byte[] providerDescription);
    method TIRAMISU_0 void unregisterProvider(int providerId);
    method TIRAMISU_0 void setProviderOfferings(int providerId, Set<VmsLayerDependency> offerings);
    method TIRAMISU_0 void publishPacket(int providerId, VmsLayer layer, byte[] packet);
    method TIRAMISU_0 VmsSubscriptionState getSubscriptionState();
    method TIRAMISU_0 @hiddenOnly void register();
    method TIRAMISU_0 @hiddenOnly void unregister();
class @hide @SystemApi VmsLayerDependency package android.car.vms
    field TIRAMISU_0 Parcelable.Creator<VmsLayerDependency> CREATOR;
    method TIRAMISU_0 VmsLayer getLayer();
    method TIRAMISU_0 Set<VmsLayer> getDependencies();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 boolean equals(Object o);
    method TIRAMISU_0 int hashCode();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class @hiddenOnly @hide VmsRegistrationInfo package android.car.vms
    field TIRAMISU_0 Parcelable.Creator<VmsRegistrationInfo> CREATOR;
    method TIRAMISU_0 VmsAvailableLayers getAvailableLayers();
    method TIRAMISU_0 VmsSubscriptionState getSubscriptionState();
    method TIRAMISU_0 boolean equals(Object o);
    method TIRAMISU_0 int hashCode();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class @hide @SystemApi VmsSubscriptionState package android.car.vms
    field TIRAMISU_0 Parcelable.Creator<VmsSubscriptionState> CREATOR;
    method TIRAMISU_0 int getSequenceNumber();
    method TIRAMISU_0 Set<VmsLayer> getLayers();
    method TIRAMISU_0 Set<VmsAssociatedLayer> getAssociatedLayers();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 boolean equals(Object o);
    method TIRAMISU_0 int hashCode();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class @hide @SystemApi VmsLayersOffering package android.car.vms
    field TIRAMISU_0 Parcelable.Creator<VmsLayersOffering> CREATOR;
    method TIRAMISU_0 Set<VmsLayerDependency> getDependencies();
    method TIRAMISU_0 int getPublisherId();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 boolean equals(Object o);
    method TIRAMISU_0 int hashCode();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class @hide @SystemApi VmsAssociatedLayer package android.car.vms
    field TIRAMISU_0 Parcelable.Creator<VmsAssociatedLayer> CREATOR;
    method TIRAMISU_0 Set<Integer> getPublisherIds();
    method TIRAMISU_0 VmsLayer getVmsLayer();
    method TIRAMISU_0 Set<Integer> getProviderIds();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 boolean equals(Object o);
    method TIRAMISU_0 int hashCode();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class @hide @SystemApi VmsPublisherClientService package android.car.vms
    method TIRAMISU_0 void onCreate();
    method TIRAMISU_0 void onDestroy();
    method TIRAMISU_0 IBinder onBind(Intent intent);
    method TIRAMISU_0 @hiddenOnly void onCarLifecycleChanged(Car car, boolean ready);
    method TIRAMISU_0 void onVmsPublisherServiceReady();
    method TIRAMISU_0 void onVmsSubscriptionChange(VmsSubscriptionState subscriptionState);
    method TIRAMISU_0 void publish(VmsLayer layer, int publisherId, byte[] payload);
    method TIRAMISU_0 void setLayersOffering(VmsLayersOffering offering);
    method TIRAMISU_0 int getPublisherId(byte[] publisherInfo);
    method TIRAMISU_0 VmsSubscriptionState getSubscriptions();
class @hide @SystemApi VmsSubscriberManager package android.car.vms
    method TIRAMISU_0 @hiddenOnly VmsSubscriberManager wrap(Car car, VmsClientManager clientManager);
    method TIRAMISU_0 void setVmsSubscriberClientCallback(Executor executor, VmsSubscriberClientCallback clientCallback);
    method TIRAMISU_0 void clearVmsSubscriberClientCallback();
    method TIRAMISU_0 byte[] getPublisherInfo(int publisherId);
    method TIRAMISU_0 VmsAvailableLayers getAvailableLayers();
    method TIRAMISU_0 void subscribe(VmsLayer layer);
    method TIRAMISU_0 void subscribe(VmsLayer layer, int publisherId);
    method TIRAMISU_0 void startMonitoring();
    method TIRAMISU_0 void unsubscribe(VmsLayer layer);
    method TIRAMISU_0 void unsubscribe(VmsLayer layer, int publisherId);
    method TIRAMISU_0 void stopMonitoring();
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
interface VmsSubscriberManager.VmsSubscriberClientCallback package android.car.vms
    method TIRAMISU_0 void onVmsMessageReceived(VmsLayer layer, byte[] payload);
    method TIRAMISU_0 void onLayersAvailabilityChanged(VmsAvailableLayers availableLayers);
class @hiddenOnly @hide VmsProviderInfo package android.car.vms
    field TIRAMISU_0 Parcelable.Creator<VmsProviderInfo> CREATOR;
    method TIRAMISU_0 byte[] getDescription();
    method TIRAMISU_0 boolean equals(Object o);
    method TIRAMISU_0 int hashCode();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class @hide @SystemApi VmsClientManager package android.car.vms
    method TIRAMISU_0 void registerVmsClientCallback(Executor executor, VmsClientCallback callback);
    method TIRAMISU_0 @hiddenOnly void registerVmsClientCallback(Executor executor, VmsClientCallback callback, boolean legacyClient);
    method TIRAMISU_0 void unregisterVmsClientCallback(VmsClientCallback callback);
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
interface VmsClientManager.VmsClientCallback package android.car.vms
    method TIRAMISU_0 void onClientConnected(VmsClient client);
    method TIRAMISU_0 void onLayerAvailabilityChanged(VmsAvailableLayers availableLayers);
    method TIRAMISU_0 void onSubscriptionStateChanged(VmsSubscriptionState subscriptionState);
    method TIRAMISU_0 void onPacketReceived(int providerId, VmsLayer layer, byte[] packet);
class VehicleAreaWheel package android.car
    field TIRAMISU_0 int WHEEL_UNKNOWN = 0x00;
    field TIRAMISU_0 int WHEEL_LEFT_FRONT = 0x01;
    field TIRAMISU_0 int WHEEL_RIGHT_FRONT = 0x02;
    field TIRAMISU_0 int WHEEL_LEFT_REAR = 0x04;
    field TIRAMISU_0 int WHEEL_RIGHT_REAR = 0x08;
class @hiddenOnly @hide AndroidFuture package android.car.util.concurrent
    field TIRAMISU_0 Parcelable.Creator<AndroidFuture> CREATOR;
    method TIRAMISU_0 AndroidFuture<U> completedFuture(U value);
    method TIRAMISU_0 boolean complete(T value);
    method TIRAMISU_0 boolean completeExceptionally(Throwable ex);
    method TIRAMISU_0 boolean cancel(boolean mayInterruptIfRunning);
    method TIRAMISU_0 void onCompleted(T res, Throwable err);
    method TIRAMISU_0 AndroidFuture<T> whenComplete(BiConsumer<? super T,? super Throwable> action);
    method TIRAMISU_0 AndroidFuture<T> whenCompleteAsync(BiConsumer<? super T,? super Throwable> action, Executor executor);
    method TIRAMISU_0 void callListener(BiConsumer<? super TT,? super Throwable> listener, TT res, Throwable err);
    method TIRAMISU_0 AndroidFuture<T> orTimeout(long timeout, TimeUnit unit);
    method TIRAMISU_0 void triggerTimeout();
    method TIRAMISU_0 AndroidFuture<T> cancelTimeout();
    method TIRAMISU_0 AndroidFuture<T> setTimeoutHandler(Handler h);
    method TIRAMISU_0 AndroidFuture<U> thenCompose(Function<? super T,? extends CompletionStage<U>> fn);
    method TIRAMISU_0 AndroidFuture<U> thenComposeAsync(Function<? super T,? extends CompletionStage<U>> fn, Executor executor);
    method TIRAMISU_0 AndroidFuture<U> thenApply(Function<? super T,? extends U> fn);
    method TIRAMISU_0 AndroidFuture<U> thenApplyAsync(Function<? super T,? extends U> fn, Executor executor);
    method TIRAMISU_0 AndroidFuture<V> thenCombine(CompletionStage<? extends U> other, BiFunction<? super T,? super U,? extends V> combineResults);
    method TIRAMISU_0 AndroidFuture<T> thenCombine(CompletionStage<Void> other);
    method TIRAMISU_0 AndroidFuture<T> supply(Supplier<T> supplier);
    method TIRAMISU_0 AndroidFuture<T> supplyAsync(Supplier<T> supplier, Executor executor);
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 Throwable unwrapExecutionException(Throwable t);
    method TIRAMISU_0 int describeContents();
class @hiddenOnly @hide AndroidAsyncFuture package android.car.util.concurrent
    method TIRAMISU_0 T get();
    method TIRAMISU_0 T get(long timeout, TimeUnit unit);
    method TIRAMISU_0 AsyncFuture<T> whenCompleteAsync(BiConsumer<? super T,? super Throwable> action, Executor executor);
interface @hiddenOnly @hide AsyncFuture package android.car.util.concurrent
    method TIRAMISU_0 T get();
    method TIRAMISU_0 T get(long timeout, TimeUnit unit);
    method TIRAMISU_0 AsyncFuture<T> whenCompleteAsync(BiConsumer<? super T,? super Throwable> action, Executor executor);
class @hide @SystemApi CarDiagnosticManager package android.car.diagnostic
    field TIRAMISU_0 int FRAME_TYPE_LIVE = 0;
    field TIRAMISU_0 int FRAME_TYPE_FREEZE = 1;
    field TIRAMISU_0 @hiddenOnly int[] FRAME_TYPES = { FRAME_TYPE_LIVE, FRAME_TYPE_FREEZE };
    method TIRAMISU_0 void onCarDisconnected();
    method TIRAMISU_0 boolean registerListener(OnDiagnosticEventListener listener, int frameType, int rate);
    method TIRAMISU_0 void unregisterListener(OnDiagnosticEventListener listener);
    method TIRAMISU_0 CarDiagnosticEvent getLatestLiveFrame();
    method TIRAMISU_0 long[] getFreezeFrameTimestamps();
    method TIRAMISU_0 CarDiagnosticEvent getFreezeFrame(long timestamp);
    method TIRAMISU_0 boolean clearFreezeFrames(long timestamps);
    method TIRAMISU_0 boolean isLiveFrameSupported();
    method TIRAMISU_0 boolean isFreezeFrameNotificationSupported();
    method TIRAMISU_0 boolean isGetFreezeFrameSupported();
    method TIRAMISU_0 boolean isClearFreezeFramesSupported();
    method TIRAMISU_0 boolean isSelectiveClearFreezeFramesSupported();
interface CarDiagnosticManager.OnDiagnosticEventListener package android.car.diagnostic
    method TIRAMISU_0 void onDiagnosticEvent(CarDiagnosticEvent carDiagnosticEvent);
class @hide @SystemApi FloatSensorIndex package android.car.diagnostic
    field TIRAMISU_0 int CALCULATED_ENGINE_LOAD = 0;
    field TIRAMISU_0 int ENGINE_COOLANT_TEMPERATURE = 1;
    field TIRAMISU_0 int SHORT_TERM_FUEL_TRIM_BANK1 = 2;
    field TIRAMISU_0 int LONG_TERM_FUEL_TRIM_BANK1 = 3;
    field TIRAMISU_0 int SHORT_TERM_FUEL_TRIM_BANK2 = 4;
    field TIRAMISU_0 int LONG_TERM_FUEL_TRIM_BANK2 = 5;
    field TIRAMISU_0 int FUEL_PRESSURE = 6;
    field TIRAMISU_0 int INTAKE_MANIFOLD_ABSOLUTE_PRESSURE = 7;
    field TIRAMISU_0 int ENGINE_RPM = 8;
    field TIRAMISU_0 int VEHICLE_SPEED = 9;
    field TIRAMISU_0 int TIMING_ADVANCE = 10;
    field TIRAMISU_0 int MAF_AIR_FLOW_RATE = 11;
    field TIRAMISU_0 int THROTTLE_POSITION = 12;
    field TIRAMISU_0 int OXYGEN_SENSOR1_VOLTAGE = 13;
    field TIRAMISU_0 int OXYGEN_SENSOR1_SHORT_TERM_FUEL_TRIM = 14;
    field TIRAMISU_0 int OXYGEN_SENSOR1_FUEL_AIR_EQUIVALENCE_RATIO = 15;
    field TIRAMISU_0 int OXYGEN_SENSOR2_VOLTAGE = 16;
    field TIRAMISU_0 int OXYGEN_SENSOR2_SHORT_TERM_FUEL_TRIM = 17;
    field TIRAMISU_0 int OXYGEN_SENSOR2_FUEL_AIR_EQUIVALENCE_RATIO = 18;
    field TIRAMISU_0 int OXYGEN_SENSOR3_VOLTAGE = 19;
    field TIRAMISU_0 int OXYGEN_SENSOR3_SHORT_TERM_FUEL_TRIM = 20;
    field TIRAMISU_0 int OXYGEN_SENSOR3_FUEL_AIR_EQUIVALENCE_RATIO = 21;
    field TIRAMISU_0 int OXYGEN_SENSOR4_VOLTAGE = 22;
    field TIRAMISU_0 int OXYGEN_SENSOR4_SHORT_TERM_FUEL_TRIM = 23;
    field TIRAMISU_0 int OXYGEN_SENSOR4_FUEL_AIR_EQUIVALENCE_RATIO = 24;
    field TIRAMISU_0 int OXYGEN_SENSOR5_VOLTAGE = 25;
    field TIRAMISU_0 int OXYGEN_SENSOR5_SHORT_TERM_FUEL_TRIM = 26;
    field TIRAMISU_0 int OXYGEN_SENSOR5_FUEL_AIR_EQUIVALENCE_RATIO = 27;
    field TIRAMISU_0 int OXYGEN_SENSOR6_VOLTAGE = 28;
    field TIRAMISU_0 int OXYGEN_SENSOR6_SHORT_TERM_FUEL_TRIM = 29;
    field TIRAMISU_0 int OXYGEN_SENSOR6_FUEL_AIR_EQUIVALENCE_RATIO = 30;
    field TIRAMISU_0 int OXYGEN_SENSOR7_VOLTAGE = 31;
    field TIRAMISU_0 int OXYGEN_SENSOR7_SHORT_TERM_FUEL_TRIM = 32;
    field TIRAMISU_0 int OXYGEN_SENSOR7_FUEL_AIR_EQUIVALENCE_RATIO = 33;
    field TIRAMISU_0 int OXYGEN_SENSOR8_VOLTAGE = 34;
    field TIRAMISU_0 int OXYGEN_SENSOR8_SHORT_TERM_FUEL_TRIM = 35;
    field TIRAMISU_0 int OXYGEN_SENSOR8_FUEL_AIR_EQUIVALENCE_RATIO = 36;
    field TIRAMISU_0 int FUEL_RAIL_PRESSURE = 37;
    field TIRAMISU_0 int FUEL_RAIL_GAUGE_PRESSURE = 38;
    field TIRAMISU_0 int COMMANDED_EXHAUST_GAS_RECIRCULATION = 39;
    field TIRAMISU_0 int EXHAUST_GAS_RECIRCULATION_ERROR = 40;
    field TIRAMISU_0 int COMMANDED_EVAPORATIVE_PURGE = 41;
    field TIRAMISU_0 int FUEL_TANK_LEVEL_INPUT = 42;
    field TIRAMISU_0 int EVAPORATION_SYSTEM_VAPOR_PRESSURE = 43;
    field TIRAMISU_0 int CATALYST_TEMPERATURE_BANK1_SENSOR1 = 44;
    field TIRAMISU_0 int CATALYST_TEMPERATURE_BANK2_SENSOR1 = 45;
    field TIRAMISU_0 int CATALYST_TEMPERATURE_BANK1_SENSOR2 = 46;
    field TIRAMISU_0 int CATALYST_TEMPERATURE_BANK2_SENSOR2 = 47;
    field TIRAMISU_0 int ABSOLUTE_LOAD_VALUE = 48;
    field TIRAMISU_0 int FUEL_AIR_COMMANDED_EQUIVALENCE_RATIO = 49;
    field TIRAMISU_0 int RELATIVE_THROTTLE_POSITION = 50;
    field TIRAMISU_0 int ABSOLUTE_THROTTLE_POSITION_B = 51;
    field TIRAMISU_0 int ABSOLUTE_THROTTLE_POSITION_C = 52;
    field TIRAMISU_0 int ACCELERATOR_PEDAL_POSITION_D = 53;
    field TIRAMISU_0 int ACCELERATOR_PEDAL_POSITION_E = 54;
    field TIRAMISU_0 int ACCELERATOR_PEDAL_POSITION_F = 55;
    field TIRAMISU_0 int COMMANDED_THROTTLE_ACTUATOR = 56;
    field TIRAMISU_0 int ETHANOL_FUEL_PERCENTAGE = 57;
    field TIRAMISU_0 int ABSOLUTE_EVAPORATION_SYSTEM_VAPOR_PRESSURE = 58;
    field TIRAMISU_0 int SHORT_TERM_SECONDARY_OXYGEN_SENSOR_TRIM_BANK1 = 59;
    field TIRAMISU_0 int SHORT_TERM_SECONDARY_OXYGEN_SENSOR_TRIM_BANK2 = 60;
    field TIRAMISU_0 int SHORT_TERM_SECONDARY_OXYGEN_SENSOR_TRIM_BANK3 = 61;
    field TIRAMISU_0 int SHORT_TERM_SECONDARY_OXYGEN_SENSOR_TRIM_BANK4 = 62;
    field TIRAMISU_0 int LONG_TERM_SECONDARY_OXYGEN_SENSOR_TRIM_BANK1 = 63;
    field TIRAMISU_0 int LONG_TERM_SECONDARY_OXYGEN_SENSOR_TRIM_BANK2 = 64;
    field TIRAMISU_0 int LONG_TERM_SECONDARY_OXYGEN_SENSOR_TRIM_BANK3 = 65;
    field TIRAMISU_0 int LONG_TERM_SECONDARY_OXYGEN_SENSOR_TRIM_BANK4 = 66;
    field TIRAMISU_0 int RELATIVE_ACCELERATOR_PEDAL_POSITION = 67;
    field TIRAMISU_0 int HYBRID_BATTERY_PACK_REMAINING_LIFE = 68;
    field TIRAMISU_0 int FUEL_INJECTION_TIMING = 69;
    field TIRAMISU_0 int ENGINE_FUEL_RATE = 70;
    field TIRAMISU_0 int LAST_SYSTEM = ENGINE_FUEL_RATE;
    field TIRAMISU_0 int VENDOR_START = LAST_SYSTEM + 1;
class @hide @SystemApi CarDiagnosticEvent package android.car.diagnostic
    field TIRAMISU_0 int frameType;
    field TIRAMISU_0 long timestamp;
    field TIRAMISU_0 String dtc;
    field TIRAMISU_0 Parcelable.Creator<CarDiagnosticEvent> CREATOR;
    method TIRAMISU_0 int describeContents();
    method TIRAMISU_0 void writeToParcel(Parcel dest, int flags);
    method TIRAMISU_0 void writeToJson(JsonWriter jsonWriter);
    method TIRAMISU_0 @hiddenOnly CarDiagnosticEvent withVendorSensorsRemoved();
    method TIRAMISU_0 boolean isLiveFrame();
    method TIRAMISU_0 boolean isFreezeFrame();
    method TIRAMISU_0 @hiddenOnly boolean isEmptyFrame();
    method TIRAMISU_0 @hiddenOnly CarDiagnosticEvent checkLiveFrame();
    method TIRAMISU_0 @hiddenOnly CarDiagnosticEvent checkFreezeFrame();
    method TIRAMISU_0 @hiddenOnly boolean isEarlierThan(CarDiagnosticEvent otherEvent);
    method TIRAMISU_0 boolean equals(Object otherObject);
    method TIRAMISU_0 int hashCode();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 int getSystemIntegerSensor(int sensor, int defaultValue);
    method TIRAMISU_0 float getSystemFloatSensor(int sensor, float defaultValue);
    method TIRAMISU_0 int getVendorIntegerSensor(int sensor, int defaultValue);
    method TIRAMISU_0 float getVendorFloatSensor(int sensor, float defaultValue);
    method TIRAMISU_0 Integer getSystemIntegerSensor(int sensor);
    method TIRAMISU_0 Float getSystemFloatSensor(int sensor);
    method TIRAMISU_0 Integer getVendorIntegerSensor(int sensor);
    method TIRAMISU_0 Float getVendorFloatSensor(int sensor);
    method TIRAMISU_0 Integer getFuelSystemStatus();
    method TIRAMISU_0 Integer getSecondaryAirStatus();
    method TIRAMISU_0 CommonIgnitionMonitors getIgnitionMonitors();
    method TIRAMISU_0 Integer getFuelType();
class CarDiagnosticEvent.Builder package android.car.diagnostic
    method TIRAMISU_0 Builder newLiveFrameBuilder();
    method TIRAMISU_0 Builder newFreezeFrameBuilder();
    method TIRAMISU_0 Builder atTimestamp(long timestamp);
    method TIRAMISU_0 Builder setTimeStamp(long timeStamp);
    method TIRAMISU_0 Builder withIntValue(int key, int value);
    method TIRAMISU_0 Builder setIntValue(int key, int value);
    method TIRAMISU_0 Builder withFloatValue(int key, float value);
    method TIRAMISU_0 Builder setFloatValue(int key, float value);
    method TIRAMISU_0 Builder withDtc(String dtc);
    method TIRAMISU_0 Builder setDtc(String dtc);
    method TIRAMISU_0 CarDiagnosticEvent build();
class CarDiagnosticEvent.FuelSystemStatus package android.car.diagnostic
    field TIRAMISU_0 int OPEN_INSUFFICIENT_ENGINE_TEMPERATURE = 1;
    field TIRAMISU_0 int CLOSED_LOOP = 2;
    field TIRAMISU_0 int OPEN_ENGINE_LOAD_OR_DECELERATION = 4;
    field TIRAMISU_0 int OPEN_SYSTEM_FAILURE = 8;
    field TIRAMISU_0 int CLOSED_LOOP_BUT_FEEDBACK_FAULT = 16;
class CarDiagnosticEvent.SecondaryAirStatus package android.car.diagnostic
    field TIRAMISU_0 int UPSTREAM = 1;
    field TIRAMISU_0 int DOWNSTREAM_OF_CATALYCIC_CONVERTER = 2;
    field TIRAMISU_0 int FROM_OUTSIDE_OR_OFF = 4;
    field TIRAMISU_0 int PUMP_ON_FOR_DIAGNOSTICS = 8;
class CarDiagnosticEvent.FuelType package android.car.diagnostic
    field TIRAMISU_0 int NOT_AVAILABLE = 0;
    field TIRAMISU_0 int GASOLINE = 1;
    field TIRAMISU_0 int METHANOL = 2;
    field TIRAMISU_0 int ETHANOL = 3;
    field TIRAMISU_0 int DIESEL = 4;
    field TIRAMISU_0 int LPG = 5;
    field TIRAMISU_0 int CNG = 6;
    field TIRAMISU_0 int PROPANE = 7;
    field TIRAMISU_0 int ELECTRIC = 8;
    field TIRAMISU_0 int BIFUEL_RUNNING_GASOLINE = 9;
    field TIRAMISU_0 int BIFUEL_RUNNING_METHANOL = 10;
    field TIRAMISU_0 int BIFUEL_RUNNING_ETHANOL = 11;
    field TIRAMISU_0 int BIFUEL_RUNNING_LPG = 12;
    field TIRAMISU_0 int BIFUEL_RUNNING_CNG = 13;
    field TIRAMISU_0 int BIFUEL_RUNNING_PROPANE = 14;
    field TIRAMISU_0 int BIFUEL_RUNNING_ELECTRIC = 15;
    field TIRAMISU_0 int BIFUEL_RUNNING_ELECTRIC_AND_COMBUSTION = 16;
    field TIRAMISU_0 int HYBRID_GASOLINE = 17;
    field TIRAMISU_0 int HYBRID_ETHANOL = 18;
    field TIRAMISU_0 int HYBRID_DIESEL = 19;
    field TIRAMISU_0 int HYBRID_ELECTRIC = 20;
    field TIRAMISU_0 int HYBRID_RUNNING_ELECTRIC_AND_COMBUSTION = 21;
    field TIRAMISU_0 int HYBRID_REGENERATIVE = 22;
    field TIRAMISU_0 int BIFUEL_RUNNING_DIESEL = 23;
class CarDiagnosticEvent.IgnitionMonitor package android.car.diagnostic
    field TIRAMISU_0 boolean available;
    field TIRAMISU_0 boolean incomplete;
class @hiddenOnly @hide CarDiagnosticEvent.IgnitionMonitor.Decoder package android.car.diagnostic
    method TIRAMISU_0 IgnitionMonitor fromValue(int value);
class CarDiagnosticEvent.CommonIgnitionMonitors package android.car.diagnostic
    field TIRAMISU_0 IgnitionMonitor components;
    field TIRAMISU_0 IgnitionMonitor fuelSystem;
    field TIRAMISU_0 IgnitionMonitor misfire;
    field TIRAMISU_0 @hiddenOnly int COMPONENTS_AVAILABLE = 0x1 << 0;
    field TIRAMISU_0 @hiddenOnly int COMPONENTS_INCOMPLETE = 0x1 << 1;
    field TIRAMISU_0 @hiddenOnly int FUEL_SYSTEM_AVAILABLE = 0x1 << 2;
    field TIRAMISU_0 @hiddenOnly int FUEL_SYSTEM_INCOMPLETE = 0x1 << 3;
    field TIRAMISU_0 @hiddenOnly int MISFIRE_AVAILABLE = 0x1 << 4;
    field TIRAMISU_0 @hiddenOnly int MISFIRE_INCOMPLETE = 0x1 << 5;
    field TIRAMISU_0 IgnitionMonitor.Decoder COMPONENTS_DECODER = new IgnitionMonitor.Decoder(COMPONENTS_AVAILABLE, COMPONENTS_INCOMPLETE);
    field TIRAMISU_0 IgnitionMonitor.Decoder FUEL_SYSTEM_DECODER = new IgnitionMonitor.Decoder(FUEL_SYSTEM_AVAILABLE, FUEL_SYSTEM_INCOMPLETE);
    field TIRAMISU_0 IgnitionMonitor.Decoder MISFIRE_DECODER = new IgnitionMonitor.Decoder(MISFIRE_AVAILABLE, MISFIRE_INCOMPLETE);
    method TIRAMISU_0 SparkIgnitionMonitors asSparkIgnitionMonitors();
    method TIRAMISU_0 CompressionIgnitionMonitors asCompressionIgnitionMonitors();
class CarDiagnosticEvent.SparkIgnitionMonitors package android.car.diagnostic
    field TIRAMISU_0 IgnitionMonitor EGR;
    field TIRAMISU_0 IgnitionMonitor oxygenSensorHeater;
    field TIRAMISU_0 IgnitionMonitor oxygenSensor;
    field TIRAMISU_0 IgnitionMonitor ACRefrigerant;
    field TIRAMISU_0 IgnitionMonitor secondaryAirSystem;
    field TIRAMISU_0 IgnitionMonitor evaporativeSystem;
    field TIRAMISU_0 IgnitionMonitor heatedCatalyst;
    field TIRAMISU_0 IgnitionMonitor catalyst;
    field TIRAMISU_0 @hiddenOnly int EGR_AVAILABLE = 0x1 << 6;
    field TIRAMISU_0 @hiddenOnly int EGR_INCOMPLETE = 0x1 << 7;
    field TIRAMISU_0 @hiddenOnly int OXYGEN_SENSOR_HEATER_AVAILABLE = 0x1 << 8;
    field TIRAMISU_0 @hiddenOnly int OXYGEN_SENSOR_HEATER_INCOMPLETE = 0x1 << 9;
    field TIRAMISU_0 @hiddenOnly int OXYGEN_SENSOR_AVAILABLE = 0x1 << 10;
    field TIRAMISU_0 @hiddenOnly int OXYGEN_SENSOR_INCOMPLETE = 0x1 << 11;
    field TIRAMISU_0 @hiddenOnly int AC_REFRIGERANT_AVAILABLE = 0x1 << 12;
    field TIRAMISU_0 @hiddenOnly int AC_REFRIGERANT_INCOMPLETE = 0x1 << 13;
    field TIRAMISU_0 @hiddenOnly int SECONDARY_AIR_SYSTEM_AVAILABLE = 0x1 << 14;
    field TIRAMISU_0 @hiddenOnly int SECONDARY_AIR_SYSTEM_INCOMPLETE = 0x1 << 15;
    field TIRAMISU_0 @hiddenOnly int EVAPORATIVE_SYSTEM_AVAILABLE = 0x1 << 16;
    field TIRAMISU_0 @hiddenOnly int EVAPORATIVE_SYSTEM_INCOMPLETE = 0x1 << 17;
    field TIRAMISU_0 @hiddenOnly int HEATED_CATALYST_AVAILABLE = 0x1 << 18;
    field TIRAMISU_0 @hiddenOnly int HEATED_CATALYST_INCOMPLETE = 0x1 << 19;
    field TIRAMISU_0 @hiddenOnly int CATALYST_AVAILABLE = 0x1 << 20;
    field TIRAMISU_0 @hiddenOnly int CATALYST_INCOMPLETE = 0x1 << 21;
    field TIRAMISU_0 IgnitionMonitor.Decoder EGR_DECODER = new IgnitionMonitor.Decoder(EGR_AVAILABLE, EGR_INCOMPLETE);
    field TIRAMISU_0 IgnitionMonitor.Decoder OXYGEN_SENSOR_HEATER_DECODER = new IgnitionMonitor.Decoder(OXYGEN_SENSOR_HEATER_AVAILABLE, OXYGEN_SENSOR_HEATER_INCOMPLETE);
    field TIRAMISU_0 IgnitionMonitor.Decoder OXYGEN_SENSOR_DECODER = new IgnitionMonitor.Decoder(OXYGEN_SENSOR_AVAILABLE, OXYGEN_SENSOR_INCOMPLETE);
    field TIRAMISU_0 IgnitionMonitor.Decoder AC_REFRIGERANT_DECODER = new IgnitionMonitor.Decoder(AC_REFRIGERANT_AVAILABLE, AC_REFRIGERANT_INCOMPLETE);
    field TIRAMISU_0 IgnitionMonitor.Decoder SECONDARY_AIR_SYSTEM_DECODER = new IgnitionMonitor.Decoder(SECONDARY_AIR_SYSTEM_AVAILABLE, SECONDARY_AIR_SYSTEM_INCOMPLETE);
    field TIRAMISU_0 IgnitionMonitor.Decoder EVAPORATIVE_SYSTEM_DECODER = new IgnitionMonitor.Decoder(EVAPORATIVE_SYSTEM_AVAILABLE, EVAPORATIVE_SYSTEM_INCOMPLETE);
    field TIRAMISU_0 IgnitionMonitor.Decoder HEATED_CATALYST_DECODER = new IgnitionMonitor.Decoder(HEATED_CATALYST_AVAILABLE, HEATED_CATALYST_INCOMPLETE);
    field TIRAMISU_0 IgnitionMonitor.Decoder CATALYST_DECODER = new IgnitionMonitor.Decoder(CATALYST_AVAILABLE, CATALYST_INCOMPLETE);
class CarDiagnosticEvent.CompressionIgnitionMonitors package android.car.diagnostic
    field TIRAMISU_0 IgnitionMonitor EGROrVVT;
    field TIRAMISU_0 IgnitionMonitor PMFilter;
    field TIRAMISU_0 IgnitionMonitor exhaustGasSensor;
    field TIRAMISU_0 IgnitionMonitor boostPressure;
    field TIRAMISU_0 IgnitionMonitor NOxSCR;
    field TIRAMISU_0 IgnitionMonitor NMHCCatalyst;
    field TIRAMISU_0 @hiddenOnly int EGR_OR_VVT_AVAILABLE = 0x1 << 6;
    field TIRAMISU_0 @hiddenOnly int EGR_OR_VVT_INCOMPLETE = 0x1 << 7;
    field TIRAMISU_0 @hiddenOnly int PM_FILTER_AVAILABLE = 0x1 << 8;
    field TIRAMISU_0 @hiddenOnly int PM_FILTER_INCOMPLETE = 0x1 << 9;
    field TIRAMISU_0 @hiddenOnly int EXHAUST_GAS_SENSOR_AVAILABLE = 0x1 << 10;
    field TIRAMISU_0 @hiddenOnly int EXHAUST_GAS_SENSOR_INCOMPLETE = 0x1 << 11;
    field TIRAMISU_0 @hiddenOnly int BOOST_PRESSURE_AVAILABLE = 0x1 << 12;
    field TIRAMISU_0 @hiddenOnly int BOOST_PRESSURE_INCOMPLETE = 0x1 << 13;
    field TIRAMISU_0 @hiddenOnly int NOx_SCR_AVAILABLE = 0x1 << 14;
    field TIRAMISU_0 @hiddenOnly int NOx_SCR_INCOMPLETE = 0x1 << 15;
    field TIRAMISU_0 @hiddenOnly int NMHC_CATALYST_AVAILABLE = 0x1 << 16;
    field TIRAMISU_0 @hiddenOnly int NMHC_CATALYST_INCOMPLETE = 0x1 << 17;
    field TIRAMISU_0 IgnitionMonitor.Decoder EGR_OR_VVT_DECODER = new IgnitionMonitor.Decoder(EGR_OR_VVT_AVAILABLE, EGR_OR_VVT_INCOMPLETE);
    field TIRAMISU_0 IgnitionMonitor.Decoder PM_FILTER_DECODER = new IgnitionMonitor.Decoder(PM_FILTER_AVAILABLE, PM_FILTER_INCOMPLETE);
    field TIRAMISU_0 IgnitionMonitor.Decoder EXHAUST_GAS_SENSOR_DECODER = new IgnitionMonitor.Decoder(EXHAUST_GAS_SENSOR_AVAILABLE, EXHAUST_GAS_SENSOR_INCOMPLETE);
    field TIRAMISU_0 IgnitionMonitor.Decoder BOOST_PRESSURE_DECODER = new IgnitionMonitor.Decoder(BOOST_PRESSURE_AVAILABLE, BOOST_PRESSURE_INCOMPLETE);
    field TIRAMISU_0 IgnitionMonitor.Decoder NOx_SCR_DECODER = new IgnitionMonitor.Decoder(NOx_SCR_AVAILABLE, NOx_SCR_INCOMPLETE);
    field TIRAMISU_0 IgnitionMonitor.Decoder NMHC_CATALYST_DECODER = new IgnitionMonitor.Decoder(NMHC_CATALYST_AVAILABLE, NMHC_CATALYST_INCOMPLETE);
class @hide @SystemApi IntegerSensorIndex package android.car.diagnostic
    field TIRAMISU_0 int FUEL_SYSTEM_STATUS = 0;
    field TIRAMISU_0 int MALFUNCTION_INDICATOR_LIGHT_ON = 1;
    field TIRAMISU_0 int IGNITION_MONITORS_SUPPORTED = 2;
    field TIRAMISU_0 int IGNITION_SPECIFIC_MONITORS = 3;
    field TIRAMISU_0 int INTAKE_AIR_TEMPERATURE = 4;
    field TIRAMISU_0 int COMMANDED_SECONDARY_AIR_STATUS = 5;
    field TIRAMISU_0 int NUM_OXYGEN_SENSORS_PRESENT = 6;
    field TIRAMISU_0 int RUNTIME_SINCE_ENGINE_START = 7;
    field TIRAMISU_0 int DISTANCE_TRAVELED_WITH_MALFUNCTION_INDICATOR_LIGHT_ON = 8;
    field TIRAMISU_0 int WARMUPS_SINCE_CODES_CLEARED = 9;
    field TIRAMISU_0 int DISTANCE_TRAVELED_SINCE_CODES_CLEARED = 10;
    field TIRAMISU_0 int ABSOLUTE_BAROMETRIC_PRESSURE = 11;
    field TIRAMISU_0 int CONTROL_MODULE_VOLTAGE = 12;
    field TIRAMISU_0 int AMBIENT_AIR_TEMPERATURE = 13;
    field TIRAMISU_0 int TIME_WITH_MALFUNCTION_LIGHT_ON = 14;
    field TIRAMISU_0 int TIME_SINCE_TROUBLE_CODES_CLEARED = 15;
    field TIRAMISU_0 int MAX_FUEL_AIR_EQUIVALENCE_RATIO = 16;
    field TIRAMISU_0 int MAX_OXYGEN_SENSOR_VOLTAGE = 17;
    field TIRAMISU_0 int MAX_OXYGEN_SENSOR_CURRENT = 18;
    field TIRAMISU_0 int MAX_INTAKE_MANIFOLD_ABSOLUTE_PRESSURE = 19;
    field TIRAMISU_0 int MAX_AIR_FLOW_RATE_FROM_MASS_AIR_FLOW_SENSOR = 20;
    field TIRAMISU_0 int FUEL_TYPE = 21;
    field TIRAMISU_0 int FUEL_RAIL_ABSOLUTE_PRESSURE = 22;
    field TIRAMISU_0 int ENGINE_OIL_TEMPERATURE = 23;
    field TIRAMISU_0 int DRIVER_DEMAND_PERCENT_TORQUE = 24;
    field TIRAMISU_0 int ENGINE_ACTUAL_PERCENT_TORQUE = 25;
    field TIRAMISU_0 int ENGINE_REFERENCE_PERCENT_TORQUE = 26;
    field TIRAMISU_0 int ENGINE_PERCENT_TORQUE_DATA_IDLE = 27;
    field TIRAMISU_0 int ENGINE_PERCENT_TORQUE_DATA_POINT1 = 28;
    field TIRAMISU_0 int ENGINE_PERCENT_TORQUE_DATA_POINT2 = 29;
    field TIRAMISU_0 int ENGINE_PERCENT_TORQUE_DATA_POINT3 = 30;
    field TIRAMISU_0 int ENGINE_PERCENT_TORQUE_DATA_POINT4 = 31;
    field TIRAMISU_0 int LAST_SYSTEM = ENGINE_PERCENT_TORQUE_DATA_POINT4;
    field TIRAMISU_0 int VENDOR_START = LAST_SYSTEM + 1;
class VehiclePropertyIds package android.car
    field TIRAMISU_0 int INVALID = 0;
    field TIRAMISU_0 int INFO_VIN = 286261504;
    field TIRAMISU_0 int INFO_MAKE = 286261505;
    field TIRAMISU_0 int INFO_MODEL = 286261506;
    field TIRAMISU_0 int INFO_MODEL_YEAR = 289407235;
    field TIRAMISU_0 int INFO_FUEL_CAPACITY = 291504388;
    field TIRAMISU_0 int INFO_FUEL_TYPE = 289472773;
    field TIRAMISU_0 int INFO_EV_BATTERY_CAPACITY = 291504390;
    field TIRAMISU_0 int INFO_EV_CONNECTOR_TYPE = 289472775;
    field TIRAMISU_0 int INFO_FUEL_DOOR_LOCATION = 289407240;
    field TIRAMISU_0 int INFO_EV_PORT_LOCATION = 289407241;
    field TIRAMISU_0 int INFO_MULTI_EV_PORT_LOCATIONS = 289472780;
    field TIRAMISU_0 int INFO_DRIVER_SEAT = 356516106;
    field TIRAMISU_0 int INFO_EXTERIOR_DIMENSIONS = 289472779;
    field TIRAMISU_0 int PERF_ODOMETER = 291504644;
    field TIRAMISU_0 int PERF_VEHICLE_SPEED = 291504647;
    field TIRAMISU_0 int PERF_VEHICLE_SPEED_DISPLAY = 291504648;
    field TIRAMISU_0 int PERF_STEERING_ANGLE = 291504649;
    field TIRAMISU_0 int PERF_REAR_STEERING_ANGLE = 291504656;
    field TIRAMISU_0 int ENGINE_COOLANT_TEMP = 291504897;
    field TIRAMISU_0 int ENGINE_OIL_LEVEL = 289407747;
    field TIRAMISU_0 int ENGINE_OIL_TEMP = 291504900;
    field TIRAMISU_0 int ENGINE_RPM = 291504901;
    field TIRAMISU_0 int WHEEL_TICK = 290521862;
    field TIRAMISU_0 int FUEL_LEVEL = 291504903;
    field TIRAMISU_0 int FUEL_DOOR_OPEN = 287310600;
    field TIRAMISU_0 int EV_BATTERY_LEVEL = 291504905;
    field TIRAMISU_0 int EV_CHARGE_PORT_OPEN = 287310602;
    field TIRAMISU_0 int EV_CHARGE_PORT_CONNECTED = 287310603;
    field TIRAMISU_0 int EV_BATTERY_INSTANTANEOUS_CHARGE_RATE = 291504908;
    field TIRAMISU_0 int RANGE_REMAINING = 291504904;
    field TIRAMISU_0 int TIRE_PRESSURE = 392168201;
    field TIRAMISU_0 int CRITICALLY_LOW_TIRE_PRESSURE = 392168202;
    field TIRAMISU_0 int GEAR_SELECTION = 289408000;
    field TIRAMISU_0 int CURRENT_GEAR = 289408001;
    field TIRAMISU_0 int PARKING_BRAKE_ON = 287310850;
    field TIRAMISU_0 int PARKING_BRAKE_AUTO_APPLY = 287310851;
    field TIRAMISU_0 int FUEL_LEVEL_LOW = 287310853;
    field TIRAMISU_0 int NIGHT_MODE = 287310855;
    field TIRAMISU_0 int TURN_SIGNAL_STATE = 289408008;
    field TIRAMISU_0 int IGNITION_STATE = 289408009;
    field TIRAMISU_0 int ABS_ACTIVE = 287310858;
    field TIRAMISU_0 int TRACTION_CONTROL_ACTIVE = 287310859;
    field TIRAMISU_0 int HVAC_FAN_SPEED = 356517120;
    field TIRAMISU_0 int HVAC_FAN_DIRECTION = 356517121;
    field TIRAMISU_0 int HVAC_TEMPERATURE_CURRENT = 358614274;
    field TIRAMISU_0 int HVAC_TEMPERATURE_SET = 358614275;
    field TIRAMISU_0 int HVAC_TEMPERATURE_VALUE_SUGGESTION = 291570965;
    field TIRAMISU_0 int HVAC_DEFROSTER = 320865540;
    field TIRAMISU_0 int HVAC_AC_ON = 354419973;
    field TIRAMISU_0 int HVAC_MAX_AC_ON = 354419974;
    field TIRAMISU_0 int HVAC_MAX_DEFROST_ON = 354419975;
    field TIRAMISU_0 int HVAC_RECIRC_ON = 354419976;
    field TIRAMISU_0 int HVAC_DUAL_ON = 354419977;
    field TIRAMISU_0 int HVAC_AUTO_ON = 354419978;
    field TIRAMISU_0 int HVAC_SEAT_TEMPERATURE = 356517131;
    field TIRAMISU_0 int HVAC_SIDE_MIRROR_HEAT = 339739916;
    field TIRAMISU_0 int HVAC_STEERING_WHEEL_HEAT = 289408269;
    field TIRAMISU_0 int HVAC_TEMPERATURE_DISPLAY_UNITS = 289408270;
    field TIRAMISU_0 int HVAC_ACTUAL_FAN_SPEED_RPM = 356517135;
    field TIRAMISU_0 int HVAC_POWER_ON = 354419984;
    field TIRAMISU_0 int HVAC_FAN_DIRECTION_AVAILABLE = 356582673;
    field TIRAMISU_0 int HVAC_AUTO_RECIRC_ON = 354419986;
    field TIRAMISU_0 int HVAC_SEAT_VENTILATION = 356517139;
    field TIRAMISU_0 int HVAC_ELECTRIC_DEFROSTER_ON = 320865556;
    field TIRAMISU_0 int DISTANCE_DISPLAY_UNITS = 289408512;
    field TIRAMISU_0 int FUEL_VOLUME_DISPLAY_UNITS = 289408513;
    field TIRAMISU_0 int TIRE_PRESSURE_DISPLAY_UNITS = 289408514;
    field TIRAMISU_0 int EV_BATTERY_DISPLAY_UNITS = 289408515;
    field TIRAMISU_0 int VEHICLE_SPEED_DISPLAY_UNITS = 289408516;
    field TIRAMISU_0 int FUEL_CONSUMPTION_UNITS_DISTANCE_OVER_VOLUME = 287311364;
    field TIRAMISU_0 int ENV_OUTSIDE_TEMPERATURE = 291505923;
    field TIRAMISU_0 int AP_POWER_STATE_REQ = 289475072;
    field TIRAMISU_0 int AP_POWER_STATE_REPORT = 289475073;
    field TIRAMISU_0 int AP_POWER_BOOTUP_REASON = 289409538;
    field TIRAMISU_0 int DISPLAY_BRIGHTNESS = 289409539;
    field TIRAMISU_0 int HW_KEY_INPUT = 289475088;
    field TIRAMISU_0 int DOOR_POS = 373295872;
    field TIRAMISU_0 int DOOR_MOVE = 373295873;
    field TIRAMISU_0 int DOOR_LOCK = 371198722;
    field TIRAMISU_0 int MIRROR_Z_POS = 339741504;
    field TIRAMISU_0 int MIRROR_Z_MOVE = 339741505;
    field TIRAMISU_0 int MIRROR_Y_POS = 339741506;
    field TIRAMISU_0 int MIRROR_Y_MOVE = 339741507;
    field TIRAMISU_0 int MIRROR_LOCK = 287312708;
    field TIRAMISU_0 int MIRROR_FOLD = 287312709;
    field TIRAMISU_0 int SEAT_MEMORY_SELECT = 356518784;
    field TIRAMISU_0 int SEAT_MEMORY_SET = 356518785;
    field TIRAMISU_0 int SEAT_BELT_BUCKLED = 354421634;
    field TIRAMISU_0 int SEAT_BELT_HEIGHT_POS = 356518787;
    field TIRAMISU_0 int SEAT_BELT_HEIGHT_MOVE = 356518788;
    field TIRAMISU_0 int SEAT_FORE_AFT_POS = 356518789;
    field TIRAMISU_0 int SEAT_FORE_AFT_MOVE = 356518790;
    field TIRAMISU_0 int SEAT_BACKREST_ANGLE_1_POS = 356518791;
    field TIRAMISU_0 int SEAT_BACKREST_ANGLE_1_MOVE = 356518792;
    field TIRAMISU_0 int SEAT_BACKREST_ANGLE_2_POS = 356518793;
    field TIRAMISU_0 int SEAT_BACKREST_ANGLE_2_MOVE = 356518794;
    field TIRAMISU_0 int SEAT_HEIGHT_POS = 356518795;
    field TIRAMISU_0 int SEAT_HEIGHT_MOVE = 356518796;
    field TIRAMISU_0 int SEAT_DEPTH_POS = 356518797;
    field TIRAMISU_0 int SEAT_DEPTH_MOVE = 356518798;
    field TIRAMISU_0 int SEAT_TILT_POS = 356518799;
    field TIRAMISU_0 int SEAT_TILT_MOVE = 356518800;
    field TIRAMISU_0 int SEAT_LUMBAR_FORE_AFT_POS = 356518801;
    field TIRAMISU_0 int SEAT_LUMBAR_FORE_AFT_MOVE = 356518802;
    field TIRAMISU_0 int SEAT_LUMBAR_SIDE_SUPPORT_POS = 356518803;
    field TIRAMISU_0 int SEAT_LUMBAR_SIDE_SUPPORT_MOVE = 356518804;
    field TIRAMISU_0 int SEAT_HEADREST_HEIGHT_POS = 289409941;
    field TIRAMISU_0 int SEAT_HEADREST_HEIGHT_MOVE = 356518806;
    field TIRAMISU_0 int SEAT_HEADREST_ANGLE_POS = 356518807;
    field TIRAMISU_0 int SEAT_HEADREST_ANGLE_MOVE = 356518808;
    field TIRAMISU_0 int SEAT_HEADREST_FORE_AFT_POS = 356518809;
    field TIRAMISU_0 int SEAT_HEADREST_FORE_AFT_MOVE = 356518810;
    field TIRAMISU_0 int SEAT_OCCUPANCY = 356518832;
    field TIRAMISU_0 int WINDOW_POS = 322964416;
    field TIRAMISU_0 int WINDOW_MOVE = 322964417;
    field TIRAMISU_0 int WINDOW_LOCK = 320867268;
    field TIRAMISU_0 int VEHICLE_MAP_SERVICE = 299895808;
    field TIRAMISU_0 int OBD2_LIVE_FRAME = 299896064;
    field TIRAMISU_0 int OBD2_FREEZE_FRAME = 299896065;
    field TIRAMISU_0 int OBD2_FREEZE_FRAME_INFO = 299896066;
    field TIRAMISU_0 int OBD2_FREEZE_FRAME_CLEAR = 299896067;
    field TIRAMISU_0 int HEADLIGHTS_STATE = 289410560;
    field TIRAMISU_0 int HIGH_BEAM_LIGHTS_STATE = 289410561;
    field TIRAMISU_0 int FOG_LIGHTS_STATE = 289410562;
    field TIRAMISU_0 int HAZARD_LIGHTS_STATE = 289410563;
    field TIRAMISU_0 int HEADLIGHTS_SWITCH = 289410576;
    field TIRAMISU_0 int HIGH_BEAM_LIGHTS_SWITCH = 289410577;
    field TIRAMISU_0 int FOG_LIGHTS_SWITCH = 289410578;
    field TIRAMISU_0 int HAZARD_LIGHTS_SWITCH = 289410579;
    field TIRAMISU_0 int CABIN_LIGHTS_STATE = 289410817;
    field TIRAMISU_0 int CABIN_LIGHTS_SWITCH = 289410818;
    field TIRAMISU_0 int READING_LIGHTS_STATE = 356519683;
    field TIRAMISU_0 int READING_LIGHTS_SWITCH = 356519684;
    field TIRAMISU_0 @hiddenOnly int INITIAL_USER_INFO = 299896583;
    field TIRAMISU_0 @hiddenOnly int SWITCH_USER = 299896584;
    field TIRAMISU_0 @hiddenOnly int CREATE_USER = 299896585;
    field TIRAMISU_0 @hiddenOnly int REMOVE_USER = 299896586;
    field TIRAMISU_0 @hiddenOnly int USER_IDENTIFICATION_ASSOCIATION = 299896587;
    field TIRAMISU_0 @hiddenOnly int POWER_POLICY_REQ = 286265121;
    field TIRAMISU_0 @hiddenOnly int POWER_POLICY_GROUP_REQ = 286265122;
    field TIRAMISU_0 @hiddenOnly int CURRENT_POWER_POLICY = 286265123;
    field TIRAMISU_0 @hiddenOnly int WATCHDOG_ALIVE = 290459441;
    field TIRAMISU_0 @hiddenOnly int WATCHDOG_TERMINATED_PROCESS = 299896626;
    field TIRAMISU_0 @hiddenOnly int VHAL_HEARTBEAT = 290459443;
    field TIRAMISU_0 @hiddenOnly int CLUSTER_SWITCH_UI = 289410868;
    field TIRAMISU_0 @hiddenOnly int CLUSTER_DISPLAY_STATE = 289476405;
    field TIRAMISU_0 @hiddenOnly int CLUSTER_REPORT_STATE = 299896630;
    field TIRAMISU_0 @hiddenOnly int CLUSTER_REQUEST_DISPLAY = 289410871;
    field TIRAMISU_0 @hiddenOnly int CLUSTER_NAVIGATION_STATE = 292556600;
    field TIRAMISU_0 int EPOCH_TIME = 290457094;
    field TIRAMISU_0 int STORAGE_ENCRYPTION_BINDING_SEED = 292554247;
    field TIRAMISU_0 int ELECTRONIC_TOLL_COLLECTION_CARD_TYPE = 289410873;
    field TIRAMISU_0 int ELECTRONIC_TOLL_COLLECTION_CARD_STATUS = 289410874;
    field TIRAMISU_0 int FRONT_FOG_LIGHTS_STATE = 289410875;
    field TIRAMISU_0 int FRONT_FOG_LIGHTS_SWITCH = 289410876;
    field TIRAMISU_0 int REAR_FOG_LIGHTS_STATE = 289410877;
    field TIRAMISU_0 int REAR_FOG_LIGHTS_SWITCH = 289410878;
    field TIRAMISU_0 int EV_CHARGE_CURRENT_DRAW_LIMIT = 291508031;
    field TIRAMISU_0 int EV_CHARGE_PERCENT_LIMIT = 291508032;
    field TIRAMISU_0 int EV_CHARGE_STATE = 289410881;
    field TIRAMISU_0 int EV_CHARGE_SWITCH = 287313730;
    field TIRAMISU_0 int EV_CHARGE_TIME_REMAINING = 289410883;
    field TIRAMISU_0 int EV_REGENERATIVE_BRAKING_STATE = 289410884;
    field TIRAMISU_0 int VEHICLE_CURB_WEIGHT = 289410886;
    field TIRAMISU_0 int TRAILER_PRESENT = 289410885;
    method TIRAMISU_0 String toString(int property);
class VehicleUnit package android.car
    field TIRAMISU_0 int SHOULD_NOT_USE = 0x000;
    field TIRAMISU_0 int RPM = 0x02;
    field TIRAMISU_0 int HERTZ = 0x03;
    field TIRAMISU_0 int PERCENTILE = 0x10;
    field TIRAMISU_0 int NANO_SECS = 0x50;
    field TIRAMISU_0 int SECS = 0x53;
    field TIRAMISU_0 int YEAR = 0x59;
    field TIRAMISU_0 int MILLIAMPERE = 0x61;
    field TIRAMISU_0 int MILLIVOLT = 0x62;
    field TIRAMISU_0 int MILLIWATTS = 0x63;
    field TIRAMISU_0 int DEGREES = 0x80;
    field TIRAMISU_0 int MILLIMETER = 0x20;
    field TIRAMISU_0 int METER = 0x21;
    field TIRAMISU_0 int KILOMETER = 0x23;
    field TIRAMISU_0 int MILE = 0x24;
    field TIRAMISU_0 int CELSIUS = 0x30;
    field TIRAMISU_0 int FAHRENHEIT = 0x31;
    field TIRAMISU_0 int KELVIN = 0x32;
    field TIRAMISU_0 int MILLILITER = 0x40;
    field TIRAMISU_0 int LITER = 0x41;
    field TIRAMISU_0 int US_GALLON = 0x42;
    field TIRAMISU_0 int IMPERIAL_GALLON = 0x43;
    field TIRAMISU_0 int WATT_HOUR = 0x60;
    field TIRAMISU_0 int AMPERE_HOURS = 0x64;
    field TIRAMISU_0 int KILOWATT_HOUR = 0x65;
    field TIRAMISU_0 int KILOPASCAL = 0x70;
    field TIRAMISU_0 int PSI = 0x71;
    field TIRAMISU_0 int BAR = 0x72;
    field TIRAMISU_0 int METER_PER_SEC = 0x01;
    field TIRAMISU_0 int MILES_PER_HOUR = 0x90;
    field TIRAMISU_0 int KILOMETERS_PER_HOUR = 0x91;
class @hide @SystemApi CarPerformanceManager package android.car.os
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
    method TIRAMISU_0 @hiddenOnly void addCpuAvailabilityChangeListener(Executor executor, CpuAvailabilityMonitoringConfig config, CpuAvailabilityChangeListener listener);
    method TIRAMISU_0 @hiddenOnly void removeCpuAvailabilityChangeListener(Executor executor, CpuAvailabilityChangeListener listener);
    method TIRAMISU_1 void setThreadPriority(ThreadPolicyWithPriority policyWithPriority);
    method TIRAMISU_1 ThreadPolicyWithPriority getThreadPriority();
class @hide @SystemApi CarPerformanceManager.SetSchedulerFailedException package android.car.os
interface @hiddenOnly @hide CarPerformanceManager.CpuAvailabilityChangeListener package android.car.os
    method TIRAMISU_0 void onCpuAvailabilityChange(CpuAvailabilityInfo info);
class @hiddenOnly @hide CpuAvailabilityMonitoringConfig package android.car.os
    field TIRAMISU_0 int CPUSET_ALL = 1;
    field TIRAMISU_0 int CPUSET_BACKGROUND = 2;
    field TIRAMISU_0 int IGNORE_PERCENT_LOWER_BOUND = 0;
    field TIRAMISU_0 int IGNORE_PERCENT_UPPER_BOUND = 100;
    field TIRAMISU_0 int MONITORING_TIMEOUT_NEVER = -1;
    field TIRAMISU_0 int TIMEOUT_ACTION_NOTIFICATION = 1;
    field TIRAMISU_0 int TIMEOUT_ACTION_REMOVE = 2;
    field TIRAMISU_0 Parcelable.Creator<CpuAvailabilityMonitoringConfig> CREATOR;
    method TIRAMISU_0 @hiddenOnly String cpusetToString(int value);
    method TIRAMISU_0 @hiddenOnly String ignorePercentToString(int value);
    method TIRAMISU_0 @hiddenOnly String timeoutActionToString(int value);
    method TIRAMISU_0 int getCpuset();
    method TIRAMISU_0 int getLowerBoundPercent();
    method TIRAMISU_0 int getUpperBoundPercent();
    method TIRAMISU_0 long getTimeoutInSeconds();
    method TIRAMISU_0 int getTimeoutAction();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 void writeToParcel(android.os.Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class CpuAvailabilityMonitoringConfig.Builder package android.car.os
    method TIRAMISU_0 Builder setCpuset(int value);
    method TIRAMISU_0 Builder setLowerBoundPercent(int value);
    method TIRAMISU_0 Builder setUpperBoundPercent(int value);
    method TIRAMISU_0 Builder setTimeoutInSeconds(long value);
    method TIRAMISU_0 Builder setTimeoutAction(int value);
    method TIRAMISU_0 CpuAvailabilityMonitoringConfig build();
class @hide @SystemApi ThreadPolicyWithPriority package android.car.os
    field TIRAMISU_1 int PRIORITY_MIN = 1;
    field TIRAMISU_1 int PRIORITY_MAX = 99;
    field TIRAMISU_1 int SCHED_DEFAULT = 0;
    field TIRAMISU_1 int SCHED_FIFO = 1;
    field TIRAMISU_1 int SCHED_RR = 2;
    field TIRAMISU_1 Parcelable.Creator<ThreadPolicyWithPriority> CREATOR;
    method  @hiddenOnly String priorityToString(int value);
    method TIRAMISU_1 @hiddenOnly String schedToString(int value);
    method TIRAMISU_1 int getPolicy();
    method TIRAMISU_1 int getPriority();
    method TIRAMISU_1 void writeToParcel(android.os.Parcel dest, int flags);
    method TIRAMISU_1 int describeContents();
class @hiddenOnly @hide CpuAvailabilityInfo package android.car.os
    field TIRAMISU_0 Parcelable.Creator<CpuAvailabilityInfo> CREATOR;
    method TIRAMISU_0 int getCpuset();
    method TIRAMISU_0 int getAverageAvailabilityPercent();
    method TIRAMISU_0 boolean isTimeout();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 void writeToParcel(android.os.Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class @hiddenOnly @hide CpuAvailabilityInfo.Builder package android.car.os
    method TIRAMISU_0 Builder setCpuset(int value);
    method TIRAMISU_0 Builder setAverageAvailabilityPercent(int value);
    method TIRAMISU_0 Builder setTimeout(boolean value);
    method TIRAMISU_0 CpuAvailabilityInfo build();
class ResourceOveruseStats package android.car.watchdog
    field TIRAMISU_0 Parcelable.Creator<ResourceOveruseStats> CREATOR;
    method TIRAMISU_0 String getPackageName();
    method TIRAMISU_0 UserHandle getUserHandle();
    method TIRAMISU_0 IoOveruseStats getIoOveruseStats();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 void writeToParcel(android.os.Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class @hiddenOnly @hide ResourceOveruseStats.Builder package android.car.watchdog
    method TIRAMISU_0 Builder setPackageName(String value);
    method TIRAMISU_0 Builder setUserHandle(UserHandle value);
    method TIRAMISU_0 Builder setIoOveruseStats(IoOveruseStats value);
    method TIRAMISU_0 ResourceOveruseStats build();
class @hide @SystemApi IoOveruseAlertThreshold package android.car.watchdog
    field TIRAMISU_0 Parcelable.Creator<IoOveruseAlertThreshold> CREATOR;
    method TIRAMISU_0 long getDurationInSeconds();
    method TIRAMISU_0 long getWrittenBytesPerSecond();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 void writeToParcel(android.os.Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class IoOveruseStats package android.car.watchdog
    field TIRAMISU_0 Parcelable.Creator<IoOveruseStats> CREATOR;
    method TIRAMISU_0 long getStartTime();
    method TIRAMISU_0 long getDurationInSeconds();
    method TIRAMISU_0 long getTotalOveruses();
    method TIRAMISU_0 long getTotalTimesKilled();
    method TIRAMISU_0 long getTotalBytesWritten();
    method TIRAMISU_0 boolean isKillableOnOveruse();
    method TIRAMISU_0 PerStateBytes getRemainingWriteBytes();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 void writeToParcel(android.os.Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class @hiddenOnly @hide IoOveruseStats.Builder package android.car.watchdog
    method TIRAMISU_0 Builder setStartTime(long value);
    method TIRAMISU_0 Builder setDurationInSeconds(long value);
    method TIRAMISU_0 Builder setTotalOveruses(long value);
    method TIRAMISU_0 Builder setTotalTimesKilled(long value);
    method TIRAMISU_0 Builder setTotalBytesWritten(long value);
    method TIRAMISU_0 Builder setKillableOnOveruse(boolean value);
    method TIRAMISU_0 Builder setRemainingWriteBytes(PerStateBytes value);
    method TIRAMISU_0 IoOveruseStats build();
class CarWatchdogManager package android.car.watchdog
    field TIRAMISU_0 int TIMEOUT_CRITICAL = 0;
    field TIRAMISU_0 int TIMEOUT_MODERATE = 1;
    field TIRAMISU_0 int TIMEOUT_NORMAL = 2;
    field TIRAMISU_0 int STATS_PERIOD_CURRENT_DAY = 1;
    field TIRAMISU_0 int STATS_PERIOD_PAST_3_DAYS = 2;
    field TIRAMISU_0 int STATS_PERIOD_PAST_7_DAYS = 3;
    field TIRAMISU_0 int STATS_PERIOD_PAST_15_DAYS = 4;
    field TIRAMISU_0 int STATS_PERIOD_PAST_30_DAYS = 5;
    field TIRAMISU_0 int FLAG_RESOURCE_OVERUSE_IO = 1 << 0;
    field TIRAMISU_0 int FLAG_MINIMUM_STATS_IO_1_MB = 1 << 0;
    field TIRAMISU_0 int FLAG_MINIMUM_STATS_IO_100_MB = 1 << 1;
    field TIRAMISU_0 int FLAG_MINIMUM_STATS_IO_1_GB = 1 << 2;
    field TIRAMISU_0 int RETURN_CODE_SUCCESS = 0;
    field TIRAMISU_0 int RETURN_CODE_ERROR = -1;
    method TIRAMISU_0 void registerClient(Executor executor, CarWatchdogClientCallback client, int timeout);
    method TIRAMISU_0 void unregisterClient(CarWatchdogClientCallback client);
    method TIRAMISU_0 void tellClientAlive(CarWatchdogClientCallback client, int sessionId);
    method TIRAMISU_0 ResourceOveruseStats getResourceOveruseStats(int resourceOveruseFlag, int maxStatsPeriod);
    method TIRAMISU_0 List<ResourceOveruseStats> getAllResourceOveruseStats(int resourceOveruseFlag, int minimumStatsFlag, int maxStatsPeriod);
    method TIRAMISU_0 ResourceOveruseStats getResourceOveruseStatsForUserPackage(String packageName, UserHandle userHandle, int resourceOveruseFlag, int maxStatsPeriod);
    method TIRAMISU_0 void addResourceOveruseListener(Executor executor, int resourceOveruseFlag, ResourceOveruseListener listener);
    method TIRAMISU_0 void removeResourceOveruseListener(ResourceOveruseListener listener);
    method TIRAMISU_0 void addResourceOveruseListenerForSystem(Executor executor, int resourceOveruseFlag, ResourceOveruseListener listener);
    method TIRAMISU_0 void removeResourceOveruseListenerForSystem(ResourceOveruseListener listener);
    method TIRAMISU_0 void setKillablePackageAsUser(String packageName, UserHandle userHandle, boolean isKillable);
    method TIRAMISU_0 List<PackageKillableState> getPackageKillableStatesAsUser(UserHandle userHandle);
    method TIRAMISU_0 int setResourceOveruseConfigurations(List<ResourceOveruseConfiguration> configurations, int resourceOveruseFlag);
    method TIRAMISU_0 List<ResourceOveruseConfiguration> getResourceOveruseConfigurations(int resourceOveruseFlag);
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
class @hide @SystemApi CarWatchdogManager.CarWatchdogClientCallback package android.car.watchdog
    method TIRAMISU_0 boolean onCheckHealthStatus(int sessionId, int timeout);
    method TIRAMISU_0 void onPrepareProcessTermination();
interface CarWatchdogManager.ResourceOveruseListener package android.car.watchdog
    method TIRAMISU_0 void onOveruse(ResourceOveruseStats resourceOveruseStats);
class @hide @SystemApi IoOveruseConfiguration package android.car.watchdog
    field TIRAMISU_0 Parcelable.Creator<IoOveruseConfiguration> CREATOR;
    method TIRAMISU_0 PerStateBytes getComponentLevelThresholds();
    method TIRAMISU_0 Map<String,PerStateBytes> getPackageSpecificThresholds();
    method TIRAMISU_0 Map<String,PerStateBytes> getAppCategorySpecificThresholds();
    method TIRAMISU_0 List<IoOveruseAlertThreshold> getSystemWideThresholds();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 void writeToParcel(android.os.Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class IoOveruseConfiguration.Builder package android.car.watchdog
    method TIRAMISU_0 Builder setComponentLevelThresholds(PerStateBytes value);
    method TIRAMISU_0 Builder setPackageSpecificThresholds(Map<String,PerStateBytes> value);
    method TIRAMISU_0 Builder addPackageSpecificThresholds(String key, PerStateBytes value);
    method TIRAMISU_0 Builder setAppCategorySpecificThresholds(Map<String,PerStateBytes> value);
    method TIRAMISU_0 Builder addAppCategorySpecificThresholds(String key, PerStateBytes value);
    method TIRAMISU_0 Builder setSystemWideThresholds(List<IoOveruseAlertThreshold> value);
    method TIRAMISU_0 Builder addSystemWideThresholds(IoOveruseAlertThreshold value);
    method TIRAMISU_0 IoOveruseConfiguration build();
class @hide @SystemApi ResourceOveruseConfiguration package android.car.watchdog
    field TIRAMISU_0 int COMPONENT_TYPE_SYSTEM = 1;
    field TIRAMISU_0 int COMPONENT_TYPE_VENDOR = 2;
    field TIRAMISU_0 int COMPONENT_TYPE_THIRD_PARTY = 3;
    field TIRAMISU_0 String APPLICATION_CATEGORY_TYPE_MAPS = "android.car.watchdog.app.category.MAPS";
    field TIRAMISU_0 String APPLICATION_CATEGORY_TYPE_MEDIA = "android.car.watchdog.app.category.MEDIA";
    field TIRAMISU_0 Parcelable.Creator<ResourceOveruseConfiguration> CREATOR;
    method TIRAMISU_0 @hiddenOnly String componentTypeToString(int value);
    method TIRAMISU_0 int getComponentType();
    method TIRAMISU_0 List<String> getSafeToKillPackages();
    method TIRAMISU_0 List<String> getVendorPackagePrefixes();
    method TIRAMISU_0 Map<String,String> getPackagesToAppCategoryTypes();
    method TIRAMISU_0 IoOveruseConfiguration getIoOveruseConfiguration();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 void writeToParcel(android.os.Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class ResourceOveruseConfiguration.Builder package android.car.watchdog
    method TIRAMISU_0 Builder setComponentType(int value);
    method TIRAMISU_0 Builder setSafeToKillPackages(List<String> value);
    method TIRAMISU_0 Builder addSafeToKillPackages(String value);
    method TIRAMISU_0 Builder setVendorPackagePrefixes(List<String> value);
    method TIRAMISU_0 Builder addVendorPackagePrefixes(String value);
    method TIRAMISU_0 Builder setPackagesToAppCategoryTypes(Map<String,String> value);
    method TIRAMISU_0 Builder addPackagesToAppCategoryTypes(String key, String value);
    method TIRAMISU_0 Builder setIoOveruseConfiguration(IoOveruseConfiguration value);
    method TIRAMISU_0 ResourceOveruseConfiguration build();
class PerStateBytes package android.car.watchdog
    field TIRAMISU_0 Parcelable.Creator<PerStateBytes> CREATOR;
    method TIRAMISU_0 long getForegroundModeBytes();
    method TIRAMISU_0 long getBackgroundModeBytes();
    method TIRAMISU_0 long getGarageModeBytes();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 void writeToParcel(android.os.Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class @hide @SystemApi PackageKillableState package android.car.watchdog
    field TIRAMISU_0 int KILLABLE_STATE_YES = 1;
    field TIRAMISU_0 int KILLABLE_STATE_NO = 2;
    field TIRAMISU_0 int KILLABLE_STATE_NEVER = 3;
    field TIRAMISU_0 Parcelable.Creator<PackageKillableState> CREATOR;
    method TIRAMISU_0 @hiddenOnly String killableStateToString(int value);
    method TIRAMISU_0 String getPackageName();
    method TIRAMISU_0 int getUserId();
    method TIRAMISU_0 int getKillableState();
    method TIRAMISU_0 String toString();
    method TIRAMISU_0 void writeToParcel(android.os.Parcel dest, int flags);
    method TIRAMISU_0 int describeContents();
class CarAppFocusManager package android.car
    field TIRAMISU_0 int APP_FOCUS_TYPE_NAVIGATION = 1;
    field TIRAMISU_0 int APP_FOCUS_TYPE_VOICE_COMMAND = 2;
    field TIRAMISU_0 @hiddenOnly int APP_FOCUS_MAX = 2;
    field TIRAMISU_0 int APP_FOCUS_REQUEST_FAILED = 0;
    field TIRAMISU_0 int APP_FOCUS_REQUEST_SUCCEEDED = 1;
    method TIRAMISU_0 void addFocusListener(OnAppFocusChangedListener listener, int appType);
    method TIRAMISU_0 void removeFocusListener(OnAppFocusChangedListener listener, int appType);
    method TIRAMISU_0 void removeFocusListener(OnAppFocusChangedListener listener);
    method TIRAMISU_0 @hiddenOnly int[] getActiveAppTypes();
    method TIRAMISU_0 @hiddenOnly List<String> getAppTypeOwner(int appType);
    method TIRAMISU_0 boolean isOwningFocus(OnAppFocusOwnershipCallback callback, int appType);
    method TIRAMISU_0 int requestAppFocus(int appType, OnAppFocusOwnershipCallback ownershipCallback);
    method TIRAMISU_0 void abandonAppFocus(OnAppFocusOwnershipCallback ownershipCallback, int appType);
    method TIRAMISU_0 void abandonAppFocus(OnAppFocusOwnershipCallback ownershipCallback);
    method TIRAMISU_0 @hiddenOnly void onCarDisconnected();
interface CarAppFocusManager.OnAppFocusChangedListener package android.car
    method TIRAMISU_0 void onAppFocusChanged(int appType, boolean active);
interface CarAppFocusManager.OnAppFocusOwnershipCallback package android.car
    method TIRAMISU_0 void onAppFocusOwnershipLost(int appType);
    method TIRAMISU_0 void onAppFocusOwnershipGranted(int appType);
class CarVersion package android.car
    field TIRAMISU_1 Parcelable.Creator<CarVersion> CREATOR;
    method TIRAMISU_1 CarVersion forMajorAndMinorVersions(int majorVersion, int minorVersion);
    method TIRAMISU_1 CarVersion forMajorVersion(int majorVersion);
    method TIRAMISU_1 int describeContents();
    method TIRAMISU_1 void writeToParcel(Parcel dest, int flags);
class CarVersion.VERSION_CODES package android.car
    field TIRAMISU_1 CarVersion TIRAMISU_0 = forMajorAndMinorVersions(Build.VERSION_CODES.TIRAMISU, 0);
    field TIRAMISU_1 CarVersion TIRAMISU_1 = forMajorAndMinorVersions(Build.VERSION_CODES.TIRAMISU, 1);
